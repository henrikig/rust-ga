<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="662" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="645.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="645.00"> </text><svg id="frames" x="10" width="1180" total_samples="120608"><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.01%)</title><rect x="0.0323%" y="277" width="0.0108%" height="15" fill="rgb(227,0,7)" fg:x="39" fg:w="13"/><text x="0.2823%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.03%)</title><rect x="0.0240%" y="293" width="0.0274%" height="15" fill="rgb(217,0,24)" fg:x="29" fg:w="33"/><text x="0.2740%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.01%)</title><rect x="0.0854%" y="261" width="0.0108%" height="15" fill="rgb(221,193,54)" fg:x="103" fg:w="13"/><text x="0.3354%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (65 samples, 0.05%)</title><rect x="0.0514%" y="293" width="0.0539%" height="15" fill="rgb(248,212,6)" fg:x="62" fg:w="65"/><text x="0.3014%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (44 samples, 0.04%)</title><rect x="0.0688%" y="277" width="0.0365%" height="15" fill="rgb(208,68,35)" fg:x="83" fg:w="44"/><text x="0.3188%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (17 samples, 0.01%)</title><rect x="0.1078%" y="293" width="0.0141%" height="15" fill="rgb(232,128,0)" fg:x="130" fg:w="17"/><text x="0.3578%" y="303.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (22 samples, 0.02%)</title><rect x="0.1277%" y="293" width="0.0182%" height="15" fill="rgb(207,160,47)" fg:x="154" fg:w="22"/><text x="0.3777%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (15 samples, 0.01%)</title><rect x="0.1335%" y="277" width="0.0124%" height="15" fill="rgb(228,23,34)" fg:x="161" fg:w="15"/><text x="0.3835%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (26 samples, 0.02%)</title><rect x="0.1932%" y="245" width="0.0216%" height="15" fill="rgb(218,30,26)" fg:x="233" fg:w="26"/><text x="0.4432%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (66 samples, 0.05%)</title><rect x="0.1708%" y="261" width="0.0547%" height="15" fill="rgb(220,122,19)" fg:x="206" fg:w="66"/><text x="0.4208%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (36 samples, 0.03%)</title><rect x="0.3084%" y="229" width="0.0298%" height="15" fill="rgb(250,228,42)" fg:x="372" fg:w="36"/><text x="0.5584%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (166 samples, 0.14%)</title><rect x="0.2255%" y="261" width="0.1376%" height="15" fill="rgb(240,193,28)" fg:x="272" fg:w="166"/><text x="0.4755%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (125 samples, 0.10%)</title><rect x="0.2595%" y="245" width="0.1036%" height="15" fill="rgb(216,20,37)" fg:x="313" fg:w="125"/><text x="0.5095%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (30 samples, 0.02%)</title><rect x="0.3383%" y="229" width="0.0249%" height="15" fill="rgb(206,188,39)" fg:x="408" fg:w="30"/><text x="0.5883%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.03%)</title><rect x="1.3697%" y="229" width="0.0282%" height="15" fill="rgb(217,207,13)" fg:x="1652" fg:w="34"/><text x="1.6197%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.02%)</title><rect x="1.3813%" y="213" width="0.0166%" height="15" fill="rgb(231,73,38)" fg:x="1666" fg:w="20"/><text x="1.6313%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (43 samples, 0.04%)</title><rect x="1.5024%" y="197" width="0.0357%" height="15" fill="rgb(225,20,46)" fg:x="1812" fg:w="43"/><text x="1.7524%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (266 samples, 0.22%)</title><rect x="1.3979%" y="229" width="0.2205%" height="15" fill="rgb(210,31,41)" fg:x="1686" fg:w="266"/><text x="1.6479%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (258 samples, 0.21%)</title><rect x="1.4046%" y="213" width="0.2139%" height="15" fill="rgb(221,200,47)" fg:x="1694" fg:w="258"/><text x="1.6546%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (96 samples, 0.08%)</title><rect x="1.5389%" y="197" width="0.0796%" height="15" fill="rgb(226,26,5)" fg:x="1856" fg:w="96"/><text x="1.7889%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (29 samples, 0.02%)</title><rect x="1.5944%" y="181" width="0.0240%" height="15" fill="rgb(249,33,26)" fg:x="1923" fg:w="29"/><text x="1.8444%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (351 samples, 0.29%)</title><rect x="1.3291%" y="245" width="0.2910%" height="15" fill="rgb(235,183,28)" fg:x="1603" fg:w="351"/><text x="1.5791%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.02%)</title><rect x="1.6608%" y="229" width="0.0224%" height="15" fill="rgb(221,5,38)" fg:x="2003" fg:w="27"/><text x="1.9108%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (22 samples, 0.02%)</title><rect x="1.6649%" y="213" width="0.0182%" height="15" fill="rgb(247,18,42)" fg:x="2008" fg:w="22"/><text x="1.9149%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (67 samples, 0.06%)</title><rect x="1.6292%" y="245" width="0.0556%" height="15" fill="rgb(241,131,45)" fg:x="1965" fg:w="67"/><text x="1.8792%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (27 samples, 0.02%)</title><rect x="1.7727%" y="213" width="0.0224%" height="15" fill="rgb(249,31,29)" fg:x="2138" fg:w="27"/><text x="2.0227%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (149 samples, 0.12%)</title><rect x="1.6848%" y="245" width="0.1235%" height="15" fill="rgb(225,111,53)" fg:x="2032" fg:w="149"/><text x="1.9348%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (97 samples, 0.08%)</title><rect x="1.7279%" y="229" width="0.0804%" height="15" fill="rgb(238,160,17)" fg:x="2084" fg:w="97"/><text x="1.9779%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.01%)</title><rect x="1.7951%" y="213" width="0.0133%" height="15" fill="rgb(214,148,48)" fg:x="2165" fg:w="16"/><text x="2.0451%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (41 samples, 0.03%)</title><rect x="1.8282%" y="245" width="0.0340%" height="15" fill="rgb(232,36,49)" fg:x="2205" fg:w="41"/><text x="2.0782%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.03%)</title><rect x="2.1740%" y="229" width="0.0274%" height="15" fill="rgb(209,103,24)" fg:x="2622" fg:w="33"/><text x="2.4240%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.02%)</title><rect x="2.1798%" y="213" width="0.0216%" height="15" fill="rgb(229,88,8)" fg:x="2629" fg:w="26"/><text x="2.4298%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.02%)</title><rect x="2.1814%" y="197" width="0.0199%" height="15" fill="rgb(213,181,19)" fg:x="2631" fg:w="24"/><text x="2.4314%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.01%)</title><rect x="2.1906%" y="181" width="0.0108%" height="15" fill="rgb(254,191,54)" fg:x="2642" fg:w="13"/><text x="2.4406%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (32 samples, 0.03%)</title><rect x="2.2072%" y="213" width="0.0265%" height="15" fill="rgb(241,83,37)" fg:x="2662" fg:w="32"/><text x="2.4572%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.03%)</title><rect x="2.2013%" y="229" width="0.0332%" height="15" fill="rgb(233,36,39)" fg:x="2655" fg:w="40"/><text x="2.4513%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (24 samples, 0.02%)</title><rect x="2.2411%" y="229" width="0.0199%" height="15" fill="rgb(226,3,54)" fg:x="2703" fg:w="24"/><text x="2.4911%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.01%)</title><rect x="2.2619%" y="229" width="0.0149%" height="15" fill="rgb(245,192,40)" fg:x="2728" fg:w="18"/><text x="2.5119%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (45 samples, 0.04%)</title><rect x="2.2768%" y="229" width="0.0373%" height="15" fill="rgb(238,167,29)" fg:x="2746" fg:w="45"/><text x="2.5268%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (38 samples, 0.03%)</title><rect x="2.2826%" y="213" width="0.0315%" height="15" fill="rgb(232,182,51)" fg:x="2753" fg:w="38"/><text x="2.5326%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.03%)</title><rect x="2.2843%" y="197" width="0.0298%" height="15" fill="rgb(231,60,39)" fg:x="2755" fg:w="36"/><text x="2.5343%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.02%)</title><rect x="2.2909%" y="181" width="0.0232%" height="15" fill="rgb(208,69,12)" fg:x="2763" fg:w="28"/><text x="2.5409%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.02%)</title><rect x="2.2917%" y="165" width="0.0224%" height="15" fill="rgb(235,93,37)" fg:x="2764" fg:w="27"/><text x="2.5417%" y="175.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (2,617 samples, 2.17%)</title><rect x="0.1459%" y="293" width="2.1698%" height="15" fill="rgb(213,116,39)" fg:x="176" fg:w="2617"/><text x="0.3959%" y="303.50">t..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,605 samples, 2.16%)</title><rect x="0.1559%" y="277" width="2.1599%" height="15" fill="rgb(222,207,29)" fg:x="188" fg:w="2605"/><text x="0.4059%" y="287.50">t..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,310 samples, 1.92%)</title><rect x="0.4005%" y="261" width="1.9153%" height="15" fill="rgb(206,96,30)" fg:x="483" fg:w="2310"/><text x="0.6505%" y="271.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (535 samples, 0.44%)</title><rect x="1.8722%" y="245" width="0.4436%" height="15" fill="rgb(218,138,4)" fg:x="2258" fg:w="535"/><text x="2.1222%" y="255.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (30 samples, 0.02%)</title><rect x="2.3191%" y="293" width="0.0249%" height="15" fill="rgb(250,191,14)" fg:x="2797" fg:w="30"/><text x="2.5691%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.02%)</title><rect x="2.7453%" y="261" width="0.0199%" height="15" fill="rgb(239,60,40)" fg:x="3311" fg:w="24"/><text x="2.9953%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.01%)</title><rect x="2.7511%" y="245" width="0.0141%" height="15" fill="rgb(206,27,48)" fg:x="3318" fg:w="17"/><text x="3.0011%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.01%)</title><rect x="2.7992%" y="229" width="0.0116%" height="15" fill="rgb(225,35,8)" fg:x="3376" fg:w="14"/><text x="3.0492%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.08%)</title><rect x="2.7652%" y="261" width="0.0755%" height="15" fill="rgb(250,213,24)" fg:x="3335" fg:w="91"/><text x="3.0152%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (88 samples, 0.07%)</title><rect x="2.7676%" y="245" width="0.0730%" height="15" fill="rgb(247,123,22)" fg:x="3338" fg:w="88"/><text x="3.0176%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (35 samples, 0.03%)</title><rect x="2.8116%" y="229" width="0.0290%" height="15" fill="rgb(231,138,38)" fg:x="3391" fg:w="35"/><text x="3.0616%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (129 samples, 0.11%)</title><rect x="2.7345%" y="277" width="0.1070%" height="15" fill="rgb(231,145,46)" fg:x="3298" fg:w="129"/><text x="2.9845%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.02%)</title><rect x="2.8448%" y="277" width="0.0207%" height="15" fill="rgb(251,118,11)" fg:x="3431" fg:w="25"/><text x="3.0948%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.01%)</title><rect x="2.8945%" y="245" width="0.0141%" height="15" fill="rgb(217,147,25)" fg:x="3491" fg:w="17"/><text x="3.1445%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (62 samples, 0.05%)</title><rect x="2.8655%" y="277" width="0.0514%" height="15" fill="rgb(247,81,37)" fg:x="3456" fg:w="62"/><text x="3.1155%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.04%)</title><rect x="2.8812%" y="261" width="0.0357%" height="15" fill="rgb(209,12,38)" fg:x="3475" fg:w="43"/><text x="3.1312%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.01%)</title><rect x="2.9177%" y="277" width="0.0116%" height="15" fill="rgb(227,1,9)" fg:x="3519" fg:w="14"/><text x="3.1677%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="3.0512%" y="261" width="0.0149%" height="15" fill="rgb(248,47,43)" fg:x="3680" fg:w="18"/><text x="3.3012%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="3.0537%" y="245" width="0.0124%" height="15" fill="rgb(221,10,30)" fg:x="3683" fg:w="15"/><text x="3.3037%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.01%)</title><rect x="3.0545%" y="229" width="0.0116%" height="15" fill="rgb(210,229,1)" fg:x="3684" fg:w="14"/><text x="3.3045%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="3.0661%" y="261" width="0.0166%" height="15" fill="rgb(222,148,37)" fg:x="3698" fg:w="20"/><text x="3.3161%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.01%)</title><rect x="3.0686%" y="245" width="0.0141%" height="15" fill="rgb(234,67,33)" fg:x="3701" fg:w="17"/><text x="3.3186%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="3.0835%" y="261" width="0.0108%" height="15" fill="rgb(247,98,35)" fg:x="3719" fg:w="13"/><text x="3.3335%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.01%)</title><rect x="3.0968%" y="261" width="0.0133%" height="15" fill="rgb(247,138,52)" fg:x="3735" fg:w="16"/><text x="3.3468%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (935 samples, 0.78%)</title><rect x="2.3464%" y="293" width="0.7752%" height="15" fill="rgb(213,79,30)" fg:x="2830" fg:w="935"/><text x="2.5964%" y="303.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (230 samples, 0.19%)</title><rect x="2.9310%" y="277" width="0.1907%" height="15" fill="rgb(246,177,23)" fg:x="3535" fg:w="230"/><text x="3.1810%" y="287.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="3.1101%" y="261" width="0.0116%" height="15" fill="rgb(230,62,27)" fg:x="3751" fg:w="14"/><text x="3.3601%" y="271.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="3.1109%" y="245" width="0.0108%" height="15" fill="rgb(216,154,8)" fg:x="3752" fg:w="13"/><text x="3.3609%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.01%)</title><rect x="3.1308%" y="277" width="0.0141%" height="15" fill="rgb(244,35,45)" fg:x="3776" fg:w="17"/><text x="3.3808%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.03%)</title><rect x="3.2510%" y="261" width="0.0298%" height="15" fill="rgb(251,115,12)" fg:x="3921" fg:w="36"/><text x="3.5010%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.02%)</title><rect x="3.2601%" y="245" width="0.0207%" height="15" fill="rgb(240,54,50)" fg:x="3932" fg:w="25"/><text x="3.5101%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="3.2610%" y="229" width="0.0199%" height="15" fill="rgb(233,84,52)" fg:x="3933" fg:w="24"/><text x="3.5110%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.01%)</title><rect x="3.2908%" y="261" width="0.0149%" height="15" fill="rgb(207,117,47)" fg:x="3969" fg:w="18"/><text x="3.5408%" y="271.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (282 samples, 0.23%)</title><rect x="3.1217%" y="293" width="0.2338%" height="15" fill="rgb(249,43,39)" fg:x="3765" fg:w="282"/><text x="3.3717%" y="303.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (249 samples, 0.21%)</title><rect x="3.1490%" y="277" width="0.2065%" height="15" fill="rgb(209,38,44)" fg:x="3798" fg:w="249"/><text x="3.3990%" y="287.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (55 samples, 0.05%)</title><rect x="3.3099%" y="261" width="0.0456%" height="15" fill="rgb(236,212,23)" fg:x="3992" fg:w="55"/><text x="3.5599%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.01%)</title><rect x="3.3804%" y="213" width="0.0149%" height="15" fill="rgb(242,79,21)" fg:x="4077" fg:w="18"/><text x="3.6304%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (44 samples, 0.04%)</title><rect x="3.3713%" y="229" width="0.0365%" height="15" fill="rgb(211,96,35)" fg:x="4066" fg:w="44"/><text x="3.6213%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="3.4484%" y="197" width="0.0116%" height="15" fill="rgb(253,215,40)" fg:x="4159" fg:w="14"/><text x="3.6984%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (77 samples, 0.06%)</title><rect x="3.4077%" y="229" width="0.0638%" height="15" fill="rgb(211,81,21)" fg:x="4110" fg:w="77"/><text x="3.6577%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.04%)</title><rect x="3.4301%" y="213" width="0.0415%" height="15" fill="rgb(208,190,38)" fg:x="4137" fg:w="50"/><text x="3.6801%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.01%)</title><rect x="3.4600%" y="197" width="0.0116%" height="15" fill="rgb(235,213,38)" fg:x="4173" fg:w="14"/><text x="3.7100%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.01%)</title><rect x="3.4782%" y="229" width="0.0133%" height="15" fill="rgb(237,122,38)" fg:x="4195" fg:w="16"/><text x="3.7282%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (53 samples, 0.04%)</title><rect x="3.9201%" y="197" width="0.0439%" height="15" fill="rgb(244,218,35)" fg:x="4728" fg:w="53"/><text x="4.1701%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (46 samples, 0.04%)</title><rect x="3.9259%" y="181" width="0.0381%" height="15" fill="rgb(240,68,47)" fg:x="4735" fg:w="46"/><text x="4.1759%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.02%)</title><rect x="3.9458%" y="165" width="0.0182%" height="15" fill="rgb(210,16,53)" fg:x="4759" fg:w="22"/><text x="4.1958%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (165 samples, 0.14%)</title><rect x="3.9011%" y="213" width="0.1368%" height="15" fill="rgb(235,124,12)" fg:x="4705" fg:w="165"/><text x="4.1511%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (89 samples, 0.07%)</title><rect x="3.9641%" y="197" width="0.0738%" height="15" fill="rgb(224,169,11)" fg:x="4781" fg:w="89"/><text x="4.2141%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (88 samples, 0.07%)</title><rect x="3.9649%" y="181" width="0.0730%" height="15" fill="rgb(250,166,2)" fg:x="4782" fg:w="88"/><text x="4.2149%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (31 samples, 0.03%)</title><rect x="4.0122%" y="165" width="0.0257%" height="15" fill="rgb(242,216,29)" fg:x="4839" fg:w="31"/><text x="4.2622%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.03%)</title><rect x="4.0437%" y="213" width="0.0282%" height="15" fill="rgb(230,116,27)" fg:x="4877" fg:w="34"/><text x="4.2937%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (54 samples, 0.04%)</title><rect x="4.0719%" y="213" width="0.0448%" height="15" fill="rgb(228,99,48)" fg:x="4911" fg:w="54"/><text x="4.3219%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.03%)</title><rect x="4.0860%" y="197" width="0.0307%" height="15" fill="rgb(253,11,6)" fg:x="4928" fg:w="37"/><text x="4.3360%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.01%)</title><rect x="4.1357%" y="213" width="0.0124%" height="15" fill="rgb(247,143,39)" fg:x="4988" fg:w="15"/><text x="4.3857%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="4.2684%" y="197" width="0.0133%" height="15" fill="rgb(236,97,10)" fg:x="5148" fg:w="16"/><text x="4.5184%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.02%)</title><rect x="4.2816%" y="197" width="0.0199%" height="15" fill="rgb(233,208,19)" fg:x="5164" fg:w="24"/><text x="4.5316%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.02%)</title><rect x="4.2841%" y="181" width="0.0174%" height="15" fill="rgb(216,164,2)" fg:x="5167" fg:w="21"/><text x="4.5341%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="4.3140%" y="197" width="0.0158%" height="15" fill="rgb(220,129,5)" fg:x="5203" fg:w="19"/><text x="4.5640%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.02%)</title><rect x="4.3388%" y="165" width="0.0166%" height="15" fill="rgb(242,17,10)" fg:x="5233" fg:w="20"/><text x="4.5888%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.01%)</title><rect x="4.3413%" y="149" width="0.0141%" height="15" fill="rgb(242,107,0)" fg:x="5236" fg:w="17"/><text x="4.5913%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.01%)</title><rect x="4.3430%" y="133" width="0.0124%" height="15" fill="rgb(251,28,31)" fg:x="5238" fg:w="15"/><text x="4.5930%" y="143.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (33 samples, 0.03%)</title><rect x="4.3297%" y="197" width="0.0274%" height="15" fill="rgb(233,223,10)" fg:x="5222" fg:w="33"/><text x="4.5797%" y="207.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (22 samples, 0.02%)</title><rect x="4.3388%" y="181" width="0.0182%" height="15" fill="rgb(215,21,27)" fg:x="5233" fg:w="22"/><text x="4.5888%" y="191.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,208 samples, 1.00%)</title><rect x="3.3563%" y="277" width="1.0016%" height="15" fill="rgb(232,23,21)" fg:x="4048" fg:w="1208"/><text x="3.6063%" y="287.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (1,208 samples, 1.00%)</title><rect x="3.3563%" y="261" width="1.0016%" height="15" fill="rgb(244,5,23)" fg:x="4048" fg:w="1208"/><text x="3.6063%" y="271.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,199 samples, 0.99%)</title><rect x="3.3638%" y="245" width="0.9941%" height="15" fill="rgb(226,81,46)" fg:x="4057" fg:w="1199"/><text x="3.6138%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,030 samples, 0.85%)</title><rect x="3.5039%" y="229" width="0.8540%" height="15" fill="rgb(247,70,30)" fg:x="4226" fg:w="1030"/><text x="3.7539%" y="239.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (248 samples, 0.21%)</title><rect x="4.1523%" y="213" width="0.2056%" height="15" fill="rgb(212,68,19)" fg:x="5008" fg:w="248"/><text x="4.4023%" y="223.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (1,215 samples, 1.01%)</title><rect x="3.3555%" y="293" width="1.0074%" height="15" fill="rgb(240,187,13)" fg:x="4047" fg:w="1215"/><text x="3.6055%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (25 samples, 0.02%)</title><rect x="4.3629%" y="293" width="0.0207%" height="15" fill="rgb(223,113,26)" fg:x="5262" fg:w="25"/><text x="4.6129%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (18 samples, 0.01%)</title><rect x="4.3687%" y="277" width="0.0149%" height="15" fill="rgb(206,192,2)" fg:x="5269" fg:w="18"/><text x="4.6187%" y="287.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (5,287 samples, 4.38%)</title><rect x="0.0033%" y="357" width="4.3836%" height="15" fill="rgb(241,108,4)" fg:x="4" fg:w="5287"/><text x="0.2533%" y="367.50">tio49..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5,287 samples, 4.38%)</title><rect x="0.0033%" y="341" width="4.3836%" height="15" fill="rgb(247,173,49)" fg:x="4" fg:w="5287"/><text x="0.2533%" y="351.50">tio49..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5,287 samples, 4.38%)</title><rect x="0.0033%" y="325" width="4.3836%" height="15" fill="rgb(224,114,35)" fg:x="4" fg:w="5287"/><text x="0.2533%" y="335.50">tio49..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (5,279 samples, 4.38%)</title><rect x="0.0099%" y="309" width="4.3770%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="5279"/><text x="0.2599%" y="319.50">tio49..</text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="4.4052%" y="277" width="0.0149%" height="15" fill="rgb(245,172,44)" fg:x="5313" fg:w="18"/><text x="4.6552%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.02%)</title><rect x="4.4201%" y="277" width="0.0224%" height="15" fill="rgb(236,23,11)" fg:x="5331" fg:w="27"/><text x="4.6701%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.01%)</title><rect x="4.4309%" y="261" width="0.0116%" height="15" fill="rgb(205,117,38)" fg:x="5344" fg:w="14"/><text x="4.6809%" y="271.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (22 samples, 0.02%)</title><rect x="4.4524%" y="277" width="0.0182%" height="15" fill="rgb(237,72,25)" fg:x="5370" fg:w="22"/><text x="4.7024%" y="287.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (14 samples, 0.01%)</title><rect x="4.4591%" y="261" width="0.0116%" height="15" fill="rgb(244,70,9)" fg:x="5378" fg:w="14"/><text x="4.7091%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.01%)</title><rect x="4.4972%" y="229" width="0.0133%" height="15" fill="rgb(217,125,39)" fg:x="5424" fg:w="16"/><text x="4.7472%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (47 samples, 0.04%)</title><rect x="4.4881%" y="245" width="0.0390%" height="15" fill="rgb(235,36,10)" fg:x="5413" fg:w="47"/><text x="4.7381%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="4.5138%" y="229" width="0.0133%" height="15" fill="rgb(251,123,47)" fg:x="5444" fg:w="16"/><text x="4.7638%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.01%)</title><rect x="4.5155%" y="213" width="0.0116%" height="15" fill="rgb(221,13,13)" fg:x="5446" fg:w="14"/><text x="4.7655%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (81 samples, 0.07%)</title><rect x="4.5271%" y="245" width="0.0672%" height="15" fill="rgb(238,131,9)" fg:x="5460" fg:w="81"/><text x="4.7771%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.04%)</title><rect x="4.5494%" y="229" width="0.0448%" height="15" fill="rgb(211,50,8)" fg:x="5487" fg:w="54"/><text x="4.7994%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.02%)</title><rect x="4.5776%" y="213" width="0.0166%" height="15" fill="rgb(245,182,24)" fg:x="5521" fg:w="20"/><text x="4.8276%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.02%)</title><rect x="5.0917%" y="213" width="0.0207%" height="15" fill="rgb(242,14,37)" fg:x="6141" fg:w="25"/><text x="5.3417%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.01%)</title><rect x="5.0975%" y="197" width="0.0149%" height="15" fill="rgb(246,228,12)" fg:x="6148" fg:w="18"/><text x="5.3475%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.01%)</title><rect x="5.1696%" y="181" width="0.0116%" height="15" fill="rgb(213,55,15)" fg:x="6235" fg:w="14"/><text x="5.4196%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (160 samples, 0.13%)</title><rect x="5.1124%" y="213" width="0.1327%" height="15" fill="rgb(209,9,3)" fg:x="6166" fg:w="160"/><text x="5.3624%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (153 samples, 0.13%)</title><rect x="5.1182%" y="197" width="0.1269%" height="15" fill="rgb(230,59,30)" fg:x="6173" fg:w="153"/><text x="5.3682%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (76 samples, 0.06%)</title><rect x="5.1821%" y="181" width="0.0630%" height="15" fill="rgb(209,121,21)" fg:x="6250" fg:w="76"/><text x="5.4321%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (40 samples, 0.03%)</title><rect x="5.2119%" y="165" width="0.0332%" height="15" fill="rgb(220,109,13)" fg:x="6286" fg:w="40"/><text x="5.4619%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (212 samples, 0.18%)</title><rect x="5.0701%" y="229" width="0.1758%" height="15" fill="rgb(232,18,1)" fg:x="6115" fg:w="212"/><text x="5.3201%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.03%)</title><rect x="5.2501%" y="229" width="0.0274%" height="15" fill="rgb(215,41,42)" fg:x="6332" fg:w="33"/><text x="5.5001%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="5.2642%" y="213" width="0.0133%" height="15" fill="rgb(224,123,36)" fg:x="6349" fg:w="16"/><text x="5.5142%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.01%)</title><rect x="5.2650%" y="197" width="0.0124%" height="15" fill="rgb(240,125,3)" fg:x="6350" fg:w="15"/><text x="5.5150%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.01%)</title><rect x="5.3181%" y="197" width="0.0124%" height="15" fill="rgb(205,98,50)" fg:x="6414" fg:w="15"/><text x="5.5681%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (66 samples, 0.05%)</title><rect x="5.2774%" y="229" width="0.0547%" height="15" fill="rgb(205,185,37)" fg:x="6365" fg:w="66"/><text x="5.5274%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.04%)</title><rect x="5.2940%" y="213" width="0.0381%" height="15" fill="rgb(238,207,15)" fg:x="6385" fg:w="46"/><text x="5.5440%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.01%)</title><rect x="5.3462%" y="229" width="0.0149%" height="15" fill="rgb(213,199,42)" fg:x="6448" fg:w="18"/><text x="5.5962%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.02%)</title><rect x="5.5129%" y="213" width="0.0166%" height="15" fill="rgb(235,201,11)" fg:x="6649" fg:w="20"/><text x="5.7629%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.01%)</title><rect x="5.5146%" y="197" width="0.0149%" height="15" fill="rgb(207,46,11)" fg:x="6651" fg:w="18"/><text x="5.7646%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.01%)</title><rect x="5.5154%" y="181" width="0.0141%" height="15" fill="rgb(241,35,35)" fg:x="6652" fg:w="17"/><text x="5.7654%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.01%)</title><rect x="5.5295%" y="213" width="0.0133%" height="15" fill="rgb(243,32,47)" fg:x="6669" fg:w="16"/><text x="5.7795%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.01%)</title><rect x="5.5452%" y="213" width="0.0133%" height="15" fill="rgb(247,202,23)" fg:x="6688" fg:w="16"/><text x="5.7952%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.01%)</title><rect x="5.5593%" y="213" width="0.0124%" height="15" fill="rgb(219,102,11)" fg:x="6705" fg:w="15"/><text x="5.8093%" y="223.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (1,353 samples, 1.12%)</title><rect x="4.4707%" y="277" width="1.1218%" height="15" fill="rgb(243,110,44)" fg:x="5392" fg:w="1353"/><text x="4.7207%" y="287.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,347 samples, 1.12%)</title><rect x="4.4757%" y="261" width="1.1168%" height="15" fill="rgb(222,74,54)" fg:x="5398" fg:w="1347"/><text x="4.7257%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,165 samples, 0.97%)</title><rect x="4.6266%" y="245" width="0.9659%" height="15" fill="rgb(216,99,12)" fg:x="5580" fg:w="1165"/><text x="4.8766%" y="255.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (274 samples, 0.23%)</title><rect x="5.3653%" y="229" width="0.2272%" height="15" fill="rgb(226,22,26)" fg:x="6471" fg:w="274"/><text x="5.6153%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (25 samples, 0.02%)</title><rect x="5.5718%" y="213" width="0.0207%" height="15" fill="rgb(217,163,10)" fg:x="6720" fg:w="25"/><text x="5.8218%" y="223.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (21 samples, 0.02%)</title><rect x="5.5751%" y="197" width="0.0174%" height="15" fill="rgb(213,25,53)" fg:x="6724" fg:w="21"/><text x="5.8251%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.02%)</title><rect x="5.5767%" y="181" width="0.0158%" height="15" fill="rgb(252,105,26)" fg:x="6726" fg:w="19"/><text x="5.8267%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="5.5801%" y="165" width="0.0124%" height="15" fill="rgb(220,39,43)" fg:x="6730" fg:w="15"/><text x="5.8301%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.01%)</title><rect x="5.5817%" y="149" width="0.0108%" height="15" fill="rgb(229,68,48)" fg:x="6732" fg:w="13"/><text x="5.8317%" y="159.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (39 samples, 0.03%)</title><rect x="5.5933%" y="277" width="0.0323%" height="15" fill="rgb(252,8,32)" fg:x="6746" fg:w="39"/><text x="5.8433%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (81 samples, 0.07%)</title><rect x="5.8346%" y="261" width="0.0672%" height="15" fill="rgb(223,20,43)" fg:x="7037" fg:w="81"/><text x="6.0846%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (65 samples, 0.05%)</title><rect x="5.8479%" y="245" width="0.0539%" height="15" fill="rgb(229,81,49)" fg:x="7053" fg:w="65"/><text x="6.0979%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (62 samples, 0.05%)</title><rect x="5.8504%" y="229" width="0.0514%" height="15" fill="rgb(236,28,36)" fg:x="7056" fg:w="62"/><text x="6.1004%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (25 samples, 0.02%)</title><rect x="5.8810%" y="213" width="0.0207%" height="15" fill="rgb(249,185,26)" fg:x="7093" fg:w="25"/><text x="6.1310%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.03%)</title><rect x="5.9134%" y="261" width="0.0298%" height="15" fill="rgb(249,174,33)" fg:x="7132" fg:w="36"/><text x="6.1634%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.02%)</title><rect x="5.9208%" y="245" width="0.0224%" height="15" fill="rgb(233,201,37)" fg:x="7141" fg:w="27"/><text x="6.1708%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (502 samples, 0.42%)</title><rect x="5.6273%" y="277" width="0.4162%" height="15" fill="rgb(221,78,26)" fg:x="6787" fg:w="502"/><text x="5.8773%" y="287.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (100 samples, 0.08%)</title><rect x="5.9606%" y="261" width="0.0829%" height="15" fill="rgb(250,127,30)" fg:x="7189" fg:w="100"/><text x="6.2106%" y="271.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="6.0319%" y="245" width="0.0116%" height="15" fill="rgb(230,49,44)" fg:x="7275" fg:w="14"/><text x="6.2819%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="6.0941%" y="245" width="0.0116%" height="15" fill="rgb(229,67,23)" fg:x="7350" fg:w="14"/><text x="6.3441%" y="255.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (117 samples, 0.10%)</title><rect x="6.0435%" y="277" width="0.0970%" height="15" fill="rgb(249,83,47)" fg:x="7289" fg:w="117"/><text x="6.2935%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (103 samples, 0.09%)</title><rect x="6.0552%" y="261" width="0.0854%" height="15" fill="rgb(215,43,3)" fg:x="7303" fg:w="103"/><text x="6.3052%" y="271.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (24 samples, 0.02%)</title><rect x="6.1207%" y="245" width="0.0199%" height="15" fill="rgb(238,154,13)" fg:x="7382" fg:w="24"/><text x="6.3707%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.01%)</title><rect x="6.1505%" y="213" width="0.0141%" height="15" fill="rgb(219,56,2)" fg:x="7418" fg:w="17"/><text x="6.4005%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (35 samples, 0.03%)</title><rect x="6.1646%" y="213" width="0.0290%" height="15" fill="rgb(233,0,4)" fg:x="7435" fg:w="35"/><text x="6.4146%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (28 samples, 0.02%)</title><rect x="6.1704%" y="197" width="0.0232%" height="15" fill="rgb(235,30,7)" fg:x="7442" fg:w="28"/><text x="6.4204%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="6.1961%" y="213" width="0.0108%" height="15" fill="rgb(250,79,13)" fg:x="7473" fg:w="13"/><text x="6.4461%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.03%)</title><rect x="6.4175%" y="181" width="0.0265%" height="15" fill="rgb(211,146,34)" fg:x="7740" fg:w="32"/><text x="6.6675%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.02%)</title><rect x="6.4216%" y="165" width="0.0224%" height="15" fill="rgb(228,22,38)" fg:x="7745" fg:w="27"/><text x="6.6716%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (94 samples, 0.08%)</title><rect x="6.4125%" y="197" width="0.0779%" height="15" fill="rgb(235,168,5)" fg:x="7734" fg:w="94"/><text x="6.6625%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.05%)</title><rect x="6.4440%" y="181" width="0.0464%" height="15" fill="rgb(221,155,16)" fg:x="7772" fg:w="56"/><text x="6.6940%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.05%)</title><rect x="6.4440%" y="165" width="0.0464%" height="15" fill="rgb(215,215,53)" fg:x="7772" fg:w="56"/><text x="6.6940%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (28 samples, 0.02%)</title><rect x="6.4672%" y="149" width="0.0232%" height="15" fill="rgb(223,4,10)" fg:x="7800" fg:w="28"/><text x="6.7172%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.01%)</title><rect x="6.4921%" y="197" width="0.0141%" height="15" fill="rgb(234,103,6)" fg:x="7830" fg:w="17"/><text x="6.7421%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.02%)</title><rect x="6.5062%" y="197" width="0.0224%" height="15" fill="rgb(227,97,0)" fg:x="7847" fg:w="27"/><text x="6.7562%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.02%)</title><rect x="6.5120%" y="181" width="0.0166%" height="15" fill="rgb(234,150,53)" fg:x="7854" fg:w="20"/><text x="6.7620%" y="191.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (601 samples, 0.50%)</title><rect x="6.1406%" y="261" width="0.4983%" height="15" fill="rgb(228,201,54)" fg:x="7406" fg:w="601"/><text x="6.3906%" y="271.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (601 samples, 0.50%)</title><rect x="6.1406%" y="245" width="0.4983%" height="15" fill="rgb(222,22,37)" fg:x="7406" fg:w="601"/><text x="6.3906%" y="255.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (598 samples, 0.50%)</title><rect x="6.1430%" y="229" width="0.4958%" height="15" fill="rgb(237,53,32)" fg:x="7409" fg:w="598"/><text x="6.3930%" y="239.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (514 samples, 0.43%)</title><rect x="6.2127%" y="213" width="0.4262%" height="15" fill="rgb(233,25,53)" fg:x="7493" fg:w="514"/><text x="6.4627%" y="223.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (111 samples, 0.09%)</title><rect x="6.5468%" y="197" width="0.0920%" height="15" fill="rgb(210,40,34)" fg:x="7896" fg:w="111"/><text x="6.7968%" y="207.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (604 samples, 0.50%)</title><rect x="6.1406%" y="277" width="0.5008%" height="15" fill="rgb(241,220,44)" fg:x="7406" fg:w="604"/><text x="6.3906%" y="287.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (21 samples, 0.02%)</title><rect x="6.6414%" y="277" width="0.0174%" height="15" fill="rgb(235,28,35)" fg:x="8010" fg:w="21"/><text x="6.8914%" y="287.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (8,032 samples, 6.66%)</title><rect x="0.0033%" y="389" width="6.6596%" height="15" fill="rgb(210,56,17)" fg:x="4" fg:w="8032"/><text x="0.2533%" y="399.50">tio4905`r..</text></g><g><title>tio4905`rayon_core::registry::in_worker (8,032 samples, 6.66%)</title><rect x="0.0033%" y="373" width="6.6596%" height="15" fill="rgb(224,130,29)" fg:x="4" fg:w="8032"/><text x="0.2533%" y="383.50">tio4905`r..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2,745 samples, 2.28%)</title><rect x="4.3869%" y="357" width="2.2760%" height="15" fill="rgb(235,212,8)" fg:x="5291" fg:w="2745"/><text x="4.6369%" y="367.50">t..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (2,745 samples, 2.28%)</title><rect x="4.3869%" y="341" width="2.2760%" height="15" fill="rgb(223,33,50)" fg:x="5291" fg:w="2745"/><text x="4.6369%" y="351.50">t..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2,745 samples, 2.28%)</title><rect x="4.3869%" y="325" width="2.2760%" height="15" fill="rgb(219,149,13)" fg:x="5291" fg:w="2745"/><text x="4.6369%" y="335.50">t..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,745 samples, 2.28%)</title><rect x="4.3869%" y="309" width="2.2760%" height="15" fill="rgb(250,156,29)" fg:x="5291" fg:w="2745"/><text x="4.6369%" y="319.50">t..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (2,741 samples, 2.27%)</title><rect x="4.3903%" y="293" width="2.2727%" height="15" fill="rgb(216,193,19)" fg:x="5295" fg:w="2741"/><text x="4.6403%" y="303.50">t..</text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="6.6828%" y="277" width="0.0149%" height="15" fill="rgb(216,135,14)" fg:x="8060" fg:w="18"/><text x="6.9328%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.02%)</title><rect x="6.6977%" y="277" width="0.0174%" height="15" fill="rgb(241,47,5)" fg:x="8078" fg:w="21"/><text x="6.9477%" y="287.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (51 samples, 0.04%)</title><rect x="6.7218%" y="277" width="0.0423%" height="15" fill="rgb(233,42,35)" fg:x="8107" fg:w="51"/><text x="6.9718%" y="287.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (40 samples, 0.03%)</title><rect x="6.7309%" y="261" width="0.0332%" height="15" fill="rgb(231,13,6)" fg:x="8118" fg:w="40"/><text x="6.9809%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.02%)</title><rect x="6.7765%" y="245" width="0.0249%" height="15" fill="rgb(207,181,40)" fg:x="8173" fg:w="30"/><text x="7.0265%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="6.8329%" y="213" width="0.0133%" height="15" fill="rgb(254,173,49)" fg:x="8241" fg:w="16"/><text x="7.0829%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (68 samples, 0.06%)</title><rect x="6.8014%" y="245" width="0.0564%" height="15" fill="rgb(221,1,38)" fg:x="8203" fg:w="68"/><text x="7.0514%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.04%)</title><rect x="6.8196%" y="229" width="0.0381%" height="15" fill="rgb(206,124,46)" fg:x="8225" fg:w="46"/><text x="7.0696%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.01%)</title><rect x="6.8461%" y="213" width="0.0116%" height="15" fill="rgb(249,21,11)" fg:x="8257" fg:w="14"/><text x="7.0961%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.03%)</title><rect x="7.3660%" y="213" width="0.0298%" height="15" fill="rgb(222,201,40)" fg:x="8884" fg:w="36"/><text x="7.6160%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.02%)</title><rect x="7.3735%" y="197" width="0.0224%" height="15" fill="rgb(235,61,29)" fg:x="8893" fg:w="27"/><text x="7.6235%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (156 samples, 0.13%)</title><rect x="7.3461%" y="229" width="0.1293%" height="15" fill="rgb(219,207,3)" fg:x="8860" fg:w="156"/><text x="7.5961%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (96 samples, 0.08%)</title><rect x="7.3959%" y="213" width="0.0796%" height="15" fill="rgb(222,56,46)" fg:x="8920" fg:w="96"/><text x="7.6459%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (93 samples, 0.08%)</title><rect x="7.3983%" y="197" width="0.0771%" height="15" fill="rgb(239,76,54)" fg:x="8923" fg:w="93"/><text x="7.6483%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.03%)</title><rect x="7.4440%" y="181" width="0.0315%" height="15" fill="rgb(231,124,27)" fg:x="8978" fg:w="38"/><text x="7.6940%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.02%)</title><rect x="7.4804%" y="229" width="0.0232%" height="15" fill="rgb(249,195,6)" fg:x="9022" fg:w="28"/><text x="7.7304%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.02%)</title><rect x="7.5434%" y="197" width="0.0166%" height="15" fill="rgb(237,174,47)" fg:x="9098" fg:w="20"/><text x="7.7934%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (72 samples, 0.06%)</title><rect x="7.5036%" y="229" width="0.0597%" height="15" fill="rgb(206,201,31)" fg:x="9050" fg:w="72"/><text x="7.7536%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (47 samples, 0.04%)</title><rect x="7.5244%" y="213" width="0.0390%" height="15" fill="rgb(231,57,52)" fg:x="9075" fg:w="47"/><text x="7.7744%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.01%)</title><rect x="7.5758%" y="229" width="0.0108%" height="15" fill="rgb(248,177,22)" fg:x="9137" fg:w="13"/><text x="7.8258%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="7.7209%" y="213" width="0.0124%" height="15" fill="rgb(215,211,37)" fg:x="9312" fg:w="15"/><text x="7.9709%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.01%)</title><rect x="7.7217%" y="197" width="0.0116%" height="15" fill="rgb(241,128,51)" fg:x="9313" fg:w="14"/><text x="7.9717%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.01%)</title><rect x="7.7217%" y="181" width="0.0116%" height="15" fill="rgb(227,165,31)" fg:x="9313" fg:w="14"/><text x="7.9717%" y="191.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (1,218 samples, 1.01%)</title><rect x="6.7641%" y="277" width="1.0099%" height="15" fill="rgb(228,167,24)" fg:x="8158" fg:w="1218"/><text x="7.0141%" y="287.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,212 samples, 1.00%)</title><rect x="6.7690%" y="261" width="1.0049%" height="15" fill="rgb(228,143,12)" fg:x="8164" fg:w="1212"/><text x="7.0190%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,079 samples, 0.89%)</title><rect x="6.8793%" y="245" width="0.8946%" height="15" fill="rgb(249,149,8)" fg:x="8297" fg:w="1079"/><text x="7.1293%" y="255.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (223 samples, 0.18%)</title><rect x="7.5890%" y="229" width="0.1849%" height="15" fill="rgb(243,35,44)" fg:x="9153" fg:w="223"/><text x="7.8390%" y="239.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (45 samples, 0.04%)</title><rect x="7.7748%" y="277" width="0.0373%" height="15" fill="rgb(246,89,9)" fg:x="9377" fg:w="45"/><text x="8.0248%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.03%)</title><rect x="7.9530%" y="261" width="0.0348%" height="15" fill="rgb(233,213,13)" fg:x="9592" fg:w="42"/><text x="8.2030%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.02%)</title><rect x="7.9655%" y="245" width="0.0224%" height="15" fill="rgb(233,141,41)" fg:x="9607" fg:w="27"/><text x="8.2155%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.02%)</title><rect x="7.9655%" y="229" width="0.0224%" height="15" fill="rgb(239,167,4)" fg:x="9607" fg:w="27"/><text x="8.2155%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.01%)</title><rect x="7.9978%" y="261" width="0.0133%" height="15" fill="rgb(209,217,16)" fg:x="9646" fg:w="16"/><text x="8.2478%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (325 samples, 0.27%)</title><rect x="7.8129%" y="277" width="0.2695%" height="15" fill="rgb(219,88,35)" fg:x="9423" fg:w="325"/><text x="8.0629%" y="287.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (79 samples, 0.07%)</title><rect x="8.0169%" y="261" width="0.0655%" height="15" fill="rgb(220,193,23)" fg:x="9669" fg:w="79"/><text x="8.2669%" y="271.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (96 samples, 0.08%)</title><rect x="8.0824%" y="277" width="0.0796%" height="15" fill="rgb(230,90,52)" fg:x="9748" fg:w="96"/><text x="8.3324%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (89 samples, 0.07%)</title><rect x="8.0882%" y="261" width="0.0738%" height="15" fill="rgb(252,106,19)" fg:x="9755" fg:w="89"/><text x="8.3382%" y="271.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (22 samples, 0.02%)</title><rect x="8.1437%" y="245" width="0.0182%" height="15" fill="rgb(206,74,20)" fg:x="9822" fg:w="22"/><text x="8.3937%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.01%)</title><rect x="8.1935%" y="197" width="0.0149%" height="15" fill="rgb(230,138,44)" fg:x="9882" fg:w="18"/><text x="8.4435%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.01%)</title><rect x="8.2101%" y="197" width="0.0108%" height="15" fill="rgb(235,182,43)" fg:x="9902" fg:w="13"/><text x="8.4601%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.04%)</title><rect x="8.1844%" y="213" width="0.0373%" height="15" fill="rgb(242,16,51)" fg:x="9871" fg:w="45"/><text x="8.4344%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (50 samples, 0.04%)</title><rect x="8.2217%" y="213" width="0.0415%" height="15" fill="rgb(248,9,4)" fg:x="9916" fg:w="50"/><text x="8.4717%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.03%)</title><rect x="8.2358%" y="197" width="0.0274%" height="15" fill="rgb(210,31,22)" fg:x="9933" fg:w="33"/><text x="8.4858%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (47 samples, 0.04%)</title><rect x="8.6130%" y="181" width="0.0390%" height="15" fill="rgb(239,54,39)" fg:x="10388" fg:w="47"/><text x="8.8630%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (36 samples, 0.03%)</title><rect x="8.6221%" y="165" width="0.0298%" height="15" fill="rgb(230,99,41)" fg:x="10399" fg:w="36"/><text x="8.8721%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.01%)</title><rect x="8.6387%" y="149" width="0.0133%" height="15" fill="rgb(253,106,12)" fg:x="10419" fg:w="16"/><text x="8.8887%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (169 samples, 0.14%)</title><rect x="8.6031%" y="197" width="0.1401%" height="15" fill="rgb(213,46,41)" fg:x="10376" fg:w="169"/><text x="8.8531%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (110 samples, 0.09%)</title><rect x="8.6520%" y="181" width="0.0912%" height="15" fill="rgb(215,133,35)" fg:x="10435" fg:w="110"/><text x="8.9020%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (105 samples, 0.09%)</title><rect x="8.6561%" y="165" width="0.0871%" height="15" fill="rgb(213,28,5)" fg:x="10440" fg:w="105"/><text x="8.9061%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (49 samples, 0.04%)</title><rect x="8.7026%" y="149" width="0.0406%" height="15" fill="rgb(215,77,49)" fg:x="10496" fg:w="49"/><text x="8.9526%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="8.7283%" y="133" width="0.0149%" height="15" fill="rgb(248,100,22)" fg:x="10527" fg:w="18"/><text x="8.9783%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.03%)</title><rect x="8.7498%" y="197" width="0.0265%" height="15" fill="rgb(208,67,9)" fg:x="10553" fg:w="32"/><text x="8.9998%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="8.7631%" y="181" width="0.0133%" height="15" fill="rgb(219,133,21)" fg:x="10569" fg:w="16"/><text x="9.0131%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.01%)</title><rect x="8.7648%" y="165" width="0.0116%" height="15" fill="rgb(246,46,29)" fg:x="10571" fg:w="14"/><text x="9.0148%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="8.8162%" y="165" width="0.0116%" height="15" fill="rgb(246,185,52)" fg:x="10633" fg:w="14"/><text x="9.0662%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (71 samples, 0.06%)</title><rect x="8.7764%" y="197" width="0.0589%" height="15" fill="rgb(252,136,11)" fg:x="10585" fg:w="71"/><text x="9.0264%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.04%)</title><rect x="8.7938%" y="181" width="0.0415%" height="15" fill="rgb(219,138,53)" fg:x="10606" fg:w="50"/><text x="9.0438%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="8.9414%" y="181" width="0.0116%" height="15" fill="rgb(211,51,23)" fg:x="10784" fg:w="14"/><text x="9.1914%" y="191.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (998 samples, 0.83%)</title><rect x="8.1620%" y="261" width="0.8275%" height="15" fill="rgb(247,221,28)" fg:x="9844" fg:w="998"/><text x="8.4120%" y="271.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (998 samples, 0.83%)</title><rect x="8.1620%" y="245" width="0.8275%" height="15" fill="rgb(251,222,45)" fg:x="9844" fg:w="998"/><text x="8.4120%" y="255.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (988 samples, 0.82%)</title><rect x="8.1703%" y="229" width="0.8192%" height="15" fill="rgb(217,162,53)" fg:x="9854" fg:w="988"/><text x="8.4203%" y="239.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (847 samples, 0.70%)</title><rect x="8.2872%" y="213" width="0.7023%" height="15" fill="rgb(229,93,14)" fg:x="9995" fg:w="847"/><text x="8.5372%" y="223.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (161 samples, 0.13%)</title><rect x="8.8560%" y="197" width="0.1335%" height="15" fill="rgb(209,67,49)" fg:x="10681" fg:w="161"/><text x="9.1060%" y="207.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (1,001 samples, 0.83%)</title><rect x="8.1620%" y="277" width="0.8300%" height="15" fill="rgb(213,87,29)" fg:x="9844" fg:w="1001"/><text x="8.4120%" y="287.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (14 samples, 0.01%)</title><rect x="8.9919%" y="277" width="0.0116%" height="15" fill="rgb(205,151,52)" fg:x="10845" fg:w="14"/><text x="9.2419%" y="287.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (2,827 samples, 2.34%)</title><rect x="6.6629%" y="341" width="2.3440%" height="15" fill="rgb(253,215,39)" fg:x="8036" fg:w="2827"/><text x="6.9129%" y="351.50">t..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2,827 samples, 2.34%)</title><rect x="6.6629%" y="325" width="2.3440%" height="15" fill="rgb(221,220,41)" fg:x="8036" fg:w="2827"/><text x="6.9129%" y="335.50">t..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,827 samples, 2.34%)</title><rect x="6.6629%" y="309" width="2.3440%" height="15" fill="rgb(218,133,21)" fg:x="8036" fg:w="2827"/><text x="6.9129%" y="319.50">t..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (2,824 samples, 2.34%)</title><rect x="6.6654%" y="293" width="2.3415%" height="15" fill="rgb(221,193,43)" fg:x="8039" fg:w="2824"/><text x="6.9154%" y="303.50">t..</text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.01%)</title><rect x="9.0168%" y="229" width="0.0133%" height="15" fill="rgb(240,128,52)" fg:x="10875" fg:w="16"/><text x="9.2668%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.01%)</title><rect x="9.0176%" y="213" width="0.0124%" height="15" fill="rgb(253,114,12)" fg:x="10876" fg:w="15"/><text x="9.2676%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="9.0317%" y="229" width="0.0108%" height="15" fill="rgb(215,223,47)" fg:x="10893" fg:w="13"/><text x="9.2817%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (13 samples, 0.01%)</title><rect x="9.0442%" y="229" width="0.0108%" height="15" fill="rgb(248,225,23)" fg:x="10908" fg:w="13"/><text x="9.2942%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.01%)</title><rect x="9.1287%" y="149" width="0.0141%" height="15" fill="rgb(250,108,0)" fg:x="11010" fg:w="17"/><text x="9.3787%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.02%)</title><rect x="9.1221%" y="181" width="0.0216%" height="15" fill="rgb(228,208,7)" fg:x="11002" fg:w="26"/><text x="9.3721%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.02%)</title><rect x="9.1271%" y="165" width="0.0166%" height="15" fill="rgb(244,45,10)" fg:x="11008" fg:w="20"/><text x="9.3771%" y="175.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (132 samples, 0.11%)</title><rect x="9.0550%" y="229" width="0.1094%" height="15" fill="rgb(207,125,25)" fg:x="10921" fg:w="132"/><text x="9.3050%" y="239.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (132 samples, 0.11%)</title><rect x="9.0550%" y="213" width="0.1094%" height="15" fill="rgb(210,195,18)" fg:x="10921" fg:w="132"/><text x="9.3050%" y="223.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (102 samples, 0.08%)</title><rect x="9.0798%" y="197" width="0.0846%" height="15" fill="rgb(249,80,12)" fg:x="10951" fg:w="102"/><text x="9.3298%" y="207.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (16 samples, 0.01%)</title><rect x="9.1661%" y="229" width="0.0133%" height="15" fill="rgb(221,65,9)" fg:x="11055" fg:w="16"/><text x="9.4161%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.02%)</title><rect x="9.2249%" y="213" width="0.0158%" height="15" fill="rgb(235,49,36)" fg:x="11126" fg:w="19"/><text x="9.4749%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.01%)</title><rect x="9.2291%" y="197" width="0.0116%" height="15" fill="rgb(225,32,20)" fg:x="11131" fg:w="14"/><text x="9.4791%" y="207.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (98 samples, 0.08%)</title><rect x="9.1793%" y="229" width="0.0813%" height="15" fill="rgb(215,141,46)" fg:x="11071" fg:w="98"/><text x="9.4293%" y="239.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (32 samples, 0.03%)</title><rect x="9.2606%" y="229" width="0.0265%" height="15" fill="rgb(250,160,47)" fg:x="11169" fg:w="32"/><text x="9.5106%" y="239.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (26 samples, 0.02%)</title><rect x="9.2656%" y="213" width="0.0216%" height="15" fill="rgb(216,222,40)" fg:x="11175" fg:w="26"/><text x="9.5156%" y="223.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (26 samples, 0.02%)</title><rect x="9.2871%" y="213" width="0.0216%" height="15" fill="rgb(234,217,39)" fg:x="11201" fg:w="26"/><text x="9.5371%" y="223.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.02%)</title><rect x="9.2871%" y="197" width="0.0216%" height="15" fill="rgb(207,178,40)" fg:x="11201" fg:w="26"/><text x="9.5371%" y="207.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (25 samples, 0.02%)</title><rect x="9.2879%" y="181" width="0.0207%" height="15" fill="rgb(221,136,13)" fg:x="11202" fg:w="25"/><text x="9.5379%" y="191.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (15 samples, 0.01%)</title><rect x="9.2962%" y="165" width="0.0124%" height="15" fill="rgb(249,199,10)" fg:x="11212" fg:w="15"/><text x="9.5462%" y="175.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (28 samples, 0.02%)</title><rect x="9.2871%" y="229" width="0.0232%" height="15" fill="rgb(249,222,13)" fg:x="11201" fg:w="28"/><text x="9.5371%" y="239.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (377 samples, 0.31%)</title><rect x="9.0069%" y="293" width="0.3126%" height="15" fill="rgb(244,185,38)" fg:x="10863" fg:w="377"/><text x="9.2569%" y="303.50"></text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (377 samples, 0.31%)</title><rect x="9.0069%" y="277" width="0.3126%" height="15" fill="rgb(236,202,9)" fg:x="10863" fg:w="377"/><text x="9.2569%" y="287.50"></text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (377 samples, 0.31%)</title><rect x="9.0069%" y="261" width="0.3126%" height="15" fill="rgb(250,229,37)" fg:x="10863" fg:w="377"/><text x="9.2569%" y="271.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (374 samples, 0.31%)</title><rect x="9.0094%" y="245" width="0.3101%" height="15" fill="rgb(206,174,23)" fg:x="10866" fg:w="374"/><text x="9.2594%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.01%)</title><rect x="9.3510%" y="213" width="0.0124%" height="15" fill="rgb(211,33,43)" fg:x="11278" fg:w="15"/><text x="9.6010%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.04%)</title><rect x="9.3634%" y="213" width="0.0357%" height="15" fill="rgb(245,58,50)" fg:x="11293" fg:w="43"/><text x="9.6134%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.02%)</title><rect x="9.3775%" y="197" width="0.0216%" height="15" fill="rgb(244,68,36)" fg:x="11310" fg:w="26"/><text x="9.6275%" y="207.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (62 samples, 0.05%)</title><rect x="9.4048%" y="213" width="0.0514%" height="15" fill="rgb(232,229,15)" fg:x="11343" fg:w="62"/><text x="9.6548%" y="223.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (52 samples, 0.04%)</title><rect x="9.4131%" y="197" width="0.0431%" height="15" fill="rgb(254,30,23)" fg:x="11353" fg:w="52"/><text x="9.6631%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.02%)</title><rect x="9.5093%" y="165" width="0.0174%" height="15" fill="rgb(235,160,14)" fg:x="11469" fg:w="21"/><text x="9.7593%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (81 samples, 0.07%)</title><rect x="9.4927%" y="181" width="0.0672%" height="15" fill="rgb(212,155,44)" fg:x="11449" fg:w="81"/><text x="9.7427%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (32 samples, 0.03%)</title><rect x="9.5334%" y="165" width="0.0265%" height="15" fill="rgb(226,2,50)" fg:x="11498" fg:w="32"/><text x="9.7834%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (30 samples, 0.02%)</title><rect x="9.5350%" y="149" width="0.0249%" height="15" fill="rgb(234,177,6)" fg:x="11500" fg:w="30"/><text x="9.7850%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.02%)</title><rect x="9.6461%" y="149" width="0.0232%" height="15" fill="rgb(217,24,9)" fg:x="11634" fg:w="28"/><text x="9.8961%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (155 samples, 0.13%)</title><rect x="9.5599%" y="181" width="0.1285%" height="15" fill="rgb(220,13,46)" fg:x="11530" fg:w="155"/><text x="9.8099%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (109 samples, 0.09%)</title><rect x="9.5980%" y="165" width="0.0904%" height="15" fill="rgb(239,221,27)" fg:x="11576" fg:w="109"/><text x="9.8480%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.02%)</title><rect x="9.6693%" y="149" width="0.0191%" height="15" fill="rgb(222,198,25)" fg:x="11662" fg:w="23"/><text x="9.9193%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (20 samples, 0.02%)</title><rect x="9.6967%" y="181" width="0.0166%" height="15" fill="rgb(211,99,13)" fg:x="11695" fg:w="20"/><text x="9.9467%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.05%)</title><rect x="11.2936%" y="149" width="0.0456%" height="15" fill="rgb(232,111,31)" fg:x="13621" fg:w="55"/><text x="11.5436%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (42 samples, 0.03%)</title><rect x="11.3044%" y="133" width="0.0348%" height="15" fill="rgb(245,82,37)" fg:x="13634" fg:w="42"/><text x="11.5544%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.02%)</title><rect x="11.3226%" y="117" width="0.0166%" height="15" fill="rgb(227,149,46)" fg:x="13656" fg:w="20"/><text x="11.5726%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.02%)</title><rect x="11.4138%" y="117" width="0.0199%" height="15" fill="rgb(218,36,50)" fg:x="13766" fg:w="24"/><text x="11.6638%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (186 samples, 0.15%)</title><rect x="11.3392%" y="149" width="0.1542%" height="15" fill="rgb(226,80,48)" fg:x="13676" fg:w="186"/><text x="11.5892%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (183 samples, 0.15%)</title><rect x="11.3417%" y="133" width="0.1517%" height="15" fill="rgb(238,224,15)" fg:x="13679" fg:w="183"/><text x="11.5917%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (72 samples, 0.06%)</title><rect x="11.4337%" y="117" width="0.0597%" height="15" fill="rgb(241,136,10)" fg:x="13790" fg:w="72"/><text x="11.6837%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (281 samples, 0.23%)</title><rect x="11.2613%" y="165" width="0.2330%" height="15" fill="rgb(208,32,45)" fg:x="13582" fg:w="281"/><text x="11.5113%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.01%)</title><rect x="11.4951%" y="165" width="0.0108%" height="15" fill="rgb(207,135,9)" fg:x="13864" fg:w="13"/><text x="11.7451%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.02%)</title><rect x="11.5059%" y="165" width="0.0240%" height="15" fill="rgb(206,86,44)" fg:x="13877" fg:w="29"/><text x="11.7559%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.01%)</title><rect x="11.5772%" y="133" width="0.0141%" height="15" fill="rgb(245,177,15)" fg:x="13963" fg:w="17"/><text x="11.8272%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (82 samples, 0.07%)</title><rect x="11.5299%" y="165" width="0.0680%" height="15" fill="rgb(206,64,50)" fg:x="13906" fg:w="82"/><text x="11.7799%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.05%)</title><rect x="11.5506%" y="149" width="0.0473%" height="15" fill="rgb(234,36,40)" fg:x="13931" fg:w="57"/><text x="11.8006%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.03%)</title><rect x="11.6186%" y="165" width="0.0298%" height="15" fill="rgb(213,64,8)" fg:x="14013" fg:w="36"/><text x="11.8686%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="11.9287%" y="117" width="0.0141%" height="15" fill="rgb(210,75,36)" fg:x="14387" fg:w="17"/><text x="12.1787%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.02%)</title><rect x="11.9238%" y="149" width="0.0199%" height="15" fill="rgb(229,88,21)" fg:x="14381" fg:w="24"/><text x="12.1738%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.02%)</title><rect x="11.9262%" y="133" width="0.0174%" height="15" fill="rgb(252,204,47)" fg:x="14384" fg:w="21"/><text x="12.1762%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.02%)</title><rect x="11.9544%" y="149" width="0.0166%" height="15" fill="rgb(208,77,27)" fg:x="14418" fg:w="20"/><text x="12.2044%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.02%)</title><rect x="11.9752%" y="149" width="0.0207%" height="15" fill="rgb(221,76,26)" fg:x="14443" fg:w="25"/><text x="12.2252%" y="159.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (3,077 samples, 2.55%)</title><rect x="9.4563%" y="213" width="2.5512%" height="15" fill="rgb(225,139,18)" fg:x="11405" fg:w="3077"/><text x="9.7063%" y="223.50">ti..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (3,056 samples, 2.53%)</title><rect x="9.4737%" y="197" width="2.5338%" height="15" fill="rgb(230,137,11)" fg:x="11426" fg:w="3056"/><text x="9.7237%" y="207.50">ti..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,748 samples, 2.28%)</title><rect x="9.7290%" y="181" width="2.2785%" height="15" fill="rgb(212,28,1)" fg:x="11734" fg:w="2748"/><text x="9.9790%" y="191.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (431 samples, 0.36%)</title><rect x="11.6501%" y="165" width="0.3574%" height="15" fill="rgb(248,164,17)" fg:x="14051" fg:w="431"/><text x="11.9001%" y="175.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="11.9959%" y="149" width="0.0116%" height="15" fill="rgb(222,171,42)" fg:x="14468" fg:w="14"/><text x="12.2459%" y="159.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="11.9967%" y="133" width="0.0108%" height="15" fill="rgb(243,84,45)" fg:x="14469" fg:w="13"/><text x="12.2467%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.01%)</title><rect x="11.9967%" y="117" width="0.0108%" height="15" fill="rgb(252,49,23)" fg:x="14469" fg:w="13"/><text x="12.2467%" y="127.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (59 samples, 0.05%)</title><rect x="12.0092%" y="213" width="0.0489%" height="15" fill="rgb(215,19,7)" fg:x="14484" fg:w="59"/><text x="12.2592%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.01%)</title><rect x="12.4254%" y="165" width="0.0108%" height="15" fill="rgb(238,81,41)" fg:x="14986" fg:w="13"/><text x="12.6754%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="12.4245%" y="181" width="0.0124%" height="15" fill="rgb(210,199,37)" fg:x="14985" fg:w="15"/><text x="12.6745%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.05%)</title><rect x="12.4187%" y="197" width="0.0531%" height="15" fill="rgb(244,192,49)" fg:x="14978" fg:w="64"/><text x="12.6687%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.03%)</title><rect x="12.4370%" y="181" width="0.0348%" height="15" fill="rgb(226,211,11)" fg:x="15000" fg:w="42"/><text x="12.6870%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.03%)</title><rect x="12.4395%" y="165" width="0.0323%" height="15" fill="rgb(236,162,54)" fg:x="15003" fg:w="39"/><text x="12.6895%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.01%)</title><rect x="12.4577%" y="149" width="0.0141%" height="15" fill="rgb(220,229,9)" fg:x="15025" fg:w="17"/><text x="12.7077%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.02%)</title><rect x="12.4826%" y="197" width="0.0182%" height="15" fill="rgb(250,87,22)" fg:x="15055" fg:w="22"/><text x="12.7326%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.01%)</title><rect x="12.4901%" y="181" width="0.0108%" height="15" fill="rgb(239,43,17)" fg:x="15064" fg:w="13"/><text x="12.7401%" y="191.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (668 samples, 0.55%)</title><rect x="12.0606%" y="213" width="0.5539%" height="15" fill="rgb(231,177,25)" fg:x="14546" fg:w="668"/><text x="12.3106%" y="223.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (127 samples, 0.11%)</title><rect x="12.5091%" y="197" width="0.1053%" height="15" fill="rgb(219,179,1)" fg:x="15087" fg:w="127"/><text x="12.7591%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="12.6932%" y="181" width="0.0133%" height="15" fill="rgb(238,219,53)" fg:x="15309" fg:w="16"/><text x="12.9432%" y="191.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (147 samples, 0.12%)</title><rect x="12.6144%" y="213" width="0.1219%" height="15" fill="rgb(232,167,36)" fg:x="15214" fg:w="147"/><text x="12.8644%" y="223.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (135 samples, 0.11%)</title><rect x="12.6244%" y="197" width="0.1119%" height="15" fill="rgb(244,19,51)" fg:x="15226" fg:w="135"/><text x="12.8744%" y="207.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (27 samples, 0.02%)</title><rect x="12.7139%" y="181" width="0.0224%" height="15" fill="rgb(224,6,22)" fg:x="15334" fg:w="27"/><text x="12.9639%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.02%)</title><rect x="12.7761%" y="149" width="0.0158%" height="15" fill="rgb(224,145,5)" fg:x="15409" fg:w="19"/><text x="13.0261%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (24 samples, 0.02%)</title><rect x="12.8234%" y="133" width="0.0199%" height="15" fill="rgb(234,130,49)" fg:x="15466" fg:w="24"/><text x="13.0734%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (40 samples, 0.03%)</title><rect x="12.8457%" y="133" width="0.0332%" height="15" fill="rgb(254,6,2)" fg:x="15493" fg:w="40"/><text x="13.0957%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (35 samples, 0.03%)</title><rect x="12.8499%" y="117" width="0.0290%" height="15" fill="rgb(208,96,46)" fg:x="15498" fg:w="35"/><text x="13.0999%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (100 samples, 0.08%)</title><rect x="12.7968%" y="149" width="0.0829%" height="15" fill="rgb(239,3,39)" fg:x="15434" fg:w="100"/><text x="13.0468%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (15 samples, 0.01%)</title><rect x="12.9129%" y="133" width="0.0124%" height="15" fill="rgb(233,210,1)" fg:x="15574" fg:w="15"/><text x="13.1629%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (50 samples, 0.04%)</title><rect x="12.9817%" y="117" width="0.0415%" height="15" fill="rgb(244,137,37)" fg:x="15657" fg:w="50"/><text x="13.2317%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (156 samples, 0.13%)</title><rect x="12.9278%" y="133" width="0.1293%" height="15" fill="rgb(240,136,2)" fg:x="15592" fg:w="156"/><text x="13.1778%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (41 samples, 0.03%)</title><rect x="13.0232%" y="117" width="0.0340%" height="15" fill="rgb(239,18,37)" fg:x="15707" fg:w="41"/><text x="13.2732%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (215 samples, 0.18%)</title><rect x="12.8797%" y="149" width="0.1783%" height="15" fill="rgb(218,185,22)" fg:x="15534" fg:w="215"/><text x="13.1297%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (19 samples, 0.02%)</title><rect x="13.0613%" y="149" width="0.0158%" height="15" fill="rgb(225,218,4)" fg:x="15753" fg:w="19"/><text x="13.3113%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (37 samples, 0.03%)</title><rect x="13.0771%" y="149" width="0.0307%" height="15" fill="rgb(230,182,32)" fg:x="15772" fg:w="37"/><text x="13.3271%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (49 samples, 0.04%)</title><rect x="14.8149%" y="101" width="0.0406%" height="15" fill="rgb(242,56,43)" fg:x="17868" fg:w="49"/><text x="15.0649%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (27 samples, 0.02%)</title><rect x="14.8332%" y="85" width="0.0224%" height="15" fill="rgb(233,99,24)" fg:x="17890" fg:w="27"/><text x="15.0832%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (67 samples, 0.06%)</title><rect x="14.8017%" y="117" width="0.0556%" height="15" fill="rgb(234,209,42)" fg:x="17852" fg:w="67"/><text x="15.0517%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (26 samples, 0.02%)</title><rect x="14.9841%" y="85" width="0.0216%" height="15" fill="rgb(227,7,12)" fg:x="18072" fg:w="26"/><text x="15.2341%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (288 samples, 0.24%)</title><rect x="14.8572%" y="117" width="0.2388%" height="15" fill="rgb(245,203,43)" fg:x="17919" fg:w="288"/><text x="15.1072%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (280 samples, 0.23%)</title><rect x="14.8639%" y="101" width="0.2322%" height="15" fill="rgb(238,205,33)" fg:x="17927" fg:w="280"/><text x="15.1139%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (109 samples, 0.09%)</title><rect x="15.0056%" y="85" width="0.0904%" height="15" fill="rgb(231,56,7)" fg:x="18098" fg:w="109"/><text x="15.2556%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.02%)</title><rect x="15.0745%" y="69" width="0.0216%" height="15" fill="rgb(244,186,29)" fg:x="18181" fg:w="26"/><text x="15.3245%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (407 samples, 0.34%)</title><rect x="14.7602%" y="133" width="0.3375%" height="15" fill="rgb(234,111,31)" fg:x="17802" fg:w="407"/><text x="15.0102%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (19 samples, 0.02%)</title><rect x="15.0993%" y="133" width="0.0158%" height="15" fill="rgb(241,149,10)" fg:x="18211" fg:w="19"/><text x="15.3493%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (66 samples, 0.05%)</title><rect x="15.1151%" y="133" width="0.0547%" height="15" fill="rgb(249,206,44)" fg:x="18230" fg:w="66"/><text x="15.3651%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (28 samples, 0.02%)</title><rect x="15.1466%" y="117" width="0.0232%" height="15" fill="rgb(251,153,30)" fg:x="18268" fg:w="28"/><text x="15.3966%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.02%)</title><rect x="15.1507%" y="101" width="0.0191%" height="15" fill="rgb(239,152,38)" fg:x="18273" fg:w="23"/><text x="15.4007%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (15 samples, 0.01%)</title><rect x="15.1980%" y="117" width="0.0124%" height="15" fill="rgb(249,139,47)" fg:x="18330" fg:w="15"/><text x="15.4480%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (34 samples, 0.03%)</title><rect x="15.2577%" y="101" width="0.0282%" height="15" fill="rgb(244,64,35)" fg:x="18402" fg:w="34"/><text x="15.5077%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (154 samples, 0.13%)</title><rect x="15.1698%" y="133" width="0.1277%" height="15" fill="rgb(216,46,15)" fg:x="18296" fg:w="154"/><text x="15.4198%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (100 samples, 0.08%)</title><rect x="15.2146%" y="117" width="0.0829%" height="15" fill="rgb(250,74,19)" fg:x="18350" fg:w="100"/><text x="15.4646%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.01%)</title><rect x="15.2859%" y="101" width="0.0116%" height="15" fill="rgb(249,42,33)" fg:x="18436" fg:w="14"/><text x="15.5359%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (46 samples, 0.04%)</title><rect x="15.3207%" y="133" width="0.0381%" height="15" fill="rgb(242,149,17)" fg:x="18478" fg:w="46"/><text x="15.5707%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.02%)</title><rect x="15.6764%" y="101" width="0.0174%" height="15" fill="rgb(244,29,21)" fg:x="18907" fg:w="21"/><text x="15.9264%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.02%)</title><rect x="15.6781%" y="85" width="0.0158%" height="15" fill="rgb(220,130,37)" fg:x="18909" fg:w="19"/><text x="15.9281%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.03%)</title><rect x="15.6665%" y="117" width="0.0282%" height="15" fill="rgb(211,67,2)" fg:x="18895" fg:w="34"/><text x="15.9165%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="15.6955%" y="117" width="0.0166%" height="15" fill="rgb(235,68,52)" fg:x="18930" fg:w="20"/><text x="15.9455%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.02%)</title><rect x="15.7121%" y="117" width="0.0182%" height="15" fill="rgb(246,142,3)" fg:x="18950" fg:w="22"/><text x="15.9621%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.01%)</title><rect x="15.7195%" y="101" width="0.0108%" height="15" fill="rgb(241,25,7)" fg:x="18959" fg:w="13"/><text x="15.9695%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.02%)</title><rect x="15.7444%" y="117" width="0.0182%" height="15" fill="rgb(242,119,39)" fg:x="18989" fg:w="22"/><text x="15.9944%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.02%)</title><rect x="15.7643%" y="85" width="0.0216%" height="15" fill="rgb(241,98,45)" fg:x="19013" fg:w="26"/><text x="16.0143%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.02%)</title><rect x="15.7684%" y="69" width="0.0174%" height="15" fill="rgb(254,28,30)" fg:x="19018" fg:w="21"/><text x="16.0184%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.02%)</title><rect x="15.7684%" y="53" width="0.0174%" height="15" fill="rgb(241,142,54)" fg:x="19018" fg:w="21"/><text x="16.0184%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.01%)</title><rect x="15.7751%" y="37" width="0.0108%" height="15" fill="rgb(222,85,15)" fg:x="19026" fg:w="13"/><text x="16.0251%" y="47.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,679 samples, 3.05%)</title><rect x="12.7363%" y="197" width="3.0504%" height="15" fill="rgb(210,85,47)" fg:x="15361" fg:w="3679"/><text x="12.9863%" y="207.50">tio..</text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (3,679 samples, 3.05%)</title><rect x="12.7363%" y="181" width="3.0504%" height="15" fill="rgb(224,206,25)" fg:x="15361" fg:w="3679"/><text x="12.9863%" y="191.50">tio..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (3,648 samples, 3.02%)</title><rect x="12.7620%" y="165" width="3.0247%" height="15" fill="rgb(243,201,19)" fg:x="15392" fg:w="3648"/><text x="13.0120%" y="175.50">tio..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (3,198 samples, 2.65%)</title><rect x="13.1351%" y="149" width="2.6516%" height="15" fill="rgb(236,59,4)" fg:x="15842" fg:w="3198"/><text x="13.3851%" y="159.50">ti..</text></g><g><title>tio4905`alloc::slice::merge_sort (509 samples, 0.42%)</title><rect x="15.3647%" y="133" width="0.4220%" height="15" fill="rgb(254,179,45)" fg:x="18531" fg:w="509"/><text x="15.6147%" y="143.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (29 samples, 0.02%)</title><rect x="15.7626%" y="117" width="0.0240%" height="15" fill="rgb(226,14,10)" fg:x="19011" fg:w="29"/><text x="16.0126%" y="127.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (27 samples, 0.02%)</title><rect x="15.7643%" y="101" width="0.0224%" height="15" fill="rgb(244,27,41)" fg:x="19013" fg:w="27"/><text x="16.0143%" y="111.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (3,683 samples, 3.05%)</title><rect x="12.7363%" y="213" width="3.0537%" height="15" fill="rgb(235,35,32)" fg:x="15361" fg:w="3683"/><text x="12.9863%" y="223.50">tio..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (19 samples, 0.02%)</title><rect x="15.7966%" y="197" width="0.0158%" height="15" fill="rgb(218,68,31)" fg:x="19052" fg:w="19"/><text x="16.0466%" y="207.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (28 samples, 0.02%)</title><rect x="15.7900%" y="213" width="0.0232%" height="15" fill="rgb(207,120,37)" fg:x="19044" fg:w="28"/><text x="16.0400%" y="223.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (19,072 samples, 15.81%)</title><rect x="0.0033%" y="421" width="15.8132%" height="15" fill="rgb(227,98,0)" fg:x="4" fg:w="19072"/><text x="0.2533%" y="431.50">tio4905`rayon::iter::plu..</text></g><g><title>tio4905`rayon_core::registry::in_worker (19,072 samples, 15.81%)</title><rect x="0.0033%" y="405" width="15.8132%" height="15" fill="rgb(207,7,3)" fg:x="4" fg:w="19072"/><text x="0.2533%" y="415.50">tio4905`rayon_core::regi..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11,040 samples, 9.15%)</title><rect x="6.6629%" y="389" width="9.1536%" height="15" fill="rgb(206,98,19)" fg:x="8036" fg:w="11040"/><text x="6.9129%" y="399.50">tio4905`rayon..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (11,040 samples, 9.15%)</title><rect x="6.6629%" y="373" width="9.1536%" height="15" fill="rgb(217,5,26)" fg:x="8036" fg:w="11040"/><text x="6.9129%" y="383.50">tio4905`rayon..</text></g><g><title>tio4905`rayon_core::registry::in_worker (11,040 samples, 9.15%)</title><rect x="6.6629%" y="357" width="9.1536%" height="15" fill="rgb(235,190,38)" fg:x="8036" fg:w="11040"/><text x="6.9129%" y="367.50">tio4905`rayon..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8,213 samples, 6.81%)</title><rect x="9.0069%" y="341" width="6.8097%" height="15" fill="rgb(247,86,24)" fg:x="10863" fg:w="8213"/><text x="9.2569%" y="351.50">tio4905`r..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (8,213 samples, 6.81%)</title><rect x="9.0069%" y="325" width="6.8097%" height="15" fill="rgb(205,101,16)" fg:x="10863" fg:w="8213"/><text x="9.2569%" y="335.50">tio4905`r..</text></g><g><title>tio4905`rayon_core::registry::in_worker (8,213 samples, 6.81%)</title><rect x="9.0069%" y="309" width="6.8097%" height="15" fill="rgb(246,168,33)" fg:x="10863" fg:w="8213"/><text x="9.2569%" y="319.50">tio4905`r..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7,836 samples, 6.50%)</title><rect x="9.3194%" y="293" width="6.4971%" height="15" fill="rgb(231,114,1)" fg:x="11240" fg:w="7836"/><text x="9.5694%" y="303.50">tio4905`r..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (7,836 samples, 6.50%)</title><rect x="9.3194%" y="277" width="6.4971%" height="15" fill="rgb(207,184,53)" fg:x="11240" fg:w="7836"/><text x="9.5694%" y="287.50">tio4905`r..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7,836 samples, 6.50%)</title><rect x="9.3194%" y="261" width="6.4971%" height="15" fill="rgb(224,95,51)" fg:x="11240" fg:w="7836"/><text x="9.5694%" y="271.50">tio4905`&lt;..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7,836 samples, 6.50%)</title><rect x="9.3194%" y="245" width="6.4971%" height="15" fill="rgb(212,188,45)" fg:x="11240" fg:w="7836"/><text x="9.5694%" y="255.50">tio4905`c..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (7,826 samples, 6.49%)</title><rect x="9.3277%" y="229" width="6.4888%" height="15" fill="rgb(223,154,38)" fg:x="11250" fg:w="7826"/><text x="9.5777%" y="239.50">tio4905`..</text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.01%)</title><rect x="15.8331%" y="293" width="0.0133%" height="15" fill="rgb(251,22,52)" fg:x="19096" fg:w="16"/><text x="16.0831%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.02%)</title><rect x="15.8464%" y="293" width="0.0182%" height="15" fill="rgb(229,209,22)" fg:x="19112" fg:w="22"/><text x="16.0964%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.01%)</title><rect x="15.8514%" y="277" width="0.0133%" height="15" fill="rgb(234,138,34)" fg:x="19118" fg:w="16"/><text x="16.1014%" y="287.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (34 samples, 0.03%)</title><rect x="15.8729%" y="293" width="0.0282%" height="15" fill="rgb(212,95,11)" fg:x="19144" fg:w="34"/><text x="16.1229%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (23 samples, 0.02%)</title><rect x="15.8820%" y="277" width="0.0191%" height="15" fill="rgb(240,179,47)" fg:x="19155" fg:w="23"/><text x="16.1320%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.04%)</title><rect x="15.9235%" y="261" width="0.0373%" height="15" fill="rgb(240,163,11)" fg:x="19205" fg:w="45"/><text x="16.1735%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.01%)</title><rect x="15.9500%" y="245" width="0.0108%" height="15" fill="rgb(236,37,12)" fg:x="19237" fg:w="13"/><text x="16.2000%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.02%)</title><rect x="16.0047%" y="229" width="0.0174%" height="15" fill="rgb(232,164,16)" fg:x="19303" fg:w="21"/><text x="16.2547%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (87 samples, 0.07%)</title><rect x="15.9608%" y="261" width="0.0721%" height="15" fill="rgb(244,205,15)" fg:x="19250" fg:w="87"/><text x="16.2108%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (60 samples, 0.05%)</title><rect x="15.9832%" y="245" width="0.0497%" height="15" fill="rgb(223,117,47)" fg:x="19277" fg:w="60"/><text x="16.2332%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.01%)</title><rect x="16.0222%" y="229" width="0.0108%" height="15" fill="rgb(244,107,35)" fg:x="19324" fg:w="13"/><text x="16.2722%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (23 samples, 0.02%)</title><rect x="16.0462%" y="261" width="0.0191%" height="15" fill="rgb(205,140,8)" fg:x="19353" fg:w="23"/><text x="16.2962%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.03%)</title><rect x="16.5387%" y="229" width="0.0340%" height="15" fill="rgb(228,84,46)" fg:x="19947" fg:w="41"/><text x="16.7887%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.02%)</title><rect x="16.5495%" y="213" width="0.0232%" height="15" fill="rgb(254,188,9)" fg:x="19960" fg:w="28"/><text x="16.7995%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.01%)</title><rect x="16.5594%" y="197" width="0.0133%" height="15" fill="rgb(206,112,54)" fg:x="19972" fg:w="16"/><text x="16.8094%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (23 samples, 0.02%)</title><rect x="16.6382%" y="197" width="0.0191%" height="15" fill="rgb(216,84,49)" fg:x="20067" fg:w="23"/><text x="16.8882%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (176 samples, 0.15%)</title><rect x="16.5727%" y="229" width="0.1459%" height="15" fill="rgb(214,194,35)" fg:x="19988" fg:w="176"/><text x="16.8227%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (166 samples, 0.14%)</title><rect x="16.5810%" y="213" width="0.1376%" height="15" fill="rgb(249,28,3)" fg:x="19998" fg:w="166"/><text x="16.8310%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (73 samples, 0.06%)</title><rect x="16.6581%" y="197" width="0.0605%" height="15" fill="rgb(222,56,52)" fg:x="20091" fg:w="73"/><text x="16.9081%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.02%)</title><rect x="16.6971%" y="181" width="0.0216%" height="15" fill="rgb(245,217,50)" fg:x="20138" fg:w="26"/><text x="16.9471%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (237 samples, 0.20%)</title><rect x="16.5238%" y="245" width="0.1965%" height="15" fill="rgb(213,201,24)" fg:x="19929" fg:w="237"/><text x="16.7738%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.02%)</title><rect x="16.7253%" y="245" width="0.0249%" height="15" fill="rgb(248,116,28)" fg:x="20172" fg:w="30"/><text x="16.9753%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.01%)</title><rect x="16.7858%" y="213" width="0.0124%" height="15" fill="rgb(219,72,43)" fg:x="20245" fg:w="15"/><text x="17.0358%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (75 samples, 0.06%)</title><rect x="16.7501%" y="245" width="0.0622%" height="15" fill="rgb(209,138,14)" fg:x="20202" fg:w="75"/><text x="17.0001%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.04%)</title><rect x="16.7675%" y="229" width="0.0448%" height="15" fill="rgb(222,18,33)" fg:x="20223" fg:w="54"/><text x="17.0175%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.01%)</title><rect x="16.7982%" y="213" width="0.0141%" height="15" fill="rgb(213,199,7)" fg:x="20260" fg:w="17"/><text x="17.0482%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.01%)</title><rect x="16.8181%" y="245" width="0.0124%" height="15" fill="rgb(250,110,10)" fg:x="20284" fg:w="15"/><text x="17.0681%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.01%)</title><rect x="16.9276%" y="213" width="0.0108%" height="15" fill="rgb(248,123,6)" fg:x="20416" fg:w="13"/><text x="17.1776%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="16.9243%" y="229" width="0.0149%" height="15" fill="rgb(206,91,31)" fg:x="20412" fg:w="18"/><text x="17.1743%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.01%)</title><rect x="16.9408%" y="229" width="0.0133%" height="15" fill="rgb(211,154,13)" fg:x="20432" fg:w="16"/><text x="17.1908%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (1,300 samples, 1.08%)</title><rect x="15.9011%" y="293" width="1.0779%" height="15" fill="rgb(225,148,7)" fg:x="19178" fg:w="1300"/><text x="16.1511%" y="303.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,288 samples, 1.07%)</title><rect x="15.9111%" y="277" width="1.0679%" height="15" fill="rgb(220,160,43)" fg:x="19190" fg:w="1288"/><text x="16.1611%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,095 samples, 0.91%)</title><rect x="16.0711%" y="261" width="0.9079%" height="15" fill="rgb(213,52,39)" fg:x="19383" fg:w="1095"/><text x="16.3211%" y="271.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (176 samples, 0.15%)</title><rect x="16.8330%" y="245" width="0.1459%" height="15" fill="rgb(243,137,7)" fg:x="20302" fg:w="176"/><text x="17.0830%" y="255.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.02%)</title><rect x="16.9624%" y="229" width="0.0166%" height="15" fill="rgb(230,79,13)" fg:x="20458" fg:w="20"/><text x="17.2124%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="16.9674%" y="213" width="0.0116%" height="15" fill="rgb(247,105,23)" fg:x="20464" fg:w="14"/><text x="17.2174%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="16.9674%" y="197" width="0.0116%" height="15" fill="rgb(223,179,41)" fg:x="20464" fg:w="14"/><text x="17.2174%" y="207.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (29 samples, 0.02%)</title><rect x="16.9815%" y="293" width="0.0240%" height="15" fill="rgb(218,9,34)" fg:x="20481" fg:w="29"/><text x="17.2315%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="17.1937%" y="261" width="0.0124%" height="15" fill="rgb(222,106,8)" fg:x="20737" fg:w="15"/><text x="17.4437%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (80 samples, 0.07%)</title><rect x="17.1904%" y="277" width="0.0663%" height="15" fill="rgb(211,220,0)" fg:x="20733" fg:w="80"/><text x="17.4404%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (61 samples, 0.05%)</title><rect x="17.2062%" y="261" width="0.0506%" height="15" fill="rgb(229,52,16)" fg:x="20752" fg:w="61"/><text x="17.4562%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (58 samples, 0.05%)</title><rect x="17.2086%" y="245" width="0.0481%" height="15" fill="rgb(212,155,18)" fg:x="20755" fg:w="58"/><text x="17.4586%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.02%)</title><rect x="17.2352%" y="229" width="0.0216%" height="15" fill="rgb(242,21,14)" fg:x="20787" fg:w="26"/><text x="17.4852%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="17.2451%" y="213" width="0.0116%" height="15" fill="rgb(222,19,48)" fg:x="20799" fg:w="14"/><text x="17.4951%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.03%)</title><rect x="17.2667%" y="277" width="0.0332%" height="15" fill="rgb(232,45,27)" fg:x="20825" fg:w="40"/><text x="17.5167%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.03%)</title><rect x="17.2725%" y="261" width="0.0274%" height="15" fill="rgb(249,103,42)" fg:x="20832" fg:w="33"/><text x="17.5225%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (446 samples, 0.37%)</title><rect x="17.0063%" y="293" width="0.3698%" height="15" fill="rgb(246,81,33)" fg:x="20511" fg:w="446"/><text x="17.2563%" y="303.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (75 samples, 0.06%)</title><rect x="17.3139%" y="277" width="0.0622%" height="15" fill="rgb(252,33,42)" fg:x="20882" fg:w="75"/><text x="17.5639%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.02%)</title><rect x="17.4416%" y="261" width="0.0191%" height="15" fill="rgb(209,212,41)" fg:x="21036" fg:w="23"/><text x="17.6916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 0.01%)</title><rect x="17.4466%" y="245" width="0.0141%" height="15" fill="rgb(207,154,6)" fg:x="21042" fg:w="17"/><text x="17.6966%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="17.4466%" y="229" width="0.0141%" height="15" fill="rgb(223,64,47)" fg:x="21042" fg:w="17"/><text x="17.6966%" y="239.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (142 samples, 0.12%)</title><rect x="17.3761%" y="293" width="0.1177%" height="15" fill="rgb(211,161,38)" fg:x="20957" fg:w="142"/><text x="17.6261%" y="303.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (127 samples, 0.11%)</title><rect x="17.3886%" y="277" width="0.1053%" height="15" fill="rgb(219,138,40)" fg:x="20972" fg:w="127"/><text x="17.6386%" y="287.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (27 samples, 0.02%)</title><rect x="17.4715%" y="261" width="0.0224%" height="15" fill="rgb(241,228,46)" fg:x="21072" fg:w="27"/><text x="17.7215%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.01%)</title><rect x="17.5121%" y="213" width="0.0124%" height="15" fill="rgb(223,209,38)" fg:x="21121" fg:w="15"/><text x="17.7621%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.02%)</title><rect x="17.5055%" y="229" width="0.0232%" height="15" fill="rgb(236,164,45)" fg:x="21113" fg:w="28"/><text x="17.7555%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.02%)</title><rect x="17.5287%" y="229" width="0.0232%" height="15" fill="rgb(231,15,5)" fg:x="21141" fg:w="28"/><text x="17.7787%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (19 samples, 0.02%)</title><rect x="17.5362%" y="213" width="0.0158%" height="15" fill="rgb(252,35,15)" fg:x="21150" fg:w="19"/><text x="17.7862%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (18 samples, 0.01%)</title><rect x="17.5560%" y="229" width="0.0149%" height="15" fill="rgb(248,181,18)" fg:x="21174" fg:w="18"/><text x="17.8060%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.02%)</title><rect x="17.7824%" y="197" width="0.0249%" height="15" fill="rgb(233,39,42)" fg:x="21447" fg:w="30"/><text x="18.0324%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.02%)</title><rect x="17.7882%" y="181" width="0.0191%" height="15" fill="rgb(238,110,33)" fg:x="21454" fg:w="23"/><text x="18.0382%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (63 samples, 0.05%)</title><rect x="17.8073%" y="197" width="0.0522%" height="15" fill="rgb(233,195,10)" fg:x="21477" fg:w="63"/><text x="18.0573%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (61 samples, 0.05%)</title><rect x="17.8089%" y="181" width="0.0506%" height="15" fill="rgb(254,105,3)" fg:x="21479" fg:w="61"/><text x="18.0589%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.02%)</title><rect x="17.8380%" y="165" width="0.0216%" height="15" fill="rgb(221,225,9)" fg:x="21514" fg:w="26"/><text x="18.0880%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (106 samples, 0.09%)</title><rect x="17.7725%" y="213" width="0.0879%" height="15" fill="rgb(224,227,45)" fg:x="21435" fg:w="106"/><text x="18.0225%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.02%)</title><rect x="17.8620%" y="213" width="0.0182%" height="15" fill="rgb(229,198,43)" fg:x="21543" fg:w="22"/><text x="18.1120%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.01%)</title><rect x="17.8695%" y="197" width="0.0108%" height="15" fill="rgb(206,209,35)" fg:x="21552" fg:w="13"/><text x="18.1195%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.01%)</title><rect x="17.8695%" y="181" width="0.0108%" height="15" fill="rgb(245,195,53)" fg:x="21552" fg:w="13"/><text x="18.1195%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (23 samples, 0.02%)</title><rect x="17.8802%" y="213" width="0.0191%" height="15" fill="rgb(240,92,26)" fg:x="21565" fg:w="23"/><text x="18.1302%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="17.8852%" y="197" width="0.0141%" height="15" fill="rgb(207,40,23)" fg:x="21571" fg:w="17"/><text x="18.1352%" y="207.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (602 samples, 0.50%)</title><rect x="17.4939%" y="277" width="0.4991%" height="15" fill="rgb(223,111,35)" fg:x="21099" fg:w="602"/><text x="17.7439%" y="287.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (602 samples, 0.50%)</title><rect x="17.4939%" y="261" width="0.4991%" height="15" fill="rgb(229,147,28)" fg:x="21099" fg:w="602"/><text x="17.7439%" y="271.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (600 samples, 0.50%)</title><rect x="17.4955%" y="245" width="0.4975%" height="15" fill="rgb(211,29,28)" fg:x="21101" fg:w="600"/><text x="17.7455%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (504 samples, 0.42%)</title><rect x="17.5751%" y="229" width="0.4179%" height="15" fill="rgb(228,72,33)" fg:x="21197" fg:w="504"/><text x="17.8251%" y="239.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (90 samples, 0.07%)</title><rect x="17.9184%" y="213" width="0.0746%" height="15" fill="rgb(205,214,31)" fg:x="21611" fg:w="90"/><text x="18.1684%" y="223.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.01%)</title><rect x="17.9781%" y="197" width="0.0149%" height="15" fill="rgb(224,111,15)" fg:x="21683" fg:w="18"/><text x="18.2281%" y="207.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (14 samples, 0.01%)</title><rect x="17.9814%" y="181" width="0.0116%" height="15" fill="rgb(253,21,26)" fg:x="21687" fg:w="14"/><text x="18.2314%" y="191.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (604 samples, 0.50%)</title><rect x="17.4939%" y="293" width="0.5008%" height="15" fill="rgb(245,139,43)" fg:x="21099" fg:w="604"/><text x="17.7439%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (16 samples, 0.01%)</title><rect x="17.9947%" y="293" width="0.0133%" height="15" fill="rgb(252,170,7)" fg:x="21703" fg:w="16"/><text x="18.2447%" y="303.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (2,645 samples, 2.19%)</title><rect x="15.8165%" y="357" width="2.1931%" height="15" fill="rgb(231,118,14)" fg:x="19076" fg:w="2645"/><text x="16.0665%" y="367.50">t..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2,645 samples, 2.19%)</title><rect x="15.8165%" y="341" width="2.1931%" height="15" fill="rgb(238,83,0)" fg:x="19076" fg:w="2645"/><text x="16.0665%" y="351.50">t..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,645 samples, 2.19%)</title><rect x="15.8165%" y="325" width="2.1931%" height="15" fill="rgb(221,39,39)" fg:x="19076" fg:w="2645"/><text x="16.0665%" y="335.50">t..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (2,640 samples, 2.19%)</title><rect x="15.8207%" y="309" width="2.1889%" height="15" fill="rgb(222,119,46)" fg:x="19081" fg:w="2640"/><text x="16.0707%" y="319.50">t..</text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.03%)</title><rect x="18.0253%" y="245" width="0.0274%" height="15" fill="rgb(222,165,49)" fg:x="21740" fg:w="33"/><text x="18.2753%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="18.0792%" y="213" width="0.0133%" height="15" fill="rgb(219,113,52)" fg:x="21805" fg:w="16"/><text x="18.3292%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.05%)</title><rect x="18.0527%" y="245" width="0.0497%" height="15" fill="rgb(214,7,15)" fg:x="21773" fg:w="60"/><text x="18.3027%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (44 samples, 0.04%)</title><rect x="18.0660%" y="229" width="0.0365%" height="15" fill="rgb(235,32,4)" fg:x="21789" fg:w="44"/><text x="18.3160%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (26 samples, 0.02%)</title><rect x="18.1199%" y="245" width="0.0216%" height="15" fill="rgb(238,90,54)" fg:x="21854" fg:w="26"/><text x="18.3699%" y="255.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (19 samples, 0.02%)</title><rect x="18.1257%" y="229" width="0.0158%" height="15" fill="rgb(213,208,19)" fg:x="21861" fg:w="19"/><text x="18.3757%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (22 samples, 0.02%)</title><rect x="18.1937%" y="197" width="0.0182%" height="15" fill="rgb(233,156,4)" fg:x="21943" fg:w="22"/><text x="18.4437%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (31 samples, 0.03%)</title><rect x="18.2177%" y="197" width="0.0257%" height="15" fill="rgb(207,194,5)" fg:x="21972" fg:w="31"/><text x="18.4677%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.02%)</title><rect x="18.2210%" y="181" width="0.0224%" height="15" fill="rgb(206,111,30)" fg:x="21976" fg:w="27"/><text x="18.4710%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (90 samples, 0.07%)</title><rect x="18.1696%" y="213" width="0.0746%" height="15" fill="rgb(243,70,54)" fg:x="21914" fg:w="90"/><text x="18.4196%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (44 samples, 0.04%)</title><rect x="18.3388%" y="181" width="0.0365%" height="15" fill="rgb(242,28,8)" fg:x="22118" fg:w="44"/><text x="18.5888%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (191 samples, 0.16%)</title><rect x="18.2442%" y="213" width="0.1584%" height="15" fill="rgb(219,106,18)" fg:x="22004" fg:w="191"/><text x="18.4942%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (137 samples, 0.11%)</title><rect x="18.2890%" y="197" width="0.1136%" height="15" fill="rgb(244,222,10)" fg:x="22058" fg:w="137"/><text x="18.5390%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (33 samples, 0.03%)</title><rect x="18.3752%" y="181" width="0.0274%" height="15" fill="rgb(236,179,52)" fg:x="22162" fg:w="33"/><text x="18.6252%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (29 samples, 0.02%)</title><rect x="18.4150%" y="213" width="0.0240%" height="15" fill="rgb(213,23,39)" fg:x="22210" fg:w="29"/><text x="18.6650%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.05%)</title><rect x="19.2757%" y="181" width="0.0456%" height="15" fill="rgb(238,48,10)" fg:x="23248" fg:w="55"/><text x="19.5257%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (39 samples, 0.03%)</title><rect x="19.2889%" y="165" width="0.0323%" height="15" fill="rgb(251,196,23)" fg:x="23264" fg:w="39"/><text x="19.5389%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.02%)</title><rect x="19.3047%" y="149" width="0.0166%" height="15" fill="rgb(250,152,24)" fg:x="23283" fg:w="20"/><text x="19.5547%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (32 samples, 0.03%)</title><rect x="19.4340%" y="149" width="0.0265%" height="15" fill="rgb(209,150,17)" fg:x="23439" fg:w="32"/><text x="19.6840%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (400 samples, 0.33%)</title><rect x="19.2450%" y="197" width="0.3317%" height="15" fill="rgb(234,202,34)" fg:x="23211" fg:w="400"/><text x="19.4950%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (308 samples, 0.26%)</title><rect x="19.3213%" y="181" width="0.2554%" height="15" fill="rgb(253,148,53)" fg:x="23303" fg:w="308"/><text x="19.5713%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (298 samples, 0.25%)</title><rect x="19.3296%" y="165" width="0.2471%" height="15" fill="rgb(218,129,16)" fg:x="23313" fg:w="298"/><text x="19.5796%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (140 samples, 0.12%)</title><rect x="19.4606%" y="149" width="0.1161%" height="15" fill="rgb(216,85,19)" fg:x="23471" fg:w="140"/><text x="19.7106%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (53 samples, 0.04%)</title><rect x="19.5327%" y="133" width="0.0439%" height="15" fill="rgb(235,228,7)" fg:x="23558" fg:w="53"/><text x="19.7827%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.01%)</title><rect x="19.5775%" y="197" width="0.0108%" height="15" fill="rgb(245,175,0)" fg:x="23612" fg:w="13"/><text x="19.8275%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.02%)</title><rect x="19.6164%" y="181" width="0.0182%" height="15" fill="rgb(208,168,36)" fg:x="23659" fg:w="22"/><text x="19.8664%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.02%)</title><rect x="19.6173%" y="165" width="0.0174%" height="15" fill="rgb(246,171,24)" fg:x="23660" fg:w="21"/><text x="19.8673%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (59 samples, 0.05%)</title><rect x="19.5883%" y="197" width="0.0489%" height="15" fill="rgb(215,142,24)" fg:x="23625" fg:w="59"/><text x="19.8383%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (13 samples, 0.01%)</title><rect x="19.6662%" y="181" width="0.0108%" height="15" fill="rgb(250,187,7)" fg:x="23719" fg:w="13"/><text x="19.9162%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.03%)</title><rect x="19.7317%" y="165" width="0.0265%" height="15" fill="rgb(228,66,33)" fg:x="23798" fg:w="32"/><text x="19.9817%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (165 samples, 0.14%)</title><rect x="19.6372%" y="197" width="0.1368%" height="15" fill="rgb(234,215,21)" fg:x="23684" fg:w="165"/><text x="19.8872%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (114 samples, 0.09%)</title><rect x="19.6795%" y="181" width="0.0945%" height="15" fill="rgb(222,191,20)" fg:x="23735" fg:w="114"/><text x="19.9295%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.02%)</title><rect x="19.7582%" y="165" width="0.0158%" height="15" fill="rgb(245,79,54)" fg:x="23830" fg:w="19"/><text x="20.0082%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.03%)</title><rect x="19.7914%" y="197" width="0.0265%" height="15" fill="rgb(240,10,37)" fg:x="23870" fg:w="32"/><text x="20.0414%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.03%)</title><rect x="20.0310%" y="181" width="0.0274%" height="15" fill="rgb(214,192,32)" fg:x="24159" fg:w="33"/><text x="20.2810%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.02%)</title><rect x="20.0376%" y="165" width="0.0207%" height="15" fill="rgb(209,36,54)" fg:x="24167" fg:w="25"/><text x="20.2876%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.02%)</title><rect x="20.0376%" y="149" width="0.0207%" height="15" fill="rgb(220,10,11)" fg:x="24167" fg:w="25"/><text x="20.2876%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (27 samples, 0.02%)</title><rect x="20.0691%" y="165" width="0.0224%" height="15" fill="rgb(221,106,17)" fg:x="24205" fg:w="27"/><text x="20.3191%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.03%)</title><rect x="20.0600%" y="181" width="0.0323%" height="15" fill="rgb(251,142,44)" fg:x="24194" fg:w="39"/><text x="20.3100%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.02%)</title><rect x="20.0932%" y="181" width="0.0182%" height="15" fill="rgb(238,13,15)" fg:x="24234" fg:w="22"/><text x="20.3432%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.02%)</title><rect x="20.1114%" y="181" width="0.0174%" height="15" fill="rgb(208,107,27)" fg:x="24256" fg:w="21"/><text x="20.3614%" y="191.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (30 samples, 0.02%)</title><rect x="20.1288%" y="181" width="0.0249%" height="15" fill="rgb(205,136,37)" fg:x="24277" fg:w="30"/><text x="20.3788%" y="191.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (20 samples, 0.02%)</title><rect x="20.1371%" y="165" width="0.0166%" height="15" fill="rgb(250,205,27)" fg:x="24287" fg:w="20"/><text x="20.3871%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="20.1396%" y="149" width="0.0141%" height="15" fill="rgb(210,80,43)" fg:x="24290" fg:w="17"/><text x="20.3896%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="20.1413%" y="133" width="0.0124%" height="15" fill="rgb(247,160,36)" fg:x="24292" fg:w="15"/><text x="20.3913%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.01%)</title><rect x="20.1429%" y="117" width="0.0108%" height="15" fill="rgb(234,13,49)" fg:x="24294" fg:w="13"/><text x="20.3929%" y="127.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (2,428 samples, 2.01%)</title><rect x="18.1414%" y="245" width="2.0131%" height="15" fill="rgb(234,122,0)" fg:x="21880" fg:w="2428"/><text x="18.3914%" y="255.50">t..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,413 samples, 2.00%)</title><rect x="18.1539%" y="229" width="2.0007%" height="15" fill="rgb(207,146,38)" fg:x="21895" fg:w="2413"/><text x="18.4039%" y="239.50">t..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,040 samples, 1.69%)</title><rect x="18.4631%" y="213" width="1.6914%" height="15" fill="rgb(207,177,25)" fg:x="22268" fg:w="2040"/><text x="18.7131%" y="223.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (401 samples, 0.33%)</title><rect x="19.8221%" y="197" width="0.3325%" height="15" fill="rgb(211,178,42)" fg:x="23907" fg:w="401"/><text x="20.0721%" y="207.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (27 samples, 0.02%)</title><rect x="20.1595%" y="245" width="0.0224%" height="15" fill="rgb(230,69,54)" fg:x="24314" fg:w="27"/><text x="20.4095%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.02%)</title><rect x="20.5243%" y="213" width="0.0199%" height="15" fill="rgb(214,135,41)" fg:x="24754" fg:w="24"/><text x="20.7743%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.01%)</title><rect x="20.5293%" y="197" width="0.0149%" height="15" fill="rgb(237,67,25)" fg:x="24760" fg:w="18"/><text x="20.7793%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (118 samples, 0.10%)</title><rect x="20.5119%" y="229" width="0.0978%" height="15" fill="rgb(222,189,50)" fg:x="24739" fg:w="118"/><text x="20.7619%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (79 samples, 0.07%)</title><rect x="20.5442%" y="213" width="0.0655%" height="15" fill="rgb(245,148,34)" fg:x="24778" fg:w="79"/><text x="20.7942%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (77 samples, 0.06%)</title><rect x="20.5459%" y="197" width="0.0638%" height="15" fill="rgb(222,29,6)" fg:x="24780" fg:w="77"/><text x="20.7959%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (31 samples, 0.03%)</title><rect x="20.5840%" y="181" width="0.0257%" height="15" fill="rgb(221,189,43)" fg:x="24826" fg:w="31"/><text x="20.8340%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.01%)</title><rect x="20.5990%" y="165" width="0.0108%" height="15" fill="rgb(207,36,27)" fg:x="24844" fg:w="13"/><text x="20.8490%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.02%)</title><rect x="20.6122%" y="229" width="0.0182%" height="15" fill="rgb(217,90,24)" fg:x="24860" fg:w="22"/><text x="20.8622%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="20.6587%" y="197" width="0.0133%" height="15" fill="rgb(224,66,35)" fg:x="24916" fg:w="16"/><text x="20.9087%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (62 samples, 0.05%)</title><rect x="20.6305%" y="229" width="0.0514%" height="15" fill="rgb(221,13,50)" fg:x="24882" fg:w="62"/><text x="20.8805%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.04%)</title><rect x="20.6437%" y="213" width="0.0381%" height="15" fill="rgb(236,68,49)" fg:x="24898" fg:w="46"/><text x="20.8937%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.02%)</title><rect x="20.6885%" y="229" width="0.0174%" height="15" fill="rgb(229,146,28)" fg:x="24952" fg:w="21"/><text x="20.9385%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="20.7731%" y="213" width="0.0141%" height="15" fill="rgb(225,31,38)" fg:x="25054" fg:w="17"/><text x="21.0231%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.01%)</title><rect x="20.7756%" y="197" width="0.0116%" height="15" fill="rgb(250,208,3)" fg:x="25057" fg:w="14"/><text x="21.0256%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.01%)</title><rect x="20.7880%" y="213" width="0.0116%" height="15" fill="rgb(246,54,23)" fg:x="25072" fg:w="14"/><text x="21.0380%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="20.8187%" y="181" width="0.0124%" height="15" fill="rgb(243,76,11)" fg:x="25109" fg:w="15"/><text x="21.0687%" y="191.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (783 samples, 0.65%)</title><rect x="20.1836%" y="245" width="0.6492%" height="15" fill="rgb(245,21,50)" fg:x="24343" fg:w="783"/><text x="20.4336%" y="255.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (151 samples, 0.13%)</title><rect x="20.7076%" y="229" width="0.1252%" height="15" fill="rgb(228,9,43)" fg:x="24975" fg:w="151"/><text x="20.9576%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (19 samples, 0.02%)</title><rect x="20.8170%" y="213" width="0.0158%" height="15" fill="rgb(208,100,47)" fg:x="25107" fg:w="19"/><text x="21.0670%" y="223.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (17 samples, 0.01%)</title><rect x="20.8187%" y="197" width="0.0141%" height="15" fill="rgb(232,26,8)" fg:x="25109" fg:w="17"/><text x="21.0687%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.02%)</title><rect x="20.8402%" y="229" width="0.0182%" height="15" fill="rgb(216,166,38)" fg:x="25135" fg:w="22"/><text x="21.0902%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (14 samples, 0.01%)</title><rect x="20.8469%" y="213" width="0.0116%" height="15" fill="rgb(251,202,51)" fg:x="25143" fg:w="14"/><text x="21.0969%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.03%)</title><rect x="20.9770%" y="197" width="0.0307%" height="15" fill="rgb(254,216,34)" fg:x="25300" fg:w="37"/><text x="21.2270%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (35 samples, 0.03%)</title><rect x="20.9787%" y="181" width="0.0290%" height="15" fill="rgb(251,32,27)" fg:x="25302" fg:w="35"/><text x="21.2287%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.01%)</title><rect x="20.9969%" y="165" width="0.0108%" height="15" fill="rgb(208,127,28)" fg:x="25324" fg:w="13"/><text x="21.2469%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.04%)</title><rect x="20.9704%" y="213" width="0.0381%" height="15" fill="rgb(224,137,22)" fg:x="25292" fg:w="46"/><text x="21.2204%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.01%)</title><rect x="21.0144%" y="213" width="0.0133%" height="15" fill="rgb(254,70,32)" fg:x="25345" fg:w="16"/><text x="21.2644%" y="223.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (289 samples, 0.24%)</title><rect x="20.8328%" y="245" width="0.2396%" height="15" fill="rgb(229,75,37)" fg:x="25126" fg:w="289"/><text x="21.0828%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (251 samples, 0.21%)</title><rect x="20.8643%" y="229" width="0.2081%" height="15" fill="rgb(252,64,23)" fg:x="25164" fg:w="251"/><text x="21.1143%" y="239.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (50 samples, 0.04%)</title><rect x="21.0309%" y="213" width="0.0415%" height="15" fill="rgb(232,162,48)" fg:x="25365" fg:w="50"/><text x="21.2809%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (27 samples, 0.02%)</title><rect x="21.0989%" y="165" width="0.0224%" height="15" fill="rgb(246,160,12)" fg:x="25447" fg:w="27"/><text x="21.3489%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.04%)</title><rect x="21.0890%" y="181" width="0.0431%" height="15" fill="rgb(247,166,0)" fg:x="25435" fg:w="52"/><text x="21.3390%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (77 samples, 0.06%)</title><rect x="21.1321%" y="181" width="0.0638%" height="15" fill="rgb(249,219,21)" fg:x="25487" fg:w="77"/><text x="21.3821%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.03%)</title><rect x="21.1619%" y="165" width="0.0340%" height="15" fill="rgb(205,209,3)" fg:x="25523" fg:w="41"/><text x="21.4119%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (24 samples, 0.02%)</title><rect x="21.2017%" y="181" width="0.0199%" height="15" fill="rgb(243,44,1)" fg:x="25571" fg:w="24"/><text x="21.4517%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (74 samples, 0.06%)</title><rect x="21.6735%" y="149" width="0.0614%" height="15" fill="rgb(206,159,16)" fg:x="26140" fg:w="74"/><text x="21.9235%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (62 samples, 0.05%)</title><rect x="21.6835%" y="133" width="0.0514%" height="15" fill="rgb(244,77,30)" fg:x="26152" fg:w="62"/><text x="21.9335%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (30 samples, 0.02%)</title><rect x="21.7100%" y="117" width="0.0249%" height="15" fill="rgb(218,69,12)" fg:x="26184" fg:w="30"/><text x="21.9600%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (200 samples, 0.17%)</title><rect x="21.6553%" y="165" width="0.1658%" height="15" fill="rgb(212,87,7)" fg:x="26118" fg:w="200"/><text x="21.9053%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (104 samples, 0.09%)</title><rect x="21.7349%" y="149" width="0.0862%" height="15" fill="rgb(245,114,25)" fg:x="26214" fg:w="104"/><text x="21.9849%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (100 samples, 0.08%)</title><rect x="21.7382%" y="133" width="0.0829%" height="15" fill="rgb(210,61,42)" fg:x="26218" fg:w="100"/><text x="21.9882%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (46 samples, 0.04%)</title><rect x="21.7830%" y="117" width="0.0381%" height="15" fill="rgb(211,52,33)" fg:x="26272" fg:w="46"/><text x="22.0330%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="21.8078%" y="101" width="0.0133%" height="15" fill="rgb(234,58,33)" fg:x="26302" fg:w="16"/><text x="22.0578%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.02%)</title><rect x="21.8253%" y="165" width="0.0249%" height="15" fill="rgb(220,115,36)" fg:x="26323" fg:w="30"/><text x="22.0753%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (55 samples, 0.05%)</title><rect x="21.8501%" y="165" width="0.0456%" height="15" fill="rgb(243,153,54)" fg:x="26353" fg:w="55"/><text x="22.1001%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.03%)</title><rect x="21.8651%" y="149" width="0.0307%" height="15" fill="rgb(251,47,18)" fg:x="26371" fg:w="37"/><text x="22.1151%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.01%)</title><rect x="21.9007%" y="165" width="0.0124%" height="15" fill="rgb(242,102,42)" fg:x="26414" fg:w="15"/><text x="22.1507%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.01%)</title><rect x="21.9148%" y="165" width="0.0141%" height="15" fill="rgb(234,31,38)" fg:x="26431" fg:w="17"/><text x="22.1648%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.02%)</title><rect x="22.0276%" y="149" width="0.0166%" height="15" fill="rgb(221,117,51)" fg:x="26567" fg:w="20"/><text x="22.2776%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="22.0317%" y="133" width="0.0124%" height="15" fill="rgb(212,20,18)" fg:x="26572" fg:w="15"/><text x="22.2817%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.01%)</title><rect x="22.0325%" y="117" width="0.0116%" height="15" fill="rgb(245,133,36)" fg:x="26573" fg:w="14"/><text x="22.2825%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.01%)</title><rect x="22.0475%" y="133" width="0.0116%" height="15" fill="rgb(212,6,19)" fg:x="26591" fg:w="14"/><text x="22.2975%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="22.0450%" y="149" width="0.0149%" height="15" fill="rgb(218,1,36)" fg:x="26588" fg:w="18"/><text x="22.2950%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (17 samples, 0.01%)</title><rect x="22.0616%" y="149" width="0.0141%" height="15" fill="rgb(246,84,54)" fg:x="26608" fg:w="17"/><text x="22.3116%" y="159.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,246 samples, 1.03%)</title><rect x="21.0724%" y="229" width="1.0331%" height="15" fill="rgb(242,110,6)" fg:x="25415" fg:w="1246"/><text x="21.3224%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (1,246 samples, 1.03%)</title><rect x="21.0724%" y="213" width="1.0331%" height="15" fill="rgb(214,47,5)" fg:x="25415" fg:w="1246"/><text x="21.3224%" y="223.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,239 samples, 1.03%)</title><rect x="21.0782%" y="197" width="1.0273%" height="15" fill="rgb(218,159,25)" fg:x="25422" fg:w="1239"/><text x="21.3282%" y="207.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,056 samples, 0.88%)</title><rect x="21.2299%" y="181" width="0.8756%" height="15" fill="rgb(215,211,28)" fg:x="25605" fg:w="1056"/><text x="21.4799%" y="191.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (210 samples, 0.17%)</title><rect x="21.9314%" y="165" width="0.1741%" height="15" fill="rgb(238,59,32)" fg:x="26451" fg:w="210"/><text x="22.1814%" y="175.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (28 samples, 0.02%)</title><rect x="22.0823%" y="149" width="0.0232%" height="15" fill="rgb(226,82,3)" fg:x="26633" fg:w="28"/><text x="22.3323%" y="159.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (18 samples, 0.01%)</title><rect x="22.0906%" y="133" width="0.0149%" height="15" fill="rgb(240,164,32)" fg:x="26643" fg:w="18"/><text x="22.3406%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="22.0922%" y="117" width="0.0133%" height="15" fill="rgb(232,46,7)" fg:x="26645" fg:w="16"/><text x="22.3422%" y="127.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (1,254 samples, 1.04%)</title><rect x="21.0724%" y="245" width="1.0397%" height="15" fill="rgb(229,129,53)" fg:x="25415" fg:w="1254"/><text x="21.3224%" y="255.50"></text></g><g><title>tio4905`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26,680 samples, 22.12%)</title><rect x="0.0033%" y="469" width="22.1213%" height="15" fill="rgb(234,188,29)" fg:x="4" fg:w="26680"/><text x="0.2533%" y="479.50">tio4905`&lt;core::panic::unwind_safe::..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (26,680 samples, 22.12%)</title><rect x="0.0033%" y="453" width="22.1213%" height="15" fill="rgb(246,141,4)" fg:x="4" fg:w="26680"/><text x="0.2533%" y="463.50">tio4905`rayon::iter::plumbing::brid..</text></g><g><title>tio4905`rayon_core::registry::in_worker (26,680 samples, 22.12%)</title><rect x="0.0033%" y="437" width="22.1213%" height="15" fill="rgb(229,23,39)" fg:x="4" fg:w="26680"/><text x="0.2533%" y="447.50">tio4905`rayon_core::registry::in_wo..</text></g><g><title>tio4905`rayon_core::registry::WorkerThread::wait_until_cold (7,608 samples, 6.31%)</title><rect x="15.8165%" y="421" width="6.3080%" height="15" fill="rgb(206,12,3)" fg:x="19076" fg:w="7608"/><text x="16.0665%" y="431.50">tio4905`..</text></g><g><title>tio4905`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7,608 samples, 6.31%)</title><rect x="15.8165%" y="405" width="6.3080%" height="15" fill="rgb(252,226,20)" fg:x="19076" fg:w="7608"/><text x="16.0665%" y="415.50">tio4905`..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (7,608 samples, 6.31%)</title><rect x="15.8165%" y="389" width="6.3080%" height="15" fill="rgb(216,123,35)" fg:x="19076" fg:w="7608"/><text x="16.0665%" y="399.50">tio4905`..</text></g><g><title>tio4905`rayon_core::registry::in_worker (7,608 samples, 6.31%)</title><rect x="15.8165%" y="373" width="6.3080%" height="15" fill="rgb(212,68,40)" fg:x="19076" fg:w="7608"/><text x="16.0665%" y="383.50">tio4905`..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4,963 samples, 4.11%)</title><rect x="18.0096%" y="357" width="4.1150%" height="15" fill="rgb(254,125,32)" fg:x="21721" fg:w="4963"/><text x="18.2596%" y="367.50">tio4..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (4,963 samples, 4.11%)</title><rect x="18.0096%" y="341" width="4.1150%" height="15" fill="rgb(253,97,22)" fg:x="21721" fg:w="4963"/><text x="18.2596%" y="351.50">tio4..</text></g><g><title>tio4905`rayon_core::registry::in_worker (4,963 samples, 4.11%)</title><rect x="18.0096%" y="325" width="4.1150%" height="15" fill="rgb(241,101,14)" fg:x="21721" fg:w="4963"/><text x="18.2596%" y="335.50">tio4..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (4,963 samples, 4.11%)</title><rect x="18.0096%" y="309" width="4.1150%" height="15" fill="rgb(238,103,29)" fg:x="21721" fg:w="4963"/><text x="18.2596%" y="319.50">tio4..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4,963 samples, 4.11%)</title><rect x="18.0096%" y="293" width="4.1150%" height="15" fill="rgb(233,195,47)" fg:x="21721" fg:w="4963"/><text x="18.2596%" y="303.50">tio4..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4,963 samples, 4.11%)</title><rect x="18.0096%" y="277" width="4.1150%" height="15" fill="rgb(246,218,30)" fg:x="21721" fg:w="4963"/><text x="18.2596%" y="287.50">tio4..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (4,959 samples, 4.11%)</title><rect x="18.0129%" y="261" width="4.1117%" height="15" fill="rgb(219,145,47)" fg:x="21725" fg:w="4959"/><text x="18.2629%" y="271.50">tio4..</text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.03%)</title><rect x="22.1776%" y="341" width="0.0332%" height="15" fill="rgb(243,12,26)" fg:x="26748" fg:w="40"/><text x="22.4276%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.01%)</title><rect x="22.1959%" y="325" width="0.0149%" height="15" fill="rgb(214,87,16)" fg:x="26770" fg:w="18"/><text x="22.4459%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.01%)</title><rect x="22.1967%" y="309" width="0.0141%" height="15" fill="rgb(208,99,42)" fg:x="26771" fg:w="17"/><text x="22.4467%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.02%)</title><rect x="22.2589%" y="309" width="0.0191%" height="15" fill="rgb(253,99,2)" fg:x="26846" fg:w="23"/><text x="22.5089%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (99 samples, 0.08%)</title><rect x="22.2108%" y="341" width="0.0821%" height="15" fill="rgb(220,168,23)" fg:x="26788" fg:w="99"/><text x="22.4608%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (64 samples, 0.05%)</title><rect x="22.2398%" y="325" width="0.0531%" height="15" fill="rgb(242,38,24)" fg:x="26823" fg:w="64"/><text x="22.4898%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.01%)</title><rect x="22.2780%" y="309" width="0.0149%" height="15" fill="rgb(225,182,9)" fg:x="26869" fg:w="18"/><text x="22.5280%" y="319.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (106 samples, 0.09%)</title><rect x="22.3144%" y="341" width="0.0879%" height="15" fill="rgb(243,178,37)" fg:x="26913" fg:w="106"/><text x="22.5644%" y="351.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (93 samples, 0.08%)</title><rect x="22.3252%" y="325" width="0.0771%" height="15" fill="rgb(232,139,19)" fg:x="26926" fg:w="93"/><text x="22.5752%" y="335.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.01%)</title><rect x="22.3915%" y="309" width="0.0108%" height="15" fill="rgb(225,201,24)" fg:x="27006" fg:w="13"/><text x="22.6415%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (19 samples, 0.02%)</title><rect x="22.4023%" y="325" width="0.0158%" height="15" fill="rgb(221,47,46)" fg:x="27019" fg:w="19"/><text x="22.6523%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.01%)</title><rect x="22.4181%" y="325" width="0.0108%" height="15" fill="rgb(249,23,13)" fg:x="27038" fg:w="13"/><text x="22.6681%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.02%)</title><rect x="22.4736%" y="309" width="0.0199%" height="15" fill="rgb(219,9,5)" fg:x="27105" fg:w="24"/><text x="22.7236%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (16 samples, 0.01%)</title><rect x="22.4935%" y="309" width="0.0133%" height="15" fill="rgb(254,171,16)" fg:x="27129" fg:w="16"/><text x="22.7435%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (51 samples, 0.04%)</title><rect x="22.5657%" y="293" width="0.0423%" height="15" fill="rgb(230,171,20)" fg:x="27216" fg:w="51"/><text x="22.8157%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (23 samples, 0.02%)</title><rect x="22.6080%" y="293" width="0.0191%" height="15" fill="rgb(210,71,41)" fg:x="27267" fg:w="23"/><text x="22.8580%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (74 samples, 0.06%)</title><rect x="22.6270%" y="293" width="0.0614%" height="15" fill="rgb(206,173,20)" fg:x="27290" fg:w="74"/><text x="22.8770%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (66 samples, 0.05%)</title><rect x="22.6337%" y="277" width="0.0547%" height="15" fill="rgb(233,88,34)" fg:x="27298" fg:w="66"/><text x="22.8837%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (221 samples, 0.18%)</title><rect x="22.5076%" y="309" width="0.1832%" height="15" fill="rgb(223,209,46)" fg:x="27146" fg:w="221"/><text x="22.7576%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (23 samples, 0.02%)</title><rect x="22.7796%" y="293" width="0.0191%" height="15" fill="rgb(250,43,18)" fg:x="27474" fg:w="23"/><text x="23.0296%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (107 samples, 0.09%)</title><rect x="22.9554%" y="277" width="0.0887%" height="15" fill="rgb(208,13,10)" fg:x="27686" fg:w="107"/><text x="23.2054%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (526 samples, 0.44%)</title><rect x="22.6909%" y="309" width="0.4361%" height="15" fill="rgb(212,200,36)" fg:x="27367" fg:w="526"/><text x="22.9409%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (390 samples, 0.32%)</title><rect x="22.8036%" y="293" width="0.3234%" height="15" fill="rgb(225,90,30)" fg:x="27503" fg:w="390"/><text x="23.0536%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (100 samples, 0.08%)</title><rect x="23.0441%" y="277" width="0.0829%" height="15" fill="rgb(236,182,39)" fg:x="27793" fg:w="100"/><text x="23.2941%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.02%)</title><rect x="23.1270%" y="309" width="0.0158%" height="15" fill="rgb(212,144,35)" fg:x="27893" fg:w="19"/><text x="23.3770%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (24 samples, 0.02%)</title><rect x="23.1427%" y="309" width="0.0199%" height="15" fill="rgb(228,63,44)" fg:x="27912" fg:w="24"/><text x="23.3927%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (79 samples, 0.07%)</title><rect x="23.1626%" y="309" width="0.0655%" height="15" fill="rgb(228,109,6)" fg:x="27936" fg:w="79"/><text x="23.4126%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (167 samples, 0.14%)</title><rect x="29.3629%" y="277" width="0.1385%" height="15" fill="rgb(238,117,24)" fg:x="35414" fg:w="167"/><text x="29.6129%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (118 samples, 0.10%)</title><rect x="29.4035%" y="261" width="0.0978%" height="15" fill="rgb(242,26,26)" fg:x="35463" fg:w="118"/><text x="29.6535%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (52 samples, 0.04%)</title><rect x="29.4582%" y="245" width="0.0431%" height="15" fill="rgb(221,92,48)" fg:x="35529" fg:w="52"/><text x="29.7082%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (104 samples, 0.09%)</title><rect x="29.8231%" y="245" width="0.0862%" height="15" fill="rgb(209,209,32)" fg:x="35969" fg:w="104"/><text x="30.0731%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (797 samples, 0.66%)</title><rect x="29.5014%" y="277" width="0.6608%" height="15" fill="rgb(221,70,22)" fg:x="35581" fg:w="797"/><text x="29.7514%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (764 samples, 0.63%)</title><rect x="29.5287%" y="261" width="0.6335%" height="15" fill="rgb(248,145,5)" fg:x="35614" fg:w="764"/><text x="29.7787%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (302 samples, 0.25%)</title><rect x="29.9118%" y="245" width="0.2504%" height="15" fill="rgb(226,116,26)" fg:x="36076" fg:w="302"/><text x="30.1618%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (44 samples, 0.04%)</title><rect x="30.1257%" y="229" width="0.0365%" height="15" fill="rgb(244,5,17)" fg:x="36334" fg:w="44"/><text x="30.3757%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,098 samples, 0.91%)</title><rect x="29.2559%" y="293" width="0.9104%" height="15" fill="rgb(252,159,33)" fg:x="35285" fg:w="1098"/><text x="29.5059%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (44 samples, 0.04%)</title><rect x="30.1696%" y="293" width="0.0365%" height="15" fill="rgb(206,71,0)" fg:x="36387" fg:w="44"/><text x="30.4196%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.01%)</title><rect x="30.2650%" y="277" width="0.0133%" height="15" fill="rgb(233,118,54)" fg:x="36502" fg:w="16"/><text x="30.5150%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (23 samples, 0.02%)</title><rect x="30.2783%" y="277" width="0.0191%" height="15" fill="rgb(234,83,48)" fg:x="36518" fg:w="23"/><text x="30.5283%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (66 samples, 0.05%)</title><rect x="30.2973%" y="277" width="0.0547%" height="15" fill="rgb(228,3,54)" fg:x="36541" fg:w="66"/><text x="30.5473%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (57 samples, 0.05%)</title><rect x="30.3048%" y="261" width="0.0473%" height="15" fill="rgb(226,155,13)" fg:x="36550" fg:w="57"/><text x="30.5548%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (182 samples, 0.15%)</title><rect x="30.2061%" y="293" width="0.1509%" height="15" fill="rgb(241,28,37)" fg:x="36431" fg:w="182"/><text x="30.4561%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (30 samples, 0.02%)</title><rect x="30.4549%" y="277" width="0.0249%" height="15" fill="rgb(233,93,10)" fg:x="36731" fg:w="30"/><text x="30.7049%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (78 samples, 0.06%)</title><rect x="30.6439%" y="261" width="0.0647%" height="15" fill="rgb(225,113,19)" fg:x="36959" fg:w="78"/><text x="30.8939%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (314 samples, 0.26%)</title><rect x="30.4839%" y="277" width="0.2603%" height="15" fill="rgb(241,2,18)" fg:x="36766" fg:w="314"/><text x="30.7339%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (43 samples, 0.04%)</title><rect x="30.7086%" y="261" width="0.0357%" height="15" fill="rgb(228,207,21)" fg:x="37037" fg:w="43"/><text x="30.9586%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (468 samples, 0.39%)</title><rect x="30.3570%" y="293" width="0.3880%" height="15" fill="rgb(213,211,35)" fg:x="36613" fg:w="468"/><text x="30.6070%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (15 samples, 0.01%)</title><rect x="30.7484%" y="293" width="0.0124%" height="15" fill="rgb(209,83,10)" fg:x="37085" fg:w="15"/><text x="30.9984%" y="303.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (39 samples, 0.03%)</title><rect x="30.7956%" y="293" width="0.0323%" height="15" fill="rgb(209,164,1)" fg:x="37142" fg:w="39"/><text x="31.0456%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (207 samples, 0.17%)</title><rect x="30.8280%" y="293" width="0.1716%" height="15" fill="rgb(213,184,43)" fg:x="37181" fg:w="207"/><text x="31.0780%" y="303.50"></text></g><g><title>tio4905`DYLD-STUB$$memcpy (16 samples, 0.01%)</title><rect x="30.9996%" y="293" width="0.0133%" height="15" fill="rgb(231,61,34)" fg:x="37388" fg:w="16"/><text x="31.2496%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (15 samples, 0.01%)</title><rect x="33.2814%" y="229" width="0.0124%" height="15" fill="rgb(235,75,3)" fg:x="40140" fg:w="15"/><text x="33.5314%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (150 samples, 0.12%)</title><rect x="33.2051%" y="261" width="0.1244%" height="15" fill="rgb(220,106,47)" fg:x="40048" fg:w="150"/><text x="33.4551%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (142 samples, 0.12%)</title><rect x="33.2117%" y="245" width="0.1177%" height="15" fill="rgb(210,196,33)" fg:x="40056" fg:w="142"/><text x="33.4617%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.04%)</title><rect x="33.2938%" y="229" width="0.0357%" height="15" fill="rgb(229,154,42)" fg:x="40155" fg:w="43"/><text x="33.5438%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (181 samples, 0.15%)</title><rect x="33.1819%" y="277" width="0.1501%" height="15" fill="rgb(228,114,26)" fg:x="40020" fg:w="181"/><text x="33.4319%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (43 samples, 0.04%)</title><rect x="33.3668%" y="261" width="0.0357%" height="15" fill="rgb(208,144,1)" fg:x="40243" fg:w="43"/><text x="33.6168%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (117 samples, 0.10%)</title><rect x="33.3378%" y="277" width="0.0970%" height="15" fill="rgb(239,112,37)" fg:x="40208" fg:w="117"/><text x="33.5878%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (29 samples, 0.02%)</title><rect x="33.4107%" y="261" width="0.0240%" height="15" fill="rgb(210,96,50)" fg:x="40296" fg:w="29"/><text x="33.6607%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.02%)</title><rect x="33.4115%" y="245" width="0.0232%" height="15" fill="rgb(222,178,2)" fg:x="40297" fg:w="28"/><text x="33.6615%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (50 samples, 0.04%)</title><rect x="33.5235%" y="245" width="0.0415%" height="15" fill="rgb(226,74,18)" fg:x="40432" fg:w="50"/><text x="33.7735%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (166 samples, 0.14%)</title><rect x="33.4348%" y="277" width="0.1376%" height="15" fill="rgb(225,67,54)" fg:x="40325" fg:w="166"/><text x="33.6848%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (104 samples, 0.09%)</title><rect x="33.4862%" y="261" width="0.0862%" height="15" fill="rgb(251,92,32)" fg:x="40387" fg:w="104"/><text x="33.7362%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (17 samples, 0.01%)</title><rect x="33.5724%" y="277" width="0.0141%" height="15" fill="rgb(228,149,22)" fg:x="40491" fg:w="17"/><text x="33.8224%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (43 samples, 0.04%)</title><rect x="33.5865%" y="277" width="0.0357%" height="15" fill="rgb(243,54,13)" fg:x="40508" fg:w="43"/><text x="33.8365%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (204 samples, 0.17%)</title><rect x="33.6296%" y="277" width="0.1691%" height="15" fill="rgb(243,180,28)" fg:x="40560" fg:w="204"/><text x="33.8796%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (99 samples, 0.08%)</title><rect x="33.8477%" y="213" width="0.0821%" height="15" fill="rgb(208,167,24)" fg:x="40823" fg:w="99"/><text x="34.0977%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (57 samples, 0.05%)</title><rect x="33.8825%" y="197" width="0.0473%" height="15" fill="rgb(245,73,45)" fg:x="40865" fg:w="57"/><text x="34.1325%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (122 samples, 0.10%)</title><rect x="33.8294%" y="245" width="0.1012%" height="15" fill="rgb(237,203,48)" fg:x="40801" fg:w="122"/><text x="34.0794%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (103 samples, 0.09%)</title><rect x="33.8452%" y="229" width="0.0854%" height="15" fill="rgb(211,197,16)" fg:x="40820" fg:w="103"/><text x="34.0952%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (171 samples, 0.14%)</title><rect x="33.7988%" y="277" width="0.1418%" height="15" fill="rgb(243,99,51)" fg:x="40764" fg:w="171"/><text x="34.0488%" y="287.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (143 samples, 0.12%)</title><rect x="33.8220%" y="261" width="0.1186%" height="15" fill="rgb(215,123,29)" fg:x="40792" fg:w="143"/><text x="34.0720%" y="271.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (13,919 samples, 11.54%)</title><rect x="22.4023%" y="341" width="11.5407%" height="15" fill="rgb(239,186,37)" fg:x="27019" fg:w="13919"/><text x="22.6523%" y="351.50">tio4905`&lt;tio4905:..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (13,861 samples, 11.49%)</title><rect x="22.4504%" y="325" width="11.4926%" height="15" fill="rgb(252,136,39)" fg:x="27077" fg:w="13861"/><text x="22.7004%" y="335.50">tio4905`tio4905::..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (12,863 samples, 10.67%)</title><rect x="23.2779%" y="309" width="10.6651%" height="15" fill="rgb(223,213,32)" fg:x="28075" fg:w="12863"/><text x="23.5279%" y="319.50">tio4905`tio4905:..</text></g><g><title>tio4905`alloc::slice::merge_sort (3,516 samples, 2.92%)</title><rect x="31.0278%" y="293" width="2.9152%" height="15" fill="rgb(233,115,5)" fg:x="37422" fg:w="3516"/><text x="31.2778%" y="303.50">ti..</text></g><g><title>tio4905`rand::rng::Rng::gen_range (119 samples, 0.10%)</title><rect x="33.9447%" y="341" width="0.0987%" height="15" fill="rgb(207,226,44)" fg:x="40940" fg:w="119"/><text x="34.1947%" y="351.50"></text></g><g><title>tio4905`rand_chacha::guts::refill_wide::impl_avx2 (14 samples, 0.01%)</title><rect x="34.0317%" y="325" width="0.0116%" height="15" fill="rgb(208,126,0)" fg:x="41045" fg:w="14"/><text x="34.2817%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.02%)</title><rect x="35.1303%" y="309" width="0.0240%" height="15" fill="rgb(244,66,21)" fg:x="42370" fg:w="29"/><text x="35.3803%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.01%)</title><rect x="35.1419%" y="293" width="0.0124%" height="15" fill="rgb(222,97,12)" fg:x="42384" fg:w="15"/><text x="35.3919%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (26 samples, 0.02%)</title><rect x="35.2041%" y="277" width="0.0216%" height="15" fill="rgb(219,213,19)" fg:x="42459" fg:w="26"/><text x="35.4541%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (149 samples, 0.12%)</title><rect x="35.1544%" y="309" width="0.1235%" height="15" fill="rgb(252,169,30)" fg:x="42399" fg:w="149"/><text x="35.4044%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (140 samples, 0.12%)</title><rect x="35.1618%" y="293" width="0.1161%" height="15" fill="rgb(206,32,51)" fg:x="42408" fg:w="140"/><text x="35.4118%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (63 samples, 0.05%)</title><rect x="35.2257%" y="277" width="0.0522%" height="15" fill="rgb(250,172,42)" fg:x="42485" fg:w="63"/><text x="35.4757%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (192 samples, 0.16%)</title><rect x="35.1196%" y="325" width="0.1592%" height="15" fill="rgb(209,34,43)" fg:x="42357" fg:w="192"/><text x="35.3696%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.03%)</title><rect x="35.2837%" y="325" width="0.0265%" height="15" fill="rgb(223,11,35)" fg:x="42555" fg:w="32"/><text x="35.5337%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.01%)</title><rect x="35.2987%" y="309" width="0.0116%" height="15" fill="rgb(251,219,26)" fg:x="42573" fg:w="14"/><text x="35.5487%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.01%)</title><rect x="35.2987%" y="293" width="0.0116%" height="15" fill="rgb(231,119,3)" fg:x="42573" fg:w="14"/><text x="35.5487%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="35.3525%" y="293" width="0.0116%" height="15" fill="rgb(216,97,11)" fg:x="42638" fg:w="14"/><text x="35.6025%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (74 samples, 0.06%)</title><rect x="35.3103%" y="325" width="0.0614%" height="15" fill="rgb(223,59,9)" fg:x="42587" fg:w="74"/><text x="35.5603%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (45 samples, 0.04%)</title><rect x="35.3343%" y="309" width="0.0373%" height="15" fill="rgb(233,93,31)" fg:x="42616" fg:w="45"/><text x="35.5843%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.03%)</title><rect x="35.3841%" y="325" width="0.0298%" height="15" fill="rgb(239,81,33)" fg:x="42676" fg:w="36"/><text x="35.6341%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.03%)</title><rect x="35.8185%" y="309" width="0.0282%" height="15" fill="rgb(213,120,34)" fg:x="43200" fg:w="34"/><text x="36.0685%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (32 samples, 0.03%)</title><rect x="35.8202%" y="293" width="0.0265%" height="15" fill="rgb(243,49,53)" fg:x="43202" fg:w="32"/><text x="36.0702%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.03%)</title><rect x="35.8210%" y="277" width="0.0257%" height="15" fill="rgb(247,216,33)" fg:x="43203" fg:w="31"/><text x="36.0710%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.01%)</title><rect x="35.8334%" y="261" width="0.0133%" height="15" fill="rgb(226,26,14)" fg:x="43218" fg:w="16"/><text x="36.0834%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.01%)</title><rect x="35.8467%" y="309" width="0.0108%" height="15" fill="rgb(215,49,53)" fg:x="43234" fg:w="13"/><text x="36.0967%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.02%)</title><rect x="35.8575%" y="309" width="0.0224%" height="15" fill="rgb(245,162,40)" fg:x="43247" fg:w="27"/><text x="36.1075%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.01%)</title><rect x="35.8650%" y="293" width="0.0149%" height="15" fill="rgb(229,68,17)" fg:x="43256" fg:w="18"/><text x="36.1150%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (49 samples, 0.04%)</title><rect x="35.8882%" y="309" width="0.0406%" height="15" fill="rgb(213,182,10)" fg:x="43284" fg:w="49"/><text x="36.1382%" y="319.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,293 samples, 1.90%)</title><rect x="34.0458%" y="341" width="1.9012%" height="15" fill="rgb(245,125,30)" fg:x="41062" fg:w="2293"/><text x="34.2958%" y="351.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (633 samples, 0.52%)</title><rect x="35.4222%" y="325" width="0.5248%" height="15" fill="rgb(232,202,2)" fg:x="42722" fg:w="633"/><text x="35.6722%" y="335.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.02%)</title><rect x="35.9288%" y="309" width="0.0182%" height="15" fill="rgb(237,140,51)" fg:x="43333" fg:w="22"/><text x="36.1788%" y="319.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (18 samples, 0.01%)</title><rect x="35.9321%" y="293" width="0.0149%" height="15" fill="rgb(236,157,25)" fg:x="43337" fg:w="18"/><text x="36.1821%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="35.9329%" y="277" width="0.0141%" height="15" fill="rgb(219,209,0)" fg:x="43338" fg:w="17"/><text x="36.1829%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.01%)</title><rect x="35.9329%" y="261" width="0.0141%" height="15" fill="rgb(240,116,54)" fg:x="43338" fg:w="17"/><text x="36.1829%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.01%)</title><rect x="35.9329%" y="245" width="0.0141%" height="15" fill="rgb(216,10,36)" fg:x="43338" fg:w="17"/><text x="36.1829%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.01%)</title><rect x="35.9578%" y="325" width="0.0149%" height="15" fill="rgb(222,72,44)" fg:x="43368" fg:w="18"/><text x="36.2078%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.01%)</title><rect x="35.9620%" y="309" width="0.0108%" height="15" fill="rgb(232,159,9)" fg:x="43373" fg:w="13"/><text x="36.2120%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.04%)</title><rect x="36.2464%" y="309" width="0.0390%" height="15" fill="rgb(210,39,32)" fg:x="43716" fg:w="47"/><text x="36.4964%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.03%)</title><rect x="36.2563%" y="293" width="0.0290%" height="15" fill="rgb(216,194,45)" fg:x="43728" fg:w="35"/><text x="36.5063%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.03%)</title><rect x="36.2580%" y="277" width="0.0274%" height="15" fill="rgb(218,18,35)" fg:x="43730" fg:w="33"/><text x="36.5080%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.01%)</title><rect x="36.2729%" y="261" width="0.0124%" height="15" fill="rgb(207,83,51)" fg:x="43748" fg:w="15"/><text x="36.5229%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.01%)</title><rect x="36.2903%" y="309" width="0.0141%" height="15" fill="rgb(225,63,43)" fg:x="43769" fg:w="17"/><text x="36.5403%" y="319.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (624 samples, 0.52%)</title><rect x="35.9470%" y="341" width="0.5174%" height="15" fill="rgb(207,57,36)" fg:x="43355" fg:w="624"/><text x="36.1970%" y="351.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (582 samples, 0.48%)</title><rect x="35.9819%" y="325" width="0.4826%" height="15" fill="rgb(216,99,33)" fg:x="43397" fg:w="582"/><text x="36.2319%" y="335.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (171 samples, 0.14%)</title><rect x="36.3226%" y="309" width="0.1418%" height="15" fill="rgb(225,42,16)" fg:x="43808" fg:w="171"/><text x="36.5726%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (27 samples, 0.02%)</title><rect x="36.4661%" y="293" width="0.0224%" height="15" fill="rgb(220,201,45)" fg:x="43981" fg:w="27"/><text x="36.7161%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.02%)</title><rect x="36.5755%" y="277" width="0.0232%" height="15" fill="rgb(225,33,4)" fg:x="44113" fg:w="28"/><text x="36.8255%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (17 samples, 0.01%)</title><rect x="36.5987%" y="277" width="0.0141%" height="15" fill="rgb(224,33,50)" fg:x="44141" fg:w="17"/><text x="36.8487%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (94 samples, 0.08%)</title><rect x="36.6974%" y="261" width="0.0779%" height="15" fill="rgb(246,198,51)" fg:x="44260" fg:w="94"/><text x="36.9474%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (26 samples, 0.02%)</title><rect x="36.7753%" y="261" width="0.0216%" height="15" fill="rgb(205,22,4)" fg:x="44354" fg:w="26"/><text x="37.0253%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (95 samples, 0.08%)</title><rect x="36.7969%" y="261" width="0.0788%" height="15" fill="rgb(206,3,8)" fg:x="44380" fg:w="95"/><text x="37.0469%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (90 samples, 0.07%)</title><rect x="36.8010%" y="245" width="0.0746%" height="15" fill="rgb(251,23,15)" fg:x="44385" fg:w="90"/><text x="37.0510%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (324 samples, 0.27%)</title><rect x="36.6128%" y="277" width="0.2686%" height="15" fill="rgb(252,88,28)" fg:x="44158" fg:w="324"/><text x="36.8628%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (44 samples, 0.04%)</title><rect x="36.9884%" y="261" width="0.0365%" height="15" fill="rgb(212,127,14)" fg:x="44611" fg:w="44"/><text x="37.2384%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (128 samples, 0.11%)</title><rect x="37.2106%" y="245" width="0.1061%" height="15" fill="rgb(247,145,37)" fg:x="44879" fg:w="128"/><text x="37.4606%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (655 samples, 0.54%)</title><rect x="36.8815%" y="277" width="0.5431%" height="15" fill="rgb(209,117,53)" fg:x="44482" fg:w="655"/><text x="37.1315%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (477 samples, 0.40%)</title><rect x="37.0291%" y="261" width="0.3955%" height="15" fill="rgb(212,90,42)" fg:x="44660" fg:w="477"/><text x="37.2791%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (130 samples, 0.11%)</title><rect x="37.3168%" y="245" width="0.1078%" height="15" fill="rgb(218,164,37)" fg:x="45007" fg:w="130"/><text x="37.5668%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (36 samples, 0.03%)</title><rect x="37.4245%" y="277" width="0.0298%" height="15" fill="rgb(246,65,34)" fg:x="45137" fg:w="36"/><text x="37.6745%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (38 samples, 0.03%)</title><rect x="37.4544%" y="277" width="0.0315%" height="15" fill="rgb(231,100,33)" fg:x="45173" fg:w="38"/><text x="37.7044%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (105 samples, 0.09%)</title><rect x="37.4859%" y="277" width="0.0871%" height="15" fill="rgb(228,126,14)" fg:x="45211" fg:w="105"/><text x="37.7359%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (18 samples, 0.01%)</title><rect x="37.5730%" y="277" width="0.0149%" height="15" fill="rgb(215,173,21)" fg:x="45316" fg:w="18"/><text x="37.8230%" y="287.50"></text></g><g><title>tio4905`__rdl_alloc (16 samples, 0.01%)</title><rect x="37.6152%" y="277" width="0.0133%" height="15" fill="rgb(210,6,40)" fg:x="45367" fg:w="16"/><text x="37.8652%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (172 samples, 0.14%)</title><rect x="43.2683%" y="229" width="0.1426%" height="15" fill="rgb(212,48,18)" fg:x="52185" fg:w="172"/><text x="43.5183%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (83 samples, 0.07%)</title><rect x="43.3421%" y="213" width="0.0688%" height="15" fill="rgb(230,214,11)" fg:x="52274" fg:w="83"/><text x="43.5921%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (236 samples, 0.20%)</title><rect x="43.2160%" y="245" width="0.1957%" height="15" fill="rgb(254,105,39)" fg:x="52122" fg:w="236"/><text x="43.4660%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (115 samples, 0.10%)</title><rect x="43.8520%" y="213" width="0.0954%" height="15" fill="rgb(245,158,5)" fg:x="52889" fg:w="115"/><text x="44.1020%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (997 samples, 0.83%)</title><rect x="43.4117%" y="245" width="0.8266%" height="15" fill="rgb(249,208,11)" fg:x="52358" fg:w="997"/><text x="43.6617%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (963 samples, 0.80%)</title><rect x="43.4399%" y="229" width="0.7985%" height="15" fill="rgb(210,39,28)" fg:x="52392" fg:w="963"/><text x="43.6899%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (346 samples, 0.29%)</title><rect x="43.9515%" y="213" width="0.2869%" height="15" fill="rgb(211,56,53)" fg:x="53009" fg:w="346"/><text x="44.2015%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (64 samples, 0.05%)</title><rect x="44.1853%" y="197" width="0.0531%" height="15" fill="rgb(226,201,30)" fg:x="53291" fg:w="64"/><text x="44.4353%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,397 samples, 1.16%)</title><rect x="43.0842%" y="261" width="1.1583%" height="15" fill="rgb(239,101,34)" fg:x="51963" fg:w="1397"/><text x="43.3342%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (15 samples, 0.01%)</title><rect x="44.2425%" y="261" width="0.0124%" height="15" fill="rgb(226,209,5)" fg:x="53360" fg:w="15"/><text x="44.4925%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (63 samples, 0.05%)</title><rect x="44.2549%" y="261" width="0.0522%" height="15" fill="rgb(250,105,47)" fg:x="53375" fg:w="63"/><text x="44.5049%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (30 samples, 0.02%)</title><rect x="44.3685%" y="245" width="0.0249%" height="15" fill="rgb(230,72,3)" fg:x="53512" fg:w="30"/><text x="44.6185%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (19 samples, 0.02%)</title><rect x="44.3934%" y="245" width="0.0158%" height="15" fill="rgb(232,218,39)" fg:x="53542" fg:w="19"/><text x="44.6434%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (100 samples, 0.08%)</title><rect x="44.4092%" y="245" width="0.0829%" height="15" fill="rgb(248,166,6)" fg:x="53561" fg:w="100"/><text x="44.6592%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (88 samples, 0.07%)</title><rect x="44.4191%" y="229" width="0.0730%" height="15" fill="rgb(247,89,20)" fg:x="53573" fg:w="88"/><text x="44.6691%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (225 samples, 0.19%)</title><rect x="44.3072%" y="261" width="0.1866%" height="15" fill="rgb(248,130,54)" fg:x="53438" fg:w="225"/><text x="44.5572%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (31 samples, 0.03%)</title><rect x="44.6065%" y="245" width="0.0257%" height="15" fill="rgb(234,196,4)" fg:x="53799" fg:w="31"/><text x="44.8565%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (100 samples, 0.08%)</title><rect x="44.8204%" y="229" width="0.0829%" height="15" fill="rgb(250,143,31)" fg:x="54057" fg:w="100"/><text x="45.0704%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (557 samples, 0.46%)</title><rect x="44.4937%" y="261" width="0.4618%" height="15" fill="rgb(211,110,34)" fg:x="53663" fg:w="557"/><text x="44.7437%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (385 samples, 0.32%)</title><rect x="44.6363%" y="245" width="0.3192%" height="15" fill="rgb(215,124,48)" fg:x="53835" fg:w="385"/><text x="44.8863%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (63 samples, 0.05%)</title><rect x="44.9033%" y="229" width="0.0522%" height="15" fill="rgb(216,46,13)" fg:x="54157" fg:w="63"/><text x="45.1533%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (26 samples, 0.02%)</title><rect x="44.9597%" y="261" width="0.0216%" height="15" fill="rgb(205,184,25)" fg:x="54225" fg:w="26"/><text x="45.2097%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (30 samples, 0.02%)</title><rect x="44.9813%" y="261" width="0.0249%" height="15" fill="rgb(228,1,10)" fg:x="54251" fg:w="30"/><text x="45.2313%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.01%)</title><rect x="45.0161%" y="261" width="0.0108%" height="15" fill="rgb(213,116,27)" fg:x="54293" fg:w="13"/><text x="45.2661%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (33 samples, 0.03%)</title><rect x="45.0376%" y="261" width="0.0274%" height="15" fill="rgb(241,95,50)" fg:x="54319" fg:w="33"/><text x="45.2876%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (186 samples, 0.15%)</title><rect x="45.0650%" y="261" width="0.1542%" height="15" fill="rgb(238,48,32)" fg:x="54352" fg:w="186"/><text x="45.3150%" y="271.50"></text></g><g><title>tio4905`DYLD-STUB$$memcpy (15 samples, 0.01%)</title><rect x="45.2192%" y="261" width="0.0124%" height="15" fill="rgb(235,113,49)" fg:x="54538" fg:w="15"/><text x="45.4692%" y="271.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (15 samples, 0.01%)</title><rect x="45.2516%" y="261" width="0.0124%" height="15" fill="rgb(205,127,43)" fg:x="54577" fg:w="15"/><text x="45.5016%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.03%)</title><rect x="47.1909%" y="229" width="0.0257%" height="15" fill="rgb(250,162,2)" fg:x="56916" fg:w="31"/><text x="47.4409%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.02%)</title><rect x="47.1959%" y="213" width="0.0207%" height="15" fill="rgb(220,13,41)" fg:x="56922" fg:w="25"/><text x="47.4459%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.01%)</title><rect x="47.2042%" y="197" width="0.0124%" height="15" fill="rgb(249,221,25)" fg:x="56932" fg:w="15"/><text x="47.4542%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.01%)</title><rect x="47.2854%" y="197" width="0.0108%" height="15" fill="rgb(215,208,19)" fg:x="57030" fg:w="13"/><text x="47.5354%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (204 samples, 0.17%)</title><rect x="47.1751%" y="245" width="0.1691%" height="15" fill="rgb(236,175,2)" fg:x="56897" fg:w="204"/><text x="47.4251%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (154 samples, 0.13%)</title><rect x="47.2166%" y="229" width="0.1277%" height="15" fill="rgb(241,52,2)" fg:x="56947" fg:w="154"/><text x="47.4666%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (147 samples, 0.12%)</title><rect x="47.2224%" y="213" width="0.1219%" height="15" fill="rgb(248,140,14)" fg:x="56954" fg:w="147"/><text x="47.4724%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (58 samples, 0.05%)</title><rect x="47.2962%" y="197" width="0.0481%" height="15" fill="rgb(253,22,42)" fg:x="57043" fg:w="58"/><text x="47.5462%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.02%)</title><rect x="47.3211%" y="181" width="0.0232%" height="15" fill="rgb(234,61,47)" fg:x="57073" fg:w="28"/><text x="47.5711%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (59 samples, 0.05%)</title><rect x="47.3758%" y="229" width="0.0489%" height="15" fill="rgb(208,226,15)" fg:x="57139" fg:w="59"/><text x="47.6258%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (131 samples, 0.11%)</title><rect x="47.3459%" y="245" width="0.1086%" height="15" fill="rgb(217,221,4)" fg:x="57103" fg:w="131"/><text x="47.5959%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.02%)</title><rect x="47.4338%" y="229" width="0.0207%" height="15" fill="rgb(212,174,34)" fg:x="57209" fg:w="25"/><text x="47.6838%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.02%)</title><rect x="47.4355%" y="213" width="0.0191%" height="15" fill="rgb(253,83,4)" fg:x="57211" fg:w="23"/><text x="47.6855%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (43 samples, 0.04%)</title><rect x="47.5366%" y="213" width="0.0357%" height="15" fill="rgb(250,195,49)" fg:x="57333" fg:w="43"/><text x="47.7866%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (162 samples, 0.13%)</title><rect x="47.4546%" y="245" width="0.1343%" height="15" fill="rgb(241,192,25)" fg:x="57234" fg:w="162"/><text x="47.7046%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (111 samples, 0.09%)</title><rect x="47.4968%" y="229" width="0.0920%" height="15" fill="rgb(208,124,10)" fg:x="57285" fg:w="111"/><text x="47.7468%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.02%)</title><rect x="47.5723%" y="213" width="0.0166%" height="15" fill="rgb(222,33,0)" fg:x="57376" fg:w="20"/><text x="47.8223%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (19 samples, 0.02%)</title><rect x="47.5889%" y="245" width="0.0158%" height="15" fill="rgb(234,209,28)" fg:x="57396" fg:w="19"/><text x="47.8389%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (76 samples, 0.06%)</title><rect x="47.6046%" y="245" width="0.0630%" height="15" fill="rgb(224,11,23)" fg:x="57415" fg:w="76"/><text x="47.8546%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.01%)</title><rect x="47.6677%" y="245" width="0.0108%" height="15" fill="rgb(232,99,1)" fg:x="57491" fg:w="13"/><text x="47.9177%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (189 samples, 0.16%)</title><rect x="47.6801%" y="245" width="0.1567%" height="15" fill="rgb(237,95,45)" fg:x="57506" fg:w="189"/><text x="47.9301%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (106 samples, 0.09%)</title><rect x="47.8849%" y="181" width="0.0879%" height="15" fill="rgb(208,109,11)" fg:x="57753" fg:w="106"/><text x="48.1349%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (63 samples, 0.05%)</title><rect x="47.9205%" y="165" width="0.0522%" height="15" fill="rgb(216,190,48)" fg:x="57796" fg:w="63"/><text x="48.1705%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (129 samples, 0.11%)</title><rect x="47.8683%" y="213" width="0.1070%" height="15" fill="rgb(251,171,36)" fg:x="57733" fg:w="129"/><text x="48.1183%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (112 samples, 0.09%)</title><rect x="47.8824%" y="197" width="0.0929%" height="15" fill="rgb(230,62,22)" fg:x="57750" fg:w="112"/><text x="48.1324%" y="207.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (174 samples, 0.14%)</title><rect x="47.8368%" y="245" width="0.1443%" height="15" fill="rgb(225,114,35)" fg:x="57695" fg:w="174"/><text x="48.0868%" y="255.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (143 samples, 0.12%)</title><rect x="47.8625%" y="229" width="0.1186%" height="15" fill="rgb(215,118,42)" fg:x="57726" fg:w="143"/><text x="48.1125%" y="239.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,893 samples, 11.52%)</title><rect x="36.4652%" y="325" width="11.5191%" height="15" fill="rgb(243,119,21)" fg:x="43980" fg:w="13893"/><text x="36.7152%" y="335.50">tio4905`&lt;alloc::v..</text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (13,893 samples, 11.52%)</title><rect x="36.4652%" y="309" width="11.5191%" height="15" fill="rgb(252,177,53)" fg:x="43980" fg:w="13893"/><text x="36.7152%" y="319.50">tio4905`&lt;tio4905:..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (13,815 samples, 11.45%)</title><rect x="36.5299%" y="293" width="11.4545%" height="15" fill="rgb(237,209,29)" fg:x="44058" fg:w="13815"/><text x="36.7799%" y="303.50">tio4905`tio4905::..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (12,456 samples, 10.33%)</title><rect x="37.6567%" y="277" width="10.3277%" height="15" fill="rgb(212,65,23)" fg:x="45417" fg:w="12456"/><text x="37.9067%" y="287.50">tio4905`tio4905..</text></g><g><title>tio4905`alloc::slice::merge_sort (3,281 samples, 2.72%)</title><rect x="45.2640%" y="261" width="2.7204%" height="15" fill="rgb(230,222,46)" fg:x="54592" fg:w="3281"/><text x="45.5140%" y="271.50">ti..</text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (13,912 samples, 11.53%)</title><rect x="36.4644%" y="341" width="11.5349%" height="15" fill="rgb(215,135,32)" fg:x="43979" fg:w="13912"/><text x="36.7144%" y="351.50">tio4905`tio4905::..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (32 samples, 0.03%)</title><rect x="48.0076%" y="325" width="0.0265%" height="15" fill="rgb(246,101,22)" fg:x="57901" fg:w="32"/><text x="48.2576%" y="335.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (44 samples, 0.04%)</title><rect x="47.9993%" y="341" width="0.0365%" height="15" fill="rgb(206,107,13)" fg:x="57891" fg:w="44"/><text x="48.2493%" y="351.50"></text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (31,269 samples, 25.93%)</title><rect x="22.1246%" y="389" width="25.9261%" height="15" fill="rgb(250,100,44)" fg:x="26684" fg:w="31269"/><text x="22.3746%" y="399.50">tio4905`&lt;rayon::iter::for_each::ForEachCo..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (31,269 samples, 25.93%)</title><rect x="22.1246%" y="373" width="25.9261%" height="15" fill="rgb(231,147,38)" fg:x="26684" fg:w="31269"/><text x="22.3746%" y="383.50">tio4905`core::ops::function::impls::_&lt;imp..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (31,250 samples, 25.91%)</title><rect x="22.1403%" y="357" width="25.9104%" height="15" fill="rgb(229,8,40)" fg:x="26703" fg:w="31250"/><text x="22.3903%" y="367.50">tio4905`tio4905::genetic_algorithm::ga::r..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::tournament (18 samples, 0.01%)</title><rect x="48.0358%" y="341" width="0.0149%" height="15" fill="rgb(221,135,30)" fg:x="57935" fg:w="18"/><text x="48.2858%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.02%)</title><rect x="48.0789%" y="309" width="0.0158%" height="15" fill="rgb(249,193,18)" fg:x="57987" fg:w="19"/><text x="48.3289%" y="319.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (66 samples, 0.05%)</title><rect x="48.1013%" y="309" width="0.0547%" height="15" fill="rgb(209,133,39)" fg:x="58014" fg:w="66"/><text x="48.3513%" y="319.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (56 samples, 0.05%)</title><rect x="48.1096%" y="293" width="0.0464%" height="15" fill="rgb(232,100,14)" fg:x="58024" fg:w="56"/><text x="48.3596%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.01%)</title><rect x="48.1966%" y="261" width="0.0124%" height="15" fill="rgb(224,185,1)" fg:x="58129" fg:w="15"/><text x="48.4466%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.01%)</title><rect x="48.2132%" y="261" width="0.0149%" height="15" fill="rgb(223,139,8)" fg:x="58149" fg:w="18"/><text x="48.4632%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.01%)</title><rect x="48.2132%" y="245" width="0.0149%" height="15" fill="rgb(232,213,38)" fg:x="58149" fg:w="18"/><text x="48.4632%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (63 samples, 0.05%)</title><rect x="48.1784%" y="277" width="0.0522%" height="15" fill="rgb(207,94,22)" fg:x="58107" fg:w="63"/><text x="48.4284%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.02%)</title><rect x="48.2895%" y="245" width="0.0166%" height="15" fill="rgb(219,183,54)" fg:x="58241" fg:w="20"/><text x="48.5395%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (114 samples, 0.09%)</title><rect x="48.2306%" y="277" width="0.0945%" height="15" fill="rgb(216,185,54)" fg:x="58170" fg:w="114"/><text x="48.4806%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (86 samples, 0.07%)</title><rect x="48.2538%" y="261" width="0.0713%" height="15" fill="rgb(254,217,39)" fg:x="58198" fg:w="86"/><text x="48.5038%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.02%)</title><rect x="48.3061%" y="245" width="0.0191%" height="15" fill="rgb(240,178,23)" fg:x="58261" fg:w="23"/><text x="48.5561%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (25 samples, 0.02%)</title><rect x="48.3384%" y="277" width="0.0207%" height="15" fill="rgb(218,11,47)" fg:x="58300" fg:w="25"/><text x="48.5884%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.04%)</title><rect x="49.6824%" y="245" width="0.0398%" height="15" fill="rgb(218,51,51)" fg:x="59921" fg:w="48"/><text x="49.9324%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.03%)</title><rect x="49.6965%" y="229" width="0.0257%" height="15" fill="rgb(238,126,27)" fg:x="59938" fg:w="31"/><text x="49.9465%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.01%)</title><rect x="49.7081%" y="213" width="0.0141%" height="15" fill="rgb(249,202,22)" fg:x="59952" fg:w="17"/><text x="49.9581%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.01%)</title><rect x="49.7902%" y="213" width="0.0108%" height="15" fill="rgb(254,195,49)" fg:x="60051" fg:w="13"/><text x="50.0402%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (243 samples, 0.20%)</title><rect x="49.6592%" y="261" width="0.2015%" height="15" fill="rgb(208,123,14)" fg:x="59893" fg:w="243"/><text x="49.9092%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (167 samples, 0.14%)</title><rect x="49.7222%" y="245" width="0.1385%" height="15" fill="rgb(224,200,8)" fg:x="59969" fg:w="167"/><text x="49.9722%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (161 samples, 0.13%)</title><rect x="49.7272%" y="229" width="0.1335%" height="15" fill="rgb(217,61,36)" fg:x="59975" fg:w="161"/><text x="49.9772%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (72 samples, 0.06%)</title><rect x="49.8010%" y="213" width="0.0597%" height="15" fill="rgb(206,35,45)" fg:x="60064" fg:w="72"/><text x="50.0510%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.01%)</title><rect x="49.8906%" y="245" width="0.0141%" height="15" fill="rgb(217,65,33)" fg:x="60172" fg:w="17"/><text x="50.1406%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.01%)</title><rect x="49.8922%" y="229" width="0.0124%" height="15" fill="rgb(222,158,48)" fg:x="60174" fg:w="15"/><text x="50.1422%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (48 samples, 0.04%)</title><rect x="49.8657%" y="261" width="0.0398%" height="15" fill="rgb(254,2,54)" fg:x="60142" fg:w="48"/><text x="50.1157%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="49.9619%" y="229" width="0.0133%" height="15" fill="rgb(250,143,38)" fg:x="60258" fg:w="16"/><text x="50.2119%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (86 samples, 0.07%)</title><rect x="49.9055%" y="261" width="0.0713%" height="15" fill="rgb(248,25,0)" fg:x="60190" fg:w="86"/><text x="50.1555%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (56 samples, 0.05%)</title><rect x="49.9304%" y="245" width="0.0464%" height="15" fill="rgb(206,152,27)" fg:x="60220" fg:w="56"/><text x="50.1804%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.03%)</title><rect x="49.9909%" y="261" width="0.0332%" height="15" fill="rgb(240,77,30)" fg:x="60293" fg:w="40"/><text x="50.2409%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.02%)</title><rect x="50.3134%" y="245" width="0.0166%" height="15" fill="rgb(231,5,3)" fg:x="60682" fg:w="20"/><text x="50.5634%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.01%)</title><rect x="50.3151%" y="229" width="0.0149%" height="15" fill="rgb(207,226,32)" fg:x="60684" fg:w="18"/><text x="50.5651%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.01%)</title><rect x="50.3159%" y="213" width="0.0141%" height="15" fill="rgb(222,207,47)" fg:x="60685" fg:w="17"/><text x="50.5659%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.01%)</title><rect x="50.3308%" y="245" width="0.0116%" height="15" fill="rgb(229,115,45)" fg:x="60703" fg:w="14"/><text x="50.5808%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.01%)</title><rect x="50.3424%" y="245" width="0.0133%" height="15" fill="rgb(224,191,6)" fg:x="60717" fg:w="16"/><text x="50.5924%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (26 samples, 0.02%)</title><rect x="50.3623%" y="245" width="0.0216%" height="15" fill="rgb(230,227,24)" fg:x="60741" fg:w="26"/><text x="50.6123%" y="255.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (2,701 samples, 2.24%)</title><rect x="48.1560%" y="309" width="2.2395%" height="15" fill="rgb(228,80,19)" fg:x="58080" fg:w="2701"/><text x="48.4060%" y="319.50">t..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,687 samples, 2.23%)</title><rect x="48.1676%" y="293" width="2.2279%" height="15" fill="rgb(247,229,0)" fg:x="58094" fg:w="2687"/><text x="48.4176%" y="303.50">t..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,439 samples, 2.02%)</title><rect x="48.3732%" y="277" width="2.0223%" height="15" fill="rgb(237,194,15)" fg:x="58342" fg:w="2439"/><text x="48.6232%" y="287.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (445 samples, 0.37%)</title><rect x="50.0265%" y="261" width="0.3690%" height="15" fill="rgb(219,203,20)" fg:x="60336" fg:w="445"/><text x="50.2765%" y="271.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="50.3839%" y="245" width="0.0116%" height="15" fill="rgb(234,128,8)" fg:x="60767" fg:w="14"/><text x="50.6339%" y="255.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (77 samples, 0.06%)</title><rect x="50.3972%" y="309" width="0.0638%" height="15" fill="rgb(248,202,8)" fg:x="60783" fg:w="77"/><text x="50.6472%" y="319.50"></text></g><g><title>tio4905`rand_chacha::guts::refill_wide::impl_avx2 (14 samples, 0.01%)</title><rect x="50.4494%" y="293" width="0.0116%" height="15" fill="rgb(206,104,37)" fg:x="60846" fg:w="14"/><text x="50.6994%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="50.7014%" y="277" width="0.0108%" height="15" fill="rgb(223,8,27)" fg:x="61150" fg:w="13"/><text x="50.9514%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.04%)</title><rect x="50.6965%" y="293" width="0.0406%" height="15" fill="rgb(216,217,28)" fg:x="61144" fg:w="49"/><text x="50.9465%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.02%)</title><rect x="50.7122%" y="277" width="0.0249%" height="15" fill="rgb(249,199,1)" fg:x="61163" fg:w="30"/><text x="50.9622%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.02%)</title><rect x="50.7131%" y="261" width="0.0240%" height="15" fill="rgb(240,85,17)" fg:x="61164" fg:w="29"/><text x="50.9631%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.02%)</title><rect x="50.7487%" y="293" width="0.0166%" height="15" fill="rgb(206,108,45)" fg:x="61207" fg:w="20"/><text x="50.9987%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.01%)</title><rect x="50.7529%" y="277" width="0.0124%" height="15" fill="rgb(245,210,41)" fg:x="61212" fg:w="15"/><text x="51.0029%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (487 samples, 0.40%)</title><rect x="50.4610%" y="309" width="0.4038%" height="15" fill="rgb(206,13,37)" fg:x="60860" fg:w="487"/><text x="50.7110%" y="319.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (107 samples, 0.09%)</title><rect x="50.7761%" y="293" width="0.0887%" height="15" fill="rgb(250,61,18)" fg:x="61240" fg:w="107"/><text x="51.0261%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (115 samples, 0.10%)</title><rect x="50.8648%" y="309" width="0.0954%" height="15" fill="rgb(235,172,48)" fg:x="61347" fg:w="115"/><text x="51.1148%" y="319.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (102 samples, 0.08%)</title><rect x="50.8756%" y="293" width="0.0846%" height="15" fill="rgb(249,201,17)" fg:x="61360" fg:w="102"/><text x="51.1256%" y="303.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (22 samples, 0.02%)</title><rect x="50.9419%" y="277" width="0.0182%" height="15" fill="rgb(219,208,6)" fg:x="61440" fg:w="22"/><text x="51.1919%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="50.9825%" y="245" width="0.0141%" height="15" fill="rgb(248,31,23)" fg:x="61489" fg:w="17"/><text x="51.2325%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (22 samples, 0.02%)</title><rect x="51.0190%" y="229" width="0.0182%" height="15" fill="rgb(245,15,42)" fg:x="61533" fg:w="22"/><text x="51.2690%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.05%)</title><rect x="51.0049%" y="245" width="0.0539%" height="15" fill="rgb(222,217,39)" fg:x="61516" fg:w="65"/><text x="51.2549%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.02%)</title><rect x="51.0406%" y="229" width="0.0182%" height="15" fill="rgb(210,219,27)" fg:x="61559" fg:w="22"/><text x="51.2906%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.01%)</title><rect x="51.0439%" y="213" width="0.0149%" height="15" fill="rgb(252,166,36)" fg:x="61563" fg:w="18"/><text x="51.2939%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="51.1193%" y="213" width="0.0207%" height="15" fill="rgb(245,132,34)" fg:x="61654" fg:w="25"/><text x="51.3693%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (128 samples, 0.11%)</title><rect x="51.0588%" y="245" width="0.1061%" height="15" fill="rgb(236,54,3)" fg:x="61581" fg:w="128"/><text x="51.3088%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (89 samples, 0.07%)</title><rect x="51.0911%" y="229" width="0.0738%" height="15" fill="rgb(241,173,43)" fg:x="61620" fg:w="89"/><text x="51.3411%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (30 samples, 0.02%)</title><rect x="51.1401%" y="213" width="0.0249%" height="15" fill="rgb(215,190,9)" fg:x="61679" fg:w="30"/><text x="51.3901%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.02%)</title><rect x="51.1782%" y="245" width="0.0224%" height="15" fill="rgb(242,101,16)" fg:x="61725" fg:w="27"/><text x="51.4282%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.05%)</title><rect x="52.5280%" y="213" width="0.0547%" height="15" fill="rgb(223,190,21)" fg:x="63353" fg:w="66"/><text x="52.7780%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (53 samples, 0.04%)</title><rect x="52.5388%" y="197" width="0.0439%" height="15" fill="rgb(215,228,25)" fg:x="63366" fg:w="53"/><text x="52.7888%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.02%)</title><rect x="52.5612%" y="181" width="0.0216%" height="15" fill="rgb(225,36,22)" fg:x="63393" fg:w="26"/><text x="52.8112%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.02%)</title><rect x="52.6681%" y="181" width="0.0199%" height="15" fill="rgb(251,106,46)" fg:x="63522" fg:w="24"/><text x="52.9181%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (227 samples, 0.19%)</title><rect x="52.5827%" y="213" width="0.1882%" height="15" fill="rgb(208,90,1)" fg:x="63419" fg:w="227"/><text x="52.8327%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (216 samples, 0.18%)</title><rect x="52.5919%" y="197" width="0.1791%" height="15" fill="rgb(243,10,4)" fg:x="63430" fg:w="216"/><text x="52.8419%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (100 samples, 0.08%)</title><rect x="52.6880%" y="181" width="0.0829%" height="15" fill="rgb(212,137,27)" fg:x="63546" fg:w="100"/><text x="52.9380%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="52.7560%" y="165" width="0.0149%" height="15" fill="rgb(231,220,49)" fg:x="63628" fg:w="18"/><text x="53.0060%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (342 samples, 0.28%)</title><rect x="52.4899%" y="229" width="0.2836%" height="15" fill="rgb(237,96,20)" fg:x="63307" fg:w="342"/><text x="52.7399%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.01%)</title><rect x="52.8016%" y="213" width="0.0133%" height="15" fill="rgb(239,229,30)" fg:x="63683" fg:w="16"/><text x="53.0516%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (70 samples, 0.06%)</title><rect x="52.7801%" y="229" width="0.0580%" height="15" fill="rgb(219,65,33)" fg:x="63657" fg:w="70"/><text x="53.0301%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.02%)</title><rect x="52.8191%" y="213" width="0.0191%" height="15" fill="rgb(243,134,7)" fg:x="63704" fg:w="23"/><text x="53.0691%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.02%)</title><rect x="52.8207%" y="197" width="0.0174%" height="15" fill="rgb(216,177,54)" fg:x="63706" fg:w="21"/><text x="53.0707%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (15 samples, 0.01%)</title><rect x="52.8671%" y="213" width="0.0124%" height="15" fill="rgb(211,160,20)" fg:x="63762" fg:w="15"/><text x="53.1171%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.02%)</title><rect x="52.9219%" y="197" width="0.0158%" height="15" fill="rgb(239,85,39)" fg:x="63828" fg:w="19"/><text x="53.1719%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (137 samples, 0.11%)</title><rect x="52.8381%" y="229" width="0.1136%" height="15" fill="rgb(232,125,22)" fg:x="63727" fg:w="137"/><text x="53.0881%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (86 samples, 0.07%)</title><rect x="52.8804%" y="213" width="0.0713%" height="15" fill="rgb(244,57,34)" fg:x="63778" fg:w="86"/><text x="53.1304%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.01%)</title><rect x="52.9376%" y="197" width="0.0141%" height="15" fill="rgb(214,203,32)" fg:x="63847" fg:w="17"/><text x="53.1876%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.04%)</title><rect x="52.9741%" y="229" width="0.0365%" height="15" fill="rgb(207,58,43)" fg:x="63891" fg:w="44"/><text x="53.2241%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.03%)</title><rect x="53.2684%" y="213" width="0.0307%" height="15" fill="rgb(215,193,15)" fg:x="64246" fg:w="37"/><text x="53.5184%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.02%)</title><rect x="53.2809%" y="197" width="0.0182%" height="15" fill="rgb(232,15,44)" fg:x="64261" fg:w="22"/><text x="53.5309%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.02%)</title><rect x="53.2817%" y="181" width="0.0174%" height="15" fill="rgb(212,3,48)" fg:x="64262" fg:w="21"/><text x="53.5317%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.02%)</title><rect x="53.2991%" y="213" width="0.0199%" height="15" fill="rgb(218,128,7)" fg:x="64283" fg:w="24"/><text x="53.5491%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.02%)</title><rect x="53.3190%" y="213" width="0.0199%" height="15" fill="rgb(226,216,39)" fg:x="64307" fg:w="24"/><text x="53.5690%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.02%)</title><rect x="53.3223%" y="197" width="0.0166%" height="15" fill="rgb(243,47,51)" fg:x="64311" fg:w="20"/><text x="53.5723%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="53.3497%" y="213" width="0.0158%" height="15" fill="rgb(241,183,40)" fg:x="64344" fg:w="19"/><text x="53.5997%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="53.3671%" y="181" width="0.0133%" height="15" fill="rgb(231,217,32)" fg:x="64365" fg:w="16"/><text x="53.6171%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="53.3696%" y="165" width="0.0108%" height="15" fill="rgb(229,61,38)" fg:x="64368" fg:w="13"/><text x="53.6196%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.01%)</title><rect x="53.3696%" y="149" width="0.0108%" height="15" fill="rgb(225,210,5)" fg:x="64368" fg:w="13"/><text x="53.6196%" y="159.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.02%)</title><rect x="53.3654%" y="213" width="0.0166%" height="15" fill="rgb(231,79,45)" fg:x="64363" fg:w="20"/><text x="53.6154%" y="223.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (18 samples, 0.01%)</title><rect x="53.3671%" y="197" width="0.0149%" height="15" fill="rgb(224,100,7)" fg:x="64365" fg:w="18"/><text x="53.6171%" y="207.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,906 samples, 2.41%)</title><rect x="50.9734%" y="261" width="2.4095%" height="15" fill="rgb(241,198,18)" fg:x="61478" fg:w="2906"/><text x="51.2234%" y="271.50">ti..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,604 samples, 2.16%)</title><rect x="51.2238%" y="245" width="2.1591%" height="15" fill="rgb(252,97,53)" fg:x="61780" fg:w="2604"/><text x="51.4738%" y="255.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (444 samples, 0.37%)</title><rect x="53.0147%" y="229" width="0.3681%" height="15" fill="rgb(220,88,7)" fg:x="63940" fg:w="444"/><text x="53.2647%" y="239.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,923 samples, 2.42%)</title><rect x="50.9601%" y="293" width="2.4236%" height="15" fill="rgb(213,176,14)" fg:x="61462" fg:w="2923"/><text x="51.2101%" y="303.50">ti..</text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (2,923 samples, 2.42%)</title><rect x="50.9601%" y="277" width="2.4236%" height="15" fill="rgb(246,73,7)" fg:x="61462" fg:w="2923"/><text x="51.2101%" y="287.50">ti..</text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (2,928 samples, 2.43%)</title><rect x="50.9601%" y="309" width="2.4277%" height="15" fill="rgb(245,64,36)" fg:x="61462" fg:w="2928"/><text x="51.2101%" y="319.50">ti..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (17 samples, 0.01%)</title><rect x="53.3878%" y="309" width="0.0141%" height="15" fill="rgb(245,80,10)" fg:x="64390" fg:w="17"/><text x="53.6378%" y="319.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (6,458 samples, 5.35%)</title><rect x="48.0507%" y="373" width="5.3545%" height="15" fill="rgb(232,107,50)" fg:x="57953" fg:w="6458"/><text x="48.3007%" y="383.50">tio4905..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6,458 samples, 5.35%)</title><rect x="48.0507%" y="357" width="5.3545%" height="15" fill="rgb(253,3,0)" fg:x="57953" fg:w="6458"/><text x="48.3007%" y="367.50">tio4905..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,458 samples, 5.35%)</title><rect x="48.0507%" y="341" width="5.3545%" height="15" fill="rgb(212,99,53)" fg:x="57953" fg:w="6458"/><text x="48.3007%" y="351.50">tio4905..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (6,456 samples, 5.35%)</title><rect x="48.0524%" y="325" width="5.3529%" height="15" fill="rgb(249,111,54)" fg:x="57955" fg:w="6456"/><text x="48.3024%" y="335.50">tio4905..</text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.01%)</title><rect x="53.4202%" y="277" width="0.0124%" height="15" fill="rgb(249,55,30)" fg:x="64429" fg:w="15"/><text x="53.6702%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.02%)</title><rect x="53.4152%" y="293" width="0.0191%" height="15" fill="rgb(237,47,42)" fg:x="64423" fg:w="23"/><text x="53.6652%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="53.4376%" y="293" width="0.0108%" height="15" fill="rgb(211,20,18)" fg:x="64450" fg:w="13"/><text x="53.6876%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.02%)</title><rect x="53.4625%" y="261" width="0.0174%" height="15" fill="rgb(231,203,46)" fg:x="64480" fg:w="21"/><text x="53.7125%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.01%)</title><rect x="53.4649%" y="245" width="0.0149%" height="15" fill="rgb(237,142,3)" fg:x="64483" fg:w="18"/><text x="53.7149%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.02%)</title><rect x="53.5321%" y="245" width="0.0191%" height="15" fill="rgb(241,107,1)" fg:x="64564" fg:w="23"/><text x="53.7821%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="53.5354%" y="229" width="0.0158%" height="15" fill="rgb(229,83,13)" fg:x="64568" fg:w="19"/><text x="53.7854%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.02%)</title><rect x="53.5354%" y="213" width="0.0158%" height="15" fill="rgb(241,91,40)" fg:x="64568" fg:w="19"/><text x="53.7854%" y="223.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (125 samples, 0.10%)</title><rect x="53.4575%" y="293" width="0.1036%" height="15" fill="rgb(225,3,45)" fg:x="64474" fg:w="125"/><text x="53.7075%" y="303.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (121 samples, 0.10%)</title><rect x="53.4608%" y="277" width="0.1003%" height="15" fill="rgb(244,223,14)" fg:x="64478" fg:w="121"/><text x="53.7108%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (81 samples, 0.07%)</title><rect x="53.4940%" y="261" width="0.0672%" height="15" fill="rgb(224,124,37)" fg:x="64518" fg:w="81"/><text x="53.7440%" y="271.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (18 samples, 0.01%)</title><rect x="53.5611%" y="293" width="0.0149%" height="15" fill="rgb(251,171,30)" fg:x="64599" fg:w="18"/><text x="53.8111%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (35 samples, 0.03%)</title><rect x="53.6440%" y="245" width="0.0290%" height="15" fill="rgb(236,46,54)" fg:x="64699" fg:w="35"/><text x="53.8940%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.03%)</title><rect x="53.6391%" y="277" width="0.0348%" height="15" fill="rgb(245,213,5)" fg:x="64693" fg:w="42"/><text x="53.8891%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (38 samples, 0.03%)</title><rect x="53.6424%" y="261" width="0.0315%" height="15" fill="rgb(230,144,27)" fg:x="64697" fg:w="38"/><text x="53.8924%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (145 samples, 0.12%)</title><rect x="53.5760%" y="293" width="0.1202%" height="15" fill="rgb(220,86,6)" fg:x="64617" fg:w="145"/><text x="53.8260%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (36 samples, 0.03%)</title><rect x="53.6963%" y="293" width="0.0298%" height="15" fill="rgb(240,20,13)" fg:x="64762" fg:w="36"/><text x="53.9463%" y="303.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (30 samples, 0.02%)</title><rect x="53.7012%" y="277" width="0.0249%" height="15" fill="rgb(217,89,34)" fg:x="64768" fg:w="30"/><text x="53.9512%" y="287.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.03%)</title><rect x="53.7261%" y="277" width="0.0282%" height="15" fill="rgb(229,13,5)" fg:x="64798" fg:w="34"/><text x="53.9761%" y="287.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.03%)</title><rect x="53.7261%" y="261" width="0.0282%" height="15" fill="rgb(244,67,35)" fg:x="64798" fg:w="34"/><text x="53.9761%" y="271.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (34 samples, 0.03%)</title><rect x="53.7261%" y="245" width="0.0282%" height="15" fill="rgb(221,40,2)" fg:x="64798" fg:w="34"/><text x="53.9761%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (24 samples, 0.02%)</title><rect x="53.7344%" y="229" width="0.0199%" height="15" fill="rgb(237,157,21)" fg:x="64808" fg:w="24"/><text x="53.9844%" y="239.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (36 samples, 0.03%)</title><rect x="53.7261%" y="293" width="0.0298%" height="15" fill="rgb(222,94,11)" fg:x="64798" fg:w="36"/><text x="53.9761%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (13 samples, 0.01%)</title><rect x="53.7560%" y="293" width="0.0108%" height="15" fill="rgb(249,113,6)" fg:x="64834" fg:w="13"/><text x="54.0060%" y="303.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (38,166 samples, 31.64%)</title><rect x="22.1246%" y="405" width="31.6447%" height="15" fill="rgb(238,137,36)" fg:x="26684" fg:w="38166"/><text x="22.3746%" y="415.50">tio4905`rayon::iter::plumbing::bridge_producer_cons..</text></g><g><title>tio4905`rayon_core::registry::in_worker (6,897 samples, 5.72%)</title><rect x="48.0507%" y="389" width="5.7185%" height="15" fill="rgb(210,102,26)" fg:x="57953" fg:w="6897"/><text x="48.3007%" y="399.50">tio4905..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (439 samples, 0.36%)</title><rect x="53.4052%" y="373" width="0.3640%" height="15" fill="rgb(218,30,30)" fg:x="64411" fg:w="439"/><text x="53.6552%" y="383.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (439 samples, 0.36%)</title><rect x="53.4052%" y="357" width="0.3640%" height="15" fill="rgb(214,67,26)" fg:x="64411" fg:w="439"/><text x="53.6552%" y="367.50"></text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (439 samples, 0.36%)</title><rect x="53.4052%" y="341" width="0.3640%" height="15" fill="rgb(251,9,53)" fg:x="64411" fg:w="439"/><text x="53.6552%" y="351.50"></text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (439 samples, 0.36%)</title><rect x="53.4052%" y="325" width="0.3640%" height="15" fill="rgb(228,204,25)" fg:x="64411" fg:w="439"/><text x="53.6552%" y="335.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (435 samples, 0.36%)</title><rect x="53.4086%" y="309" width="0.3607%" height="15" fill="rgb(207,153,8)" fg:x="64415" fg:w="435"/><text x="53.6586%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.02%)</title><rect x="53.8422%" y="277" width="0.0224%" height="15" fill="rgb(242,9,16)" fg:x="64938" fg:w="27"/><text x="54.0922%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.02%)</title><rect x="53.8463%" y="261" width="0.0182%" height="15" fill="rgb(217,211,10)" fg:x="64943" fg:w="22"/><text x="54.0963%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.02%)</title><rect x="53.8480%" y="245" width="0.0166%" height="15" fill="rgb(219,228,52)" fg:x="64945" fg:w="20"/><text x="54.0980%" y="255.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (97 samples, 0.08%)</title><rect x="53.8024%" y="325" width="0.0804%" height="15" fill="rgb(231,92,29)" fg:x="64890" fg:w="97"/><text x="54.0524%" y="335.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (95 samples, 0.08%)</title><rect x="53.8041%" y="309" width="0.0788%" height="15" fill="rgb(232,8,23)" fg:x="64892" fg:w="95"/><text x="54.0541%" y="319.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (79 samples, 0.07%)</title><rect x="53.8173%" y="293" width="0.0655%" height="15" fill="rgb(216,211,34)" fg:x="64908" fg:w="79"/><text x="54.0673%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="53.9284%" y="309" width="0.0124%" height="15" fill="rgb(236,151,0)" fg:x="65042" fg:w="15"/><text x="54.1784%" y="319.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (77 samples, 0.06%)</title><rect x="53.8953%" y="325" width="0.0638%" height="15" fill="rgb(209,168,3)" fg:x="65002" fg:w="77"/><text x="54.1453%" y="335.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (20 samples, 0.02%)</title><rect x="53.9591%" y="325" width="0.0166%" height="15" fill="rgb(208,129,28)" fg:x="65079" fg:w="20"/><text x="54.2091%" y="335.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (18 samples, 0.01%)</title><rect x="53.9608%" y="309" width="0.0149%" height="15" fill="rgb(229,78,22)" fg:x="65081" fg:w="18"/><text x="54.2108%" y="319.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (23 samples, 0.02%)</title><rect x="53.9757%" y="325" width="0.0191%" height="15" fill="rgb(228,187,13)" fg:x="65099" fg:w="23"/><text x="54.2257%" y="335.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.02%)</title><rect x="53.9757%" y="309" width="0.0191%" height="15" fill="rgb(240,119,24)" fg:x="65099" fg:w="23"/><text x="54.2257%" y="319.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="53.9757%" y="293" width="0.0191%" height="15" fill="rgb(209,194,42)" fg:x="65099" fg:w="23"/><text x="54.2257%" y="303.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (23 samples, 0.02%)</title><rect x="53.9757%" y="277" width="0.0191%" height="15" fill="rgb(247,200,46)" fg:x="65099" fg:w="23"/><text x="54.2257%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (19 samples, 0.02%)</title><rect x="53.9790%" y="261" width="0.0158%" height="15" fill="rgb(218,76,16)" fg:x="65103" fg:w="19"/><text x="54.2290%" y="271.50"></text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (284 samples, 0.24%)</title><rect x="53.7692%" y="373" width="0.2355%" height="15" fill="rgb(225,21,48)" fg:x="64850" fg:w="284"/><text x="54.0192%" y="383.50"></text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (284 samples, 0.24%)</title><rect x="53.7692%" y="357" width="0.2355%" height="15" fill="rgb(239,223,50)" fg:x="64850" fg:w="284"/><text x="54.0192%" y="367.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (282 samples, 0.23%)</title><rect x="53.7709%" y="341" width="0.2338%" height="15" fill="rgb(244,45,21)" fg:x="64852" fg:w="282"/><text x="54.0209%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.02%)</title><rect x="54.0271%" y="293" width="0.0158%" height="15" fill="rgb(232,33,43)" fg:x="65161" fg:w="19"/><text x="54.2771%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (25 samples, 0.02%)</title><rect x="54.0428%" y="293" width="0.0207%" height="15" fill="rgb(209,8,3)" fg:x="65180" fg:w="25"/><text x="54.2928%" y="303.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (39 samples, 0.03%)</title><rect x="54.0677%" y="293" width="0.0323%" height="15" fill="rgb(214,25,53)" fg:x="65210" fg:w="39"/><text x="54.3177%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (32 samples, 0.03%)</title><rect x="54.0735%" y="277" width="0.0265%" height="15" fill="rgb(254,186,54)" fg:x="65217" fg:w="32"/><text x="54.3235%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="54.1158%" y="261" width="0.0166%" height="15" fill="rgb(208,174,49)" fg:x="65268" fg:w="20"/><text x="54.3658%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.01%)</title><rect x="54.1714%" y="229" width="0.0124%" height="15" fill="rgb(233,191,51)" fg:x="65335" fg:w="15"/><text x="54.4214%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (75 samples, 0.06%)</title><rect x="54.1324%" y="261" width="0.0622%" height="15" fill="rgb(222,134,10)" fg:x="65288" fg:w="75"/><text x="54.3824%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.05%)</title><rect x="54.1457%" y="245" width="0.0489%" height="15" fill="rgb(230,226,20)" fg:x="65304" fg:w="59"/><text x="54.3957%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.01%)</title><rect x="54.1838%" y="229" width="0.0108%" height="15" fill="rgb(251,111,25)" fg:x="65350" fg:w="13"/><text x="54.4338%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="54.1987%" y="261" width="0.0108%" height="15" fill="rgb(224,40,46)" fg:x="65368" fg:w="13"/><text x="54.4487%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.02%)</title><rect x="54.8148%" y="229" width="0.0199%" height="15" fill="rgb(236,108,47)" fg:x="66111" fg:w="24"/><text x="55.0648%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.02%)</title><rect x="54.8189%" y="213" width="0.0158%" height="15" fill="rgb(234,93,0)" fg:x="66116" fg:w="19"/><text x="55.0689%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (97 samples, 0.08%)</title><rect x="54.8347%" y="229" width="0.0804%" height="15" fill="rgb(224,213,32)" fg:x="66135" fg:w="97"/><text x="55.0847%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (90 samples, 0.07%)</title><rect x="54.8405%" y="213" width="0.0746%" height="15" fill="rgb(251,11,48)" fg:x="66142" fg:w="90"/><text x="55.0905%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.02%)</title><rect x="54.8911%" y="197" width="0.0240%" height="15" fill="rgb(236,173,5)" fg:x="66203" fg:w="29"/><text x="55.1411%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (140 samples, 0.12%)</title><rect x="54.7998%" y="245" width="0.1161%" height="15" fill="rgb(230,95,12)" fg:x="66093" fg:w="140"/><text x="55.0498%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.03%)</title><rect x="54.9217%" y="245" width="0.0274%" height="15" fill="rgb(232,209,1)" fg:x="66240" fg:w="33"/><text x="55.1717%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.01%)</title><rect x="54.9964%" y="213" width="0.0124%" height="15" fill="rgb(232,6,1)" fg:x="66330" fg:w="15"/><text x="55.2464%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (79 samples, 0.07%)</title><rect x="54.9491%" y="245" width="0.0655%" height="15" fill="rgb(210,224,50)" fg:x="66273" fg:w="79"/><text x="55.1991%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.04%)</title><rect x="54.9706%" y="229" width="0.0439%" height="15" fill="rgb(228,127,35)" fg:x="66299" fg:w="53"/><text x="55.2206%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.02%)</title><rect x="55.0270%" y="245" width="0.0191%" height="15" fill="rgb(245,102,45)" fg:x="66367" fg:w="23"/><text x="55.2770%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="55.1605%" y="229" width="0.0124%" height="15" fill="rgb(214,1,49)" fg:x="66528" fg:w="15"/><text x="55.4105%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.01%)</title><rect x="55.1613%" y="213" width="0.0116%" height="15" fill="rgb(226,163,40)" fg:x="66529" fg:w="14"/><text x="55.4113%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.01%)</title><rect x="55.1613%" y="197" width="0.0116%" height="15" fill="rgb(239,212,28)" fg:x="66529" fg:w="14"/><text x="55.4113%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (13 samples, 0.01%)</title><rect x="55.1796%" y="229" width="0.0108%" height="15" fill="rgb(220,20,13)" fg:x="66551" fg:w="13"/><text x="55.4296%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (1,344 samples, 1.11%)</title><rect x="54.1001%" y="293" width="1.1144%" height="15" fill="rgb(210,164,35)" fg:x="65249" fg:w="1344"/><text x="54.3501%" y="303.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,339 samples, 1.11%)</title><rect x="54.1042%" y="277" width="1.1102%" height="15" fill="rgb(248,109,41)" fg:x="65254" fg:w="1339"/><text x="54.3542%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,198 samples, 0.99%)</title><rect x="54.2211%" y="261" width="0.9933%" height="15" fill="rgb(238,23,50)" fg:x="65395" fg:w="1198"/><text x="54.4711%" y="271.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (201 samples, 0.17%)</title><rect x="55.0478%" y="245" width="0.1667%" height="15" fill="rgb(211,48,49)" fg:x="66392" fg:w="201"/><text x="55.2978%" y="255.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.01%)</title><rect x="55.2036%" y="229" width="0.0108%" height="15" fill="rgb(223,36,21)" fg:x="66580" fg:w="13"/><text x="55.4536%" y="239.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (55 samples, 0.05%)</title><rect x="55.2161%" y="293" width="0.0456%" height="15" fill="rgb(207,123,46)" fg:x="66595" fg:w="55"/><text x="55.4661%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="55.4598%" y="261" width="0.0124%" height="15" fill="rgb(240,218,32)" fg:x="66889" fg:w="15"/><text x="55.7098%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.04%)</title><rect x="55.4573%" y="277" width="0.0423%" height="15" fill="rgb(252,5,43)" fg:x="66886" fg:w="51"/><text x="55.7073%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.03%)</title><rect x="55.4723%" y="261" width="0.0274%" height="15" fill="rgb(252,84,19)" fg:x="66904" fg:w="33"/><text x="55.7223%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.02%)</title><rect x="55.4748%" y="245" width="0.0249%" height="15" fill="rgb(243,152,39)" fg:x="66907" fg:w="30"/><text x="55.7248%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.02%)</title><rect x="55.5046%" y="277" width="0.0199%" height="15" fill="rgb(234,160,15)" fg:x="66943" fg:w="24"/><text x="55.7546%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.01%)</title><rect x="55.5112%" y="261" width="0.0133%" height="15" fill="rgb(237,34,20)" fg:x="66951" fg:w="16"/><text x="55.7612%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (409 samples, 0.34%)</title><rect x="55.2617%" y="293" width="0.3391%" height="15" fill="rgb(229,97,13)" fg:x="66650" fg:w="409"/><text x="55.5117%" y="303.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (80 samples, 0.07%)</title><rect x="55.5345%" y="277" width="0.0663%" height="15" fill="rgb(234,71,50)" fg:x="66979" fg:w="80"/><text x="55.7845%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="55.6464%" y="261" width="0.0124%" height="15" fill="rgb(253,155,4)" fg:x="67114" fg:w="15"/><text x="55.8964%" y="271.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (97 samples, 0.08%)</title><rect x="55.6008%" y="293" width="0.0804%" height="15" fill="rgb(222,185,37)" fg:x="67059" fg:w="97"/><text x="55.8508%" y="303.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (85 samples, 0.07%)</title><rect x="55.6107%" y="277" width="0.0705%" height="15" fill="rgb(251,177,13)" fg:x="67071" fg:w="85"/><text x="55.8607%" y="287.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (19 samples, 0.02%)</title><rect x="55.6655%" y="261" width="0.0158%" height="15" fill="rgb(250,179,40)" fg:x="67137" fg:w="19"/><text x="55.9155%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.03%)</title><rect x="55.6978%" y="229" width="0.0274%" height="15" fill="rgb(242,44,2)" fg:x="67176" fg:w="33"/><text x="55.9478%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.05%)</title><rect x="55.7252%" y="229" width="0.0497%" height="15" fill="rgb(216,177,13)" fg:x="67209" fg:w="60"/><text x="55.9752%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.04%)</title><rect x="55.7393%" y="213" width="0.0357%" height="15" fill="rgb(216,106,43)" fg:x="67226" fg:w="43"/><text x="55.9893%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.01%)</title><rect x="55.7633%" y="197" width="0.0116%" height="15" fill="rgb(216,183,2)" fg:x="67255" fg:w="14"/><text x="56.0133%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (18 samples, 0.01%)</title><rect x="55.7873%" y="229" width="0.0149%" height="15" fill="rgb(249,75,3)" fg:x="67284" fg:w="18"/><text x="56.0373%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.03%)</title><rect x="56.2832%" y="197" width="0.0274%" height="15" fill="rgb(219,67,39)" fg:x="67882" fg:w="33"/><text x="56.5332%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.02%)</title><rect x="56.2890%" y="181" width="0.0216%" height="15" fill="rgb(253,228,2)" fg:x="67889" fg:w="26"/><text x="56.5390%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.01%)</title><rect x="56.2981%" y="165" width="0.0124%" height="15" fill="rgb(235,138,27)" fg:x="67900" fg:w="15"/><text x="56.5481%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (15 samples, 0.01%)</title><rect x="56.3528%" y="165" width="0.0124%" height="15" fill="rgb(236,97,51)" fg:x="67966" fg:w="15"/><text x="56.6028%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (171 samples, 0.14%)</title><rect x="56.2558%" y="213" width="0.1418%" height="15" fill="rgb(240,80,30)" fg:x="67849" fg:w="171"/><text x="56.5058%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (105 samples, 0.09%)</title><rect x="56.3105%" y="197" width="0.0871%" height="15" fill="rgb(230,178,19)" fg:x="67915" fg:w="105"/><text x="56.5605%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (99 samples, 0.08%)</title><rect x="56.3155%" y="181" width="0.0821%" height="15" fill="rgb(210,190,27)" fg:x="67921" fg:w="99"/><text x="56.5655%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (39 samples, 0.03%)</title><rect x="56.3652%" y="165" width="0.0323%" height="15" fill="rgb(222,107,31)" fg:x="67981" fg:w="39"/><text x="56.6152%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.01%)</title><rect x="56.3851%" y="149" width="0.0124%" height="15" fill="rgb(216,127,34)" fg:x="68005" fg:w="15"/><text x="56.6351%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.03%)</title><rect x="56.4009%" y="213" width="0.0282%" height="15" fill="rgb(234,116,52)" fg:x="68024" fg:w="34"/><text x="56.6509%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="56.4158%" y="197" width="0.0133%" height="15" fill="rgb(222,124,15)" fg:x="68042" fg:w="16"/><text x="56.6658%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.01%)</title><rect x="56.4167%" y="181" width="0.0124%" height="15" fill="rgb(231,179,28)" fg:x="68043" fg:w="15"/><text x="56.6667%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (59 samples, 0.05%)</title><rect x="56.4291%" y="213" width="0.0489%" height="15" fill="rgb(226,93,45)" fg:x="68058" fg:w="59"/><text x="56.6791%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (35 samples, 0.03%)</title><rect x="56.4490%" y="197" width="0.0290%" height="15" fill="rgb(215,8,51)" fg:x="68082" fg:w="35"/><text x="56.6990%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.02%)</title><rect x="56.4913%" y="213" width="0.0174%" height="15" fill="rgb(223,106,5)" fg:x="68133" fg:w="21"/><text x="56.7413%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="56.5667%" y="197" width="0.0124%" height="15" fill="rgb(250,191,5)" fg:x="68224" fg:w="15"/><text x="56.8167%" y="207.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,127 samples, 0.93%)</title><rect x="55.6812%" y="277" width="0.9344%" height="15" fill="rgb(242,132,44)" fg:x="67156" fg:w="1127"/><text x="55.9312%" y="287.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (1,127 samples, 0.93%)</title><rect x="55.6812%" y="261" width="0.9344%" height="15" fill="rgb(251,152,29)" fg:x="67156" fg:w="1127"/><text x="55.9312%" y="271.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,120 samples, 0.93%)</title><rect x="55.6870%" y="245" width="0.9286%" height="15" fill="rgb(218,179,5)" fg:x="67163" fg:w="1120"/><text x="55.9370%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (961 samples, 0.80%)</title><rect x="55.8189%" y="229" width="0.7968%" height="15" fill="rgb(227,67,19)" fg:x="67322" fg:w="961"/><text x="56.0689%" y="239.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (127 samples, 0.11%)</title><rect x="56.5103%" y="213" width="0.1053%" height="15" fill="rgb(233,119,31)" fg:x="68156" fg:w="127"/><text x="56.7603%" y="223.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.01%)</title><rect x="56.6049%" y="197" width="0.0108%" height="15" fill="rgb(241,120,22)" fg:x="68270" fg:w="13"/><text x="56.8549%" y="207.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (1,132 samples, 0.94%)</title><rect x="55.6812%" y="293" width="0.9386%" height="15" fill="rgb(224,102,30)" fg:x="67156" fg:w="1132"/><text x="55.9312%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (24 samples, 0.02%)</title><rect x="56.6198%" y="293" width="0.0199%" height="15" fill="rgb(210,164,37)" fg:x="68288" fg:w="24"/><text x="56.8698%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (20 samples, 0.02%)</title><rect x="56.6231%" y="277" width="0.0166%" height="15" fill="rgb(226,191,16)" fg:x="68292" fg:w="20"/><text x="56.8731%" y="287.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (3,184 samples, 2.64%)</title><rect x="54.0047%" y="357" width="2.6400%" height="15" fill="rgb(214,40,45)" fg:x="65134" fg:w="3184"/><text x="54.2547%" y="367.50">ti..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3,184 samples, 2.64%)</title><rect x="54.0047%" y="341" width="2.6400%" height="15" fill="rgb(244,29,26)" fg:x="65134" fg:w="3184"/><text x="54.2547%" y="351.50">ti..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3,184 samples, 2.64%)</title><rect x="54.0047%" y="325" width="2.6400%" height="15" fill="rgb(216,16,5)" fg:x="65134" fg:w="3184"/><text x="54.2547%" y="335.50">ti..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (3,180 samples, 2.64%)</title><rect x="54.0080%" y="309" width="2.6366%" height="15" fill="rgb(249,76,35)" fg:x="65138" fg:w="3180"/><text x="54.2580%" y="319.50">ti..</text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.01%)</title><rect x="56.6571%" y="245" width="0.0124%" height="15" fill="rgb(207,11,44)" fg:x="68333" fg:w="15"/><text x="56.9071%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.02%)</title><rect x="56.6695%" y="245" width="0.0232%" height="15" fill="rgb(228,190,49)" fg:x="68348" fg:w="28"/><text x="56.9195%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.02%)</title><rect x="56.6762%" y="229" width="0.0166%" height="15" fill="rgb(214,173,12)" fg:x="68356" fg:w="20"/><text x="56.9262%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (20 samples, 0.02%)</title><rect x="56.6994%" y="245" width="0.0166%" height="15" fill="rgb(218,26,35)" fg:x="68384" fg:w="20"/><text x="56.9494%" y="255.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (15 samples, 0.01%)</title><rect x="56.7035%" y="229" width="0.0124%" height="15" fill="rgb(220,200,19)" fg:x="68389" fg:w="15"/><text x="56.9535%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (22 samples, 0.02%)</title><rect x="56.7715%" y="197" width="0.0182%" height="15" fill="rgb(239,95,49)" fg:x="68471" fg:w="22"/><text x="57.0215%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.01%)</title><rect x="56.7898%" y="197" width="0.0108%" height="15" fill="rgb(235,85,53)" fg:x="68493" fg:w="13"/><text x="57.0398%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (83 samples, 0.07%)</title><rect x="56.7533%" y="213" width="0.0688%" height="15" fill="rgb(233,133,31)" fg:x="68449" fg:w="83"/><text x="57.0033%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (26 samples, 0.02%)</title><rect x="56.8005%" y="197" width="0.0216%" height="15" fill="rgb(218,25,20)" fg:x="68506" fg:w="26"/><text x="57.0505%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.02%)</title><rect x="56.8055%" y="181" width="0.0166%" height="15" fill="rgb(252,210,38)" fg:x="68512" fg:w="20"/><text x="57.0555%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (14 samples, 0.01%)</title><rect x="56.8569%" y="197" width="0.0116%" height="15" fill="rgb(242,134,21)" fg:x="68574" fg:w="14"/><text x="57.1069%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (40 samples, 0.03%)</title><rect x="56.9266%" y="181" width="0.0332%" height="15" fill="rgb(213,28,48)" fg:x="68658" fg:w="40"/><text x="57.1766%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (197 samples, 0.16%)</title><rect x="56.8221%" y="213" width="0.1633%" height="15" fill="rgb(250,196,2)" fg:x="68532" fg:w="197"/><text x="57.0721%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (138 samples, 0.11%)</title><rect x="56.8710%" y="197" width="0.1144%" height="15" fill="rgb(227,5,17)" fg:x="68591" fg:w="138"/><text x="57.1210%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (31 samples, 0.03%)</title><rect x="56.9597%" y="181" width="0.0257%" height="15" fill="rgb(221,226,24)" fg:x="68698" fg:w="31"/><text x="57.2097%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (13 samples, 0.01%)</title><rect x="56.9904%" y="213" width="0.0108%" height="15" fill="rgb(211,5,48)" fg:x="68735" fg:w="13"/><text x="57.2404%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.02%)</title><rect x="57.0012%" y="213" width="0.0182%" height="15" fill="rgb(219,150,6)" fg:x="68748" fg:w="22"/><text x="57.2512%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.05%)</title><rect x="57.9373%" y="181" width="0.0456%" height="15" fill="rgb(251,46,16)" fg:x="69877" fg:w="55"/><text x="58.1873%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (41 samples, 0.03%)</title><rect x="57.9489%" y="165" width="0.0340%" height="15" fill="rgb(220,204,40)" fg:x="69891" fg:w="41"/><text x="58.1989%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.02%)</title><rect x="57.9663%" y="149" width="0.0166%" height="15" fill="rgb(211,85,2)" fg:x="69912" fg:w="20"/><text x="58.2163%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (32 samples, 0.03%)</title><rect x="58.1015%" y="149" width="0.0265%" height="15" fill="rgb(229,17,7)" fg:x="70075" fg:w="32"/><text x="58.3515%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (279 samples, 0.23%)</title><rect x="57.9829%" y="181" width="0.2313%" height="15" fill="rgb(239,72,28)" fg:x="69932" fg:w="279"/><text x="58.2329%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (271 samples, 0.22%)</title><rect x="57.9895%" y="165" width="0.2247%" height="15" fill="rgb(230,47,54)" fg:x="69940" fg:w="271"/><text x="58.2395%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (104 samples, 0.09%)</title><rect x="58.1280%" y="149" width="0.0862%" height="15" fill="rgb(214,50,8)" fg:x="70107" fg:w="104"/><text x="58.3780%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.01%)</title><rect x="58.2034%" y="133" width="0.0108%" height="15" fill="rgb(216,198,43)" fg:x="70198" fg:w="13"/><text x="58.4534%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (384 samples, 0.32%)</title><rect x="57.8975%" y="197" width="0.3184%" height="15" fill="rgb(234,20,35)" fg:x="69829" fg:w="384"/><text x="58.1475%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.02%)</title><rect x="58.2490%" y="181" width="0.0224%" height="15" fill="rgb(254,45,19)" fg:x="70253" fg:w="27"/><text x="58.4990%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.02%)</title><rect x="58.2524%" y="165" width="0.0191%" height="15" fill="rgb(219,14,44)" fg:x="70257" fg:w="23"/><text x="58.5024%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (56 samples, 0.05%)</title><rect x="58.2267%" y="197" width="0.0464%" height="15" fill="rgb(217,220,26)" fg:x="70226" fg:w="56"/><text x="58.4767%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.02%)</title><rect x="58.3858%" y="165" width="0.0216%" height="15" fill="rgb(213,158,28)" fg:x="70418" fg:w="26"/><text x="58.6358%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (178 samples, 0.15%)</title><rect x="58.2731%" y="197" width="0.1476%" height="15" fill="rgb(252,51,52)" fg:x="70282" fg:w="178"/><text x="58.5231%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (113 samples, 0.09%)</title><rect x="58.3270%" y="181" width="0.0937%" height="15" fill="rgb(246,89,16)" fg:x="70347" fg:w="113"/><text x="58.5770%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.01%)</title><rect x="58.4074%" y="165" width="0.0133%" height="15" fill="rgb(216,158,49)" fg:x="70444" fg:w="16"/><text x="58.6574%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.03%)</title><rect x="58.4431%" y="197" width="0.0307%" height="15" fill="rgb(236,107,19)" fg:x="70487" fg:w="37"/><text x="58.6931%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.03%)</title><rect x="58.6586%" y="181" width="0.0298%" height="15" fill="rgb(228,185,30)" fg:x="70747" fg:w="36"/><text x="58.9086%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.02%)</title><rect x="58.6653%" y="165" width="0.0232%" height="15" fill="rgb(246,134,8)" fg:x="70755" fg:w="28"/><text x="58.9153%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.02%)</title><rect x="58.6678%" y="149" width="0.0207%" height="15" fill="rgb(214,143,50)" fg:x="70758" fg:w="25"/><text x="58.9178%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (32 samples, 0.03%)</title><rect x="58.6968%" y="165" width="0.0265%" height="15" fill="rgb(228,75,8)" fg:x="70793" fg:w="32"/><text x="58.9468%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.04%)</title><rect x="58.6885%" y="181" width="0.0357%" height="15" fill="rgb(207,175,4)" fg:x="70783" fg:w="43"/><text x="58.9385%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (38 samples, 0.03%)</title><rect x="58.7324%" y="181" width="0.0315%" height="15" fill="rgb(205,108,24)" fg:x="70836" fg:w="38"/><text x="58.9824%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.02%)</title><rect x="58.7656%" y="181" width="0.0174%" height="15" fill="rgb(244,120,49)" fg:x="70876" fg:w="21"/><text x="59.0156%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.03%)</title><rect x="58.7946%" y="149" width="0.0290%" height="15" fill="rgb(223,47,38)" fg:x="70911" fg:w="35"/><text x="59.0446%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.02%)</title><rect x="58.7988%" y="133" width="0.0249%" height="15" fill="rgb(229,179,11)" fg:x="70916" fg:w="30"/><text x="59.0488%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.02%)</title><rect x="58.7996%" y="117" width="0.0240%" height="15" fill="rgb(231,122,1)" fg:x="70917" fg:w="29"/><text x="59.0496%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.01%)</title><rect x="58.8128%" y="101" width="0.0108%" height="15" fill="rgb(245,119,9)" fg:x="70933" fg:w="13"/><text x="59.0628%" y="111.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (51 samples, 0.04%)</title><rect x="58.7830%" y="181" width="0.0423%" height="15" fill="rgb(241,163,25)" fg:x="70897" fg:w="51"/><text x="59.0330%" y="191.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (42 samples, 0.03%)</title><rect x="58.7905%" y="165" width="0.0348%" height="15" fill="rgb(217,214,3)" fg:x="70906" fg:w="42"/><text x="59.0405%" y="175.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (2,545 samples, 2.11%)</title><rect x="56.7160%" y="245" width="2.1101%" height="15" fill="rgb(240,86,28)" fg:x="68404" fg:w="2545"/><text x="56.9660%" y="255.50">t..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,523 samples, 2.09%)</title><rect x="56.7342%" y="229" width="2.0919%" height="15" fill="rgb(215,47,9)" fg:x="68426" fg:w="2523"/><text x="56.9842%" y="239.50">t..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,157 samples, 1.79%)</title><rect x="57.0377%" y="213" width="1.7884%" height="15" fill="rgb(252,25,45)" fg:x="68792" fg:w="2157"/><text x="57.2877%" y="223.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (422 samples, 0.35%)</title><rect x="58.4762%" y="197" width="0.3499%" height="15" fill="rgb(251,164,9)" fg:x="70527" fg:w="422"/><text x="58.7262%" y="207.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (19 samples, 0.02%)</title><rect x="58.8294%" y="245" width="0.0158%" height="15" fill="rgb(233,194,0)" fg:x="70953" fg:w="19"/><text x="59.0794%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.02%)</title><rect x="59.0608%" y="213" width="0.0191%" height="15" fill="rgb(249,111,24)" fg:x="71232" fg:w="23"/><text x="59.3108%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.01%)</title><rect x="59.0674%" y="197" width="0.0124%" height="15" fill="rgb(250,223,3)" fg:x="71240" fg:w="15"/><text x="59.3174%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.05%)</title><rect x="59.0798%" y="213" width="0.0464%" height="15" fill="rgb(236,178,37)" fg:x="71255" fg:w="56"/><text x="59.3298%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.05%)</title><rect x="59.0798%" y="197" width="0.0464%" height="15" fill="rgb(241,158,50)" fg:x="71255" fg:w="56"/><text x="59.3298%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.02%)</title><rect x="59.1022%" y="181" width="0.0240%" height="15" fill="rgb(213,121,41)" fg:x="71282" fg:w="29"/><text x="59.3522%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.07%)</title><rect x="59.0583%" y="229" width="0.0688%" height="15" fill="rgb(240,92,3)" fg:x="71229" fg:w="83"/><text x="59.3083%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (32 samples, 0.03%)</title><rect x="59.1379%" y="229" width="0.0265%" height="15" fill="rgb(205,123,3)" fg:x="71325" fg:w="32"/><text x="59.3879%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.02%)</title><rect x="59.1470%" y="213" width="0.0174%" height="15" fill="rgb(205,97,47)" fg:x="71336" fg:w="21"/><text x="59.3970%" y="223.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (498 samples, 0.41%)</title><rect x="58.8468%" y="245" width="0.4129%" height="15" fill="rgb(247,152,14)" fg:x="70974" fg:w="498"/><text x="59.0968%" y="255.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (98 samples, 0.08%)</title><rect x="59.1785%" y="229" width="0.0813%" height="15" fill="rgb(248,195,53)" fg:x="71374" fg:w="98"/><text x="59.4285%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.02%)</title><rect x="59.2647%" y="229" width="0.0182%" height="15" fill="rgb(226,201,16)" fg:x="71478" fg:w="22"/><text x="59.5147%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.01%)</title><rect x="59.2680%" y="213" width="0.0149%" height="15" fill="rgb(205,98,0)" fg:x="71482" fg:w="18"/><text x="59.5180%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.03%)</title><rect x="59.3949%" y="213" width="0.0290%" height="15" fill="rgb(214,191,48)" fg:x="71635" fg:w="35"/><text x="59.6449%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.02%)</title><rect x="59.4065%" y="197" width="0.0174%" height="15" fill="rgb(237,112,39)" fg:x="71649" fg:w="21"/><text x="59.6565%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.02%)</title><rect x="59.4065%" y="181" width="0.0174%" height="15" fill="rgb(247,203,27)" fg:x="71649" fg:w="21"/><text x="59.6565%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.02%)</title><rect x="59.4272%" y="213" width="0.0174%" height="15" fill="rgb(235,124,28)" fg:x="71674" fg:w="21"/><text x="59.6772%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.01%)</title><rect x="59.4314%" y="197" width="0.0133%" height="15" fill="rgb(208,207,46)" fg:x="71679" fg:w="16"/><text x="59.6814%" y="207.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (284 samples, 0.24%)</title><rect x="59.2598%" y="245" width="0.2355%" height="15" fill="rgb(234,176,4)" fg:x="71472" fg:w="284"/><text x="59.5098%" y="255.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (251 samples, 0.21%)</title><rect x="59.2871%" y="229" width="0.2081%" height="15" fill="rgb(230,133,28)" fg:x="71505" fg:w="251"/><text x="59.5371%" y="239.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (52 samples, 0.04%)</title><rect x="59.4521%" y="213" width="0.0431%" height="15" fill="rgb(211,137,40)" fg:x="71704" fg:w="52"/><text x="59.7021%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (39 samples, 0.03%)</title><rect x="59.5359%" y="165" width="0.0323%" height="15" fill="rgb(254,35,13)" fg:x="71805" fg:w="39"/><text x="59.7859%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (77 samples, 0.06%)</title><rect x="59.5201%" y="181" width="0.0638%" height="15" fill="rgb(225,49,51)" fg:x="71786" fg:w="77"/><text x="59.7701%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.01%)</title><rect x="59.5698%" y="165" width="0.0141%" height="15" fill="rgb(251,10,15)" fg:x="71846" fg:w="17"/><text x="59.8198%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.01%)</title><rect x="59.5732%" y="149" width="0.0108%" height="15" fill="rgb(228,207,15)" fg:x="71850" fg:w="13"/><text x="59.8232%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.01%)</title><rect x="59.6204%" y="149" width="0.0141%" height="15" fill="rgb(241,99,19)" fg:x="71907" fg:w="17"/><text x="59.8704%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (81 samples, 0.07%)</title><rect x="59.5839%" y="181" width="0.0672%" height="15" fill="rgb(207,104,49)" fg:x="71863" fg:w="81"/><text x="59.8339%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (63 samples, 0.05%)</title><rect x="59.5989%" y="165" width="0.0522%" height="15" fill="rgb(234,99,18)" fg:x="71881" fg:w="63"/><text x="59.8489%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.02%)</title><rect x="59.6345%" y="149" width="0.0166%" height="15" fill="rgb(213,191,49)" fg:x="71924" fg:w="20"/><text x="59.8845%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.02%)</title><rect x="59.6602%" y="181" width="0.0232%" height="15" fill="rgb(210,226,19)" fg:x="71955" fg:w="28"/><text x="59.9102%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (52 samples, 0.04%)</title><rect x="60.0922%" y="133" width="0.0431%" height="15" fill="rgb(229,97,18)" fg:x="72476" fg:w="52"/><text x="60.3422%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (23 samples, 0.02%)</title><rect x="60.1162%" y="117" width="0.0191%" height="15" fill="rgb(211,167,15)" fg:x="72505" fg:w="23"/><text x="60.3662%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.05%)</title><rect x="60.0814%" y="149" width="0.0547%" height="15" fill="rgb(210,169,34)" fg:x="72463" fg:w="66"/><text x="60.3314%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (17 samples, 0.01%)</title><rect x="60.1900%" y="117" width="0.0141%" height="15" fill="rgb(241,121,31)" fg:x="72594" fg:w="17"/><text x="60.4400%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (133 samples, 0.11%)</title><rect x="60.1361%" y="149" width="0.1103%" height="15" fill="rgb(232,40,11)" fg:x="72529" fg:w="133"/><text x="60.3861%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (125 samples, 0.10%)</title><rect x="60.1428%" y="133" width="0.1036%" height="15" fill="rgb(205,86,26)" fg:x="72537" fg:w="125"/><text x="60.3928%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (50 samples, 0.04%)</title><rect x="60.2050%" y="117" width="0.0415%" height="15" fill="rgb(231,126,28)" fg:x="72612" fg:w="50"/><text x="60.4550%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="60.2332%" y="101" width="0.0133%" height="15" fill="rgb(219,221,18)" fg:x="72646" fg:w="16"/><text x="60.4832%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (226 samples, 0.19%)</title><rect x="60.0599%" y="165" width="0.1874%" height="15" fill="rgb(211,40,0)" fg:x="72437" fg:w="226"/><text x="60.3099%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.01%)</title><rect x="60.2605%" y="149" width="0.0124%" height="15" fill="rgb(239,85,43)" fg:x="72679" fg:w="15"/><text x="60.5105%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.03%)</title><rect x="60.2522%" y="165" width="0.0332%" height="15" fill="rgb(231,55,21)" fg:x="72669" fg:w="40"/><text x="60.5022%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="60.3161%" y="133" width="0.0116%" height="15" fill="rgb(225,184,43)" fg:x="72746" fg:w="14"/><text x="60.5661%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (54 samples, 0.04%)</title><rect x="60.2854%" y="165" width="0.0448%" height="15" fill="rgb(251,158,41)" fg:x="72709" fg:w="54"/><text x="60.5354%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.03%)</title><rect x="60.3020%" y="149" width="0.0282%" height="15" fill="rgb(234,159,37)" fg:x="72729" fg:w="34"/><text x="60.5520%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="60.4363%" y="149" width="0.0174%" height="15" fill="rgb(216,204,22)" fg:x="72891" fg:w="21"/><text x="60.6863%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.01%)</title><rect x="60.4396%" y="133" width="0.0141%" height="15" fill="rgb(214,17,3)" fg:x="72895" fg:w="17"/><text x="60.6896%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.01%)</title><rect x="60.4404%" y="117" width="0.0133%" height="15" fill="rgb(212,111,17)" fg:x="72896" fg:w="16"/><text x="60.6904%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="60.4537%" y="149" width="0.0166%" height="15" fill="rgb(221,157,24)" fg:x="72912" fg:w="20"/><text x="60.7037%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.01%)</title><rect x="60.4562%" y="133" width="0.0141%" height="15" fill="rgb(252,16,13)" fg:x="72915" fg:w="17"/><text x="60.7062%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="60.4703%" y="149" width="0.0108%" height="15" fill="rgb(221,62,2)" fg:x="72932" fg:w="13"/><text x="60.7203%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="60.4885%" y="117" width="0.0133%" height="15" fill="rgb(247,87,22)" fg:x="72954" fg:w="16"/><text x="60.7385%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="60.4894%" y="101" width="0.0124%" height="15" fill="rgb(215,73,9)" fg:x="72955" fg:w="15"/><text x="60.7394%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.01%)</title><rect x="60.4894%" y="85" width="0.0124%" height="15" fill="rgb(207,175,33)" fg:x="72955" fg:w="15"/><text x="60.7394%" y="95.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,216 samples, 1.01%)</title><rect x="59.4952%" y="229" width="1.0082%" height="15" fill="rgb(243,129,54)" fg:x="71756" fg:w="1216"/><text x="59.7452%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (1,216 samples, 1.01%)</title><rect x="59.4952%" y="213" width="1.0082%" height="15" fill="rgb(227,119,45)" fg:x="71756" fg:w="1216"/><text x="59.7452%" y="223.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,202 samples, 1.00%)</title><rect x="59.5068%" y="197" width="0.9966%" height="15" fill="rgb(205,109,36)" fg:x="71770" fg:w="1202"/><text x="59.7568%" y="207.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (978 samples, 0.81%)</title><rect x="59.6926%" y="181" width="0.8109%" height="15" fill="rgb(205,6,39)" fg:x="71994" fg:w="978"/><text x="59.9426%" y="191.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (176 samples, 0.15%)</title><rect x="60.3575%" y="165" width="0.1459%" height="15" fill="rgb(221,32,16)" fg:x="72796" fg:w="176"/><text x="60.6075%" y="175.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.02%)</title><rect x="60.4852%" y="149" width="0.0182%" height="15" fill="rgb(228,144,50)" fg:x="72950" fg:w="22"/><text x="60.7352%" y="159.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (19 samples, 0.02%)</title><rect x="60.4877%" y="133" width="0.0158%" height="15" fill="rgb(229,201,53)" fg:x="72953" fg:w="19"/><text x="60.7377%" y="143.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (1,222 samples, 1.01%)</title><rect x="59.4952%" y="245" width="1.0132%" height="15" fill="rgb(249,153,27)" fg:x="71756" fg:w="1222"/><text x="59.7452%" y="255.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (15 samples, 0.01%)</title><rect x="60.5084%" y="245" width="0.0124%" height="15" fill="rgb(227,106,25)" fg:x="72978" fg:w="15"/><text x="60.7584%" y="255.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (4,678 samples, 3.88%)</title><rect x="56.6447%" y="309" width="3.8787%" height="15" fill="rgb(230,65,29)" fg:x="68318" fg:w="4678"/><text x="56.8947%" y="319.50">tio4..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4,678 samples, 3.88%)</title><rect x="56.6447%" y="293" width="3.8787%" height="15" fill="rgb(221,57,46)" fg:x="68318" fg:w="4678"/><text x="56.8947%" y="303.50">tio4..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4,678 samples, 3.88%)</title><rect x="56.6447%" y="277" width="3.8787%" height="15" fill="rgb(229,161,17)" fg:x="68318" fg:w="4678"/><text x="56.8947%" y="287.50">tio4..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (4,670 samples, 3.87%)</title><rect x="56.6513%" y="261" width="3.8720%" height="15" fill="rgb(222,213,11)" fg:x="68326" fg:w="4670"/><text x="56.9013%" y="271.50">tio4..</text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.02%)</title><rect x="60.5424%" y="229" width="0.0191%" height="15" fill="rgb(235,35,13)" fg:x="73019" fg:w="23"/><text x="60.7924%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.01%)</title><rect x="60.5822%" y="197" width="0.0133%" height="15" fill="rgb(233,158,34)" fg:x="73067" fg:w="16"/><text x="60.8322%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (52 samples, 0.04%)</title><rect x="60.5615%" y="229" width="0.0431%" height="15" fill="rgb(215,151,48)" fg:x="73042" fg:w="52"/><text x="60.8115%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.03%)</title><rect x="60.5706%" y="213" width="0.0340%" height="15" fill="rgb(229,84,14)" fg:x="73053" fg:w="41"/><text x="60.8206%" y="223.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (19 samples, 0.02%)</title><rect x="60.6195%" y="229" width="0.0158%" height="15" fill="rgb(229,68,14)" fg:x="73112" fg:w="19"/><text x="60.8695%" y="239.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (13 samples, 0.01%)</title><rect x="60.6245%" y="213" width="0.0108%" height="15" fill="rgb(243,106,26)" fg:x="73118" fg:w="13"/><text x="60.8745%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.04%)</title><rect x="60.6568%" y="197" width="0.0431%" height="15" fill="rgb(206,45,38)" fg:x="73157" fg:w="52"/><text x="60.9068%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.02%)</title><rect x="60.6825%" y="181" width="0.0174%" height="15" fill="rgb(226,6,15)" fg:x="73188" fg:w="21"/><text x="60.9325%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.02%)</title><rect x="60.6842%" y="165" width="0.0158%" height="15" fill="rgb(232,22,54)" fg:x="73190" fg:w="19"/><text x="60.9342%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.02%)</title><rect x="60.7456%" y="165" width="0.0216%" height="15" fill="rgb(229,222,32)" fg:x="73264" fg:w="26"/><text x="60.9956%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (101 samples, 0.08%)</title><rect x="60.7000%" y="197" width="0.0837%" height="15" fill="rgb(228,62,29)" fg:x="73209" fg:w="101"/><text x="60.9500%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (68 samples, 0.06%)</title><rect x="60.7273%" y="181" width="0.0564%" height="15" fill="rgb(251,103,34)" fg:x="73242" fg:w="68"/><text x="60.9773%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.02%)</title><rect x="60.7671%" y="165" width="0.0166%" height="15" fill="rgb(233,12,30)" fg:x="73290" fg:w="20"/><text x="61.0171%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (13 samples, 0.01%)</title><rect x="60.7870%" y="197" width="0.0108%" height="15" fill="rgb(238,52,0)" fg:x="73314" fg:w="13"/><text x="61.0370%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.01%)</title><rect x="60.7978%" y="197" width="0.0116%" height="15" fill="rgb(223,98,5)" fg:x="73327" fg:w="14"/><text x="61.0478%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.02%)</title><rect x="61.3442%" y="165" width="0.0207%" height="15" fill="rgb(228,75,37)" fg:x="73986" fg:w="25"/><text x="61.5942%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.01%)</title><rect x="61.3517%" y="149" width="0.0133%" height="15" fill="rgb(205,115,49)" fg:x="73995" fg:w="16"/><text x="61.6017%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (19 samples, 0.02%)</title><rect x="61.4371%" y="133" width="0.0158%" height="15" fill="rgb(250,154,43)" fg:x="74098" fg:w="19"/><text x="61.6871%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (194 samples, 0.16%)</title><rect x="61.3649%" y="165" width="0.1609%" height="15" fill="rgb(226,43,29)" fg:x="74011" fg:w="194"/><text x="61.6149%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (188 samples, 0.16%)</title><rect x="61.3699%" y="149" width="0.1559%" height="15" fill="rgb(249,228,39)" fg:x="74017" fg:w="188"/><text x="61.6199%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (88 samples, 0.07%)</title><rect x="61.4528%" y="133" width="0.0730%" height="15" fill="rgb(216,79,43)" fg:x="74117" fg:w="88"/><text x="61.7028%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.03%)</title><rect x="61.4984%" y="117" width="0.0274%" height="15" fill="rgb(228,95,12)" fg:x="74172" fg:w="33"/><text x="61.7484%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (249 samples, 0.21%)</title><rect x="61.3201%" y="181" width="0.2065%" height="15" fill="rgb(249,221,15)" fg:x="73957" fg:w="249"/><text x="61.5701%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.02%)</title><rect x="61.5307%" y="181" width="0.0216%" height="15" fill="rgb(233,34,13)" fg:x="74211" fg:w="26"/><text x="61.7807%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.02%)</title><rect x="61.6029%" y="149" width="0.0166%" height="15" fill="rgb(214,103,39)" fg:x="74298" fg:w="20"/><text x="61.8529%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (99 samples, 0.08%)</title><rect x="61.5523%" y="181" width="0.0821%" height="15" fill="rgb(251,126,39)" fg:x="74237" fg:w="99"/><text x="61.8023%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (68 samples, 0.06%)</title><rect x="61.5780%" y="165" width="0.0564%" height="15" fill="rgb(214,216,36)" fg:x="74268" fg:w="68"/><text x="61.8280%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.01%)</title><rect x="61.6195%" y="149" width="0.0149%" height="15" fill="rgb(220,221,8)" fg:x="74318" fg:w="18"/><text x="61.8695%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.02%)</title><rect x="61.6477%" y="181" width="0.0182%" height="15" fill="rgb(240,216,3)" fg:x="74352" fg:w="22"/><text x="61.8977%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="61.8251%" y="165" width="0.0141%" height="15" fill="rgb(232,218,17)" fg:x="74566" fg:w="17"/><text x="62.0751%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="61.8267%" y="149" width="0.0124%" height="15" fill="rgb(229,163,45)" fg:x="74568" fg:w="15"/><text x="62.0767%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.01%)</title><rect x="61.8276%" y="133" width="0.0116%" height="15" fill="rgb(231,110,42)" fg:x="74569" fg:w="14"/><text x="62.0776%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.02%)</title><rect x="61.8400%" y="165" width="0.0166%" height="15" fill="rgb(208,170,48)" fg:x="74584" fg:w="20"/><text x="62.0900%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.01%)</title><rect x="61.8433%" y="149" width="0.0133%" height="15" fill="rgb(239,116,25)" fg:x="74588" fg:w="16"/><text x="62.0933%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.01%)</title><rect x="61.8682%" y="165" width="0.0116%" height="15" fill="rgb(219,200,50)" fg:x="74618" fg:w="14"/><text x="62.1182%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="61.8831%" y="133" width="0.0133%" height="15" fill="rgb(245,200,0)" fg:x="74636" fg:w="16"/><text x="62.1331%" y="143.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.02%)</title><rect x="61.8798%" y="165" width="0.0174%" height="15" fill="rgb(245,119,33)" fg:x="74632" fg:w="21"/><text x="62.1298%" y="175.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (17 samples, 0.01%)</title><rect x="61.8831%" y="149" width="0.0141%" height="15" fill="rgb(231,125,12)" fg:x="74636" fg:w="17"/><text x="62.1331%" y="159.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (1,523 samples, 1.26%)</title><rect x="60.6353%" y="229" width="1.2628%" height="15" fill="rgb(216,96,41)" fg:x="73131" fg:w="1523"/><text x="60.8853%" y="239.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (1,510 samples, 1.25%)</title><rect x="60.6461%" y="213" width="1.2520%" height="15" fill="rgb(248,43,45)" fg:x="73144" fg:w="1510"/><text x="60.8961%" y="223.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,304 samples, 1.08%)</title><rect x="60.8169%" y="197" width="1.0812%" height="15" fill="rgb(217,222,7)" fg:x="73350" fg:w="1304"/><text x="61.0669%" y="207.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (278 samples, 0.23%)</title><rect x="61.6676%" y="181" width="0.2305%" height="15" fill="rgb(233,28,6)" fg:x="74376" fg:w="278"/><text x="61.9176%" y="191.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (33 samples, 0.03%)</title><rect x="61.9014%" y="229" width="0.0274%" height="15" fill="rgb(231,218,15)" fg:x="74658" fg:w="33"/><text x="62.1514%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.01%)</title><rect x="62.1742%" y="197" width="0.0124%" height="15" fill="rgb(226,171,48)" fg:x="74987" fg:w="15"/><text x="62.4242%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (83 samples, 0.07%)</title><rect x="62.1866%" y="197" width="0.0688%" height="15" fill="rgb(235,201,9)" fg:x="75002" fg:w="83"/><text x="62.4366%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (79 samples, 0.07%)</title><rect x="62.1899%" y="181" width="0.0655%" height="15" fill="rgb(217,80,15)" fg:x="75006" fg:w="79"/><text x="62.4399%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.03%)</title><rect x="62.2280%" y="165" width="0.0274%" height="15" fill="rgb(219,152,8)" fg:x="75052" fg:w="33"/><text x="62.4780%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (112 samples, 0.09%)</title><rect x="62.1634%" y="213" width="0.0929%" height="15" fill="rgb(243,107,38)" fg:x="74974" fg:w="112"/><text x="62.4134%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.03%)</title><rect x="62.2645%" y="213" width="0.0298%" height="15" fill="rgb(231,17,5)" fg:x="75096" fg:w="36"/><text x="62.5145%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.02%)</title><rect x="62.2753%" y="197" width="0.0191%" height="15" fill="rgb(209,25,54)" fg:x="75109" fg:w="23"/><text x="62.5253%" y="207.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (612 samples, 0.51%)</title><rect x="61.9296%" y="229" width="0.5074%" height="15" fill="rgb(219,0,2)" fg:x="74692" fg:w="612"/><text x="62.1796%" y="239.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (157 samples, 0.13%)</title><rect x="62.3068%" y="213" width="0.1302%" height="15" fill="rgb(246,9,5)" fg:x="75147" fg:w="157"/><text x="62.5568%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.02%)</title><rect x="62.5066%" y="197" width="0.0249%" height="15" fill="rgb(226,159,4)" fg:x="75388" fg:w="30"/><text x="62.7566%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.02%)</title><rect x="62.5141%" y="181" width="0.0174%" height="15" fill="rgb(219,175,34)" fg:x="75397" fg:w="21"/><text x="62.7641%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.02%)</title><rect x="62.5149%" y="165" width="0.0166%" height="15" fill="rgb(236,10,46)" fg:x="75398" fg:w="20"/><text x="62.7649%" y="175.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (163 samples, 0.14%)</title><rect x="62.4370%" y="229" width="0.1351%" height="15" fill="rgb(240,211,16)" fg:x="75304" fg:w="163"/><text x="62.6870%" y="239.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (143 samples, 0.12%)</title><rect x="62.4536%" y="213" width="0.1186%" height="15" fill="rgb(205,3,43)" fg:x="75324" fg:w="143"/><text x="62.7036%" y="223.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (33 samples, 0.03%)</title><rect x="62.5448%" y="197" width="0.0274%" height="15" fill="rgb(245,7,22)" fg:x="75434" fg:w="33"/><text x="62.7948%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.01%)</title><rect x="62.5920%" y="149" width="0.0108%" height="15" fill="rgb(239,132,32)" fg:x="75491" fg:w="13"/><text x="62.8420%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.03%)</title><rect x="62.5829%" y="165" width="0.0265%" height="15" fill="rgb(228,202,34)" fg:x="75480" fg:w="32"/><text x="62.8329%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (41 samples, 0.03%)</title><rect x="62.6094%" y="165" width="0.0340%" height="15" fill="rgb(254,200,22)" fg:x="75512" fg:w="41"/><text x="62.8594%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (30 samples, 0.02%)</title><rect x="62.6186%" y="149" width="0.0249%" height="15" fill="rgb(219,10,39)" fg:x="75523" fg:w="30"/><text x="62.8686%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.01%)</title><rect x="62.6501%" y="165" width="0.0124%" height="15" fill="rgb(226,210,39)" fg:x="75561" fg:w="15"/><text x="62.9001%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.03%)</title><rect x="62.8938%" y="133" width="0.0323%" height="15" fill="rgb(208,219,16)" fg:x="75855" fg:w="39"/><text x="63.1438%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.02%)</title><rect x="62.9021%" y="117" width="0.0240%" height="15" fill="rgb(216,158,51)" fg:x="75865" fg:w="29"/><text x="63.1521%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.01%)</title><rect x="62.9137%" y="101" width="0.0124%" height="15" fill="rgb(233,14,44)" fg:x="75879" fg:w="15"/><text x="63.1637%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (71 samples, 0.06%)</title><rect x="62.9262%" y="133" width="0.0589%" height="15" fill="rgb(237,97,39)" fg:x="75894" fg:w="71"/><text x="63.1762%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (64 samples, 0.05%)</title><rect x="62.9320%" y="117" width="0.0531%" height="15" fill="rgb(218,198,43)" fg:x="75901" fg:w="64"/><text x="63.1820%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (31 samples, 0.03%)</title><rect x="62.9593%" y="101" width="0.0257%" height="15" fill="rgb(231,104,20)" fg:x="75934" fg:w="31"/><text x="63.2093%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="62.9734%" y="85" width="0.0116%" height="15" fill="rgb(254,36,13)" fg:x="75951" fg:w="14"/><text x="63.2234%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (119 samples, 0.10%)</title><rect x="62.8872%" y="149" width="0.0987%" height="15" fill="rgb(248,14,50)" fg:x="75847" fg:w="119"/><text x="63.1372%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.01%)</title><rect x="62.9867%" y="149" width="0.0149%" height="15" fill="rgb(217,107,29)" fg:x="75967" fg:w="18"/><text x="63.2367%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.02%)</title><rect x="63.0016%" y="149" width="0.0199%" height="15" fill="rgb(251,169,33)" fg:x="75985" fg:w="24"/><text x="63.2516%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.01%)</title><rect x="63.0083%" y="133" width="0.0133%" height="15" fill="rgb(217,108,32)" fg:x="75993" fg:w="16"/><text x="63.2583%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.01%)</title><rect x="63.1185%" y="133" width="0.0108%" height="15" fill="rgb(219,66,42)" fg:x="76126" fg:w="13"/><text x="63.3685%" y="143.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (709 samples, 0.59%)</title><rect x="62.5721%" y="213" width="0.5879%" height="15" fill="rgb(206,180,7)" fg:x="75467" fg:w="709"/><text x="62.8221%" y="223.50"></text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (709 samples, 0.59%)</title><rect x="62.5721%" y="197" width="0.5879%" height="15" fill="rgb(208,226,31)" fg:x="75467" fg:w="709"/><text x="62.8221%" y="207.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (700 samples, 0.58%)</title><rect x="62.5796%" y="181" width="0.5804%" height="15" fill="rgb(218,26,49)" fg:x="75476" fg:w="700"/><text x="62.8296%" y="191.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (585 samples, 0.49%)</title><rect x="62.6749%" y="165" width="0.4850%" height="15" fill="rgb(233,197,48)" fg:x="75591" fg:w="585"/><text x="62.9249%" y="175.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (136 samples, 0.11%)</title><rect x="63.0472%" y="149" width="0.1128%" height="15" fill="rgb(252,181,51)" fg:x="76040" fg:w="136"/><text x="63.2972%" y="159.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (13 samples, 0.01%)</title><rect x="63.1492%" y="133" width="0.0108%" height="15" fill="rgb(253,90,19)" fg:x="76163" fg:w="13"/><text x="63.3992%" y="143.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (713 samples, 0.59%)</title><rect x="62.5721%" y="229" width="0.5912%" height="15" fill="rgb(215,171,30)" fg:x="75467" fg:w="713"/><text x="62.8221%" y="239.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (15 samples, 0.01%)</title><rect x="63.1633%" y="229" width="0.0124%" height="15" fill="rgb(214,222,9)" fg:x="76180" fg:w="15"/><text x="63.4133%" y="239.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (49,514 samples, 41.05%)</title><rect x="22.1246%" y="437" width="41.0537%" height="15" fill="rgb(223,3,22)" fg:x="26684" fg:w="49514"/><text x="22.3746%" y="447.50">tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>tio4905`rayon_core::registry::in_worker (49,514 samples, 41.05%)</title><rect x="22.1246%" y="421" width="41.0537%" height="15" fill="rgb(225,196,46)" fg:x="26684" fg:w="49514"/><text x="22.3746%" y="431.50">tio4905`rayon_core::registry::in_worker</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (11,348 samples, 9.41%)</title><rect x="53.7692%" y="405" width="9.4090%" height="15" fill="rgb(209,110,37)" fg:x="64850" fg:w="11348"/><text x="54.0192%" y="415.50">tio4905`rayon..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (11,348 samples, 9.41%)</title><rect x="53.7692%" y="389" width="9.4090%" height="15" fill="rgb(249,89,12)" fg:x="64850" fg:w="11348"/><text x="54.0192%" y="399.50">tio4905`rayon..</text></g><g><title>tio4905`rayon_core::registry::in_worker (11,064 samples, 9.17%)</title><rect x="54.0047%" y="373" width="9.1735%" height="15" fill="rgb(226,27,33)" fg:x="65134" fg:w="11064"/><text x="54.2547%" y="383.50">tio4905`rayon..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7,880 samples, 6.53%)</title><rect x="56.6447%" y="357" width="6.5336%" height="15" fill="rgb(213,82,22)" fg:x="68318" fg:w="7880"/><text x="56.8947%" y="367.50">tio4905`r..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (7,880 samples, 6.53%)</title><rect x="56.6447%" y="341" width="6.5336%" height="15" fill="rgb(248,140,0)" fg:x="68318" fg:w="7880"/><text x="56.8947%" y="351.50">tio4905`r..</text></g><g><title>tio4905`rayon_core::registry::in_worker (7,880 samples, 6.53%)</title><rect x="56.6447%" y="325" width="6.5336%" height="15" fill="rgb(228,106,3)" fg:x="68318" fg:w="7880"/><text x="56.8947%" y="335.50">tio4905`r..</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3,202 samples, 2.65%)</title><rect x="60.5233%" y="309" width="2.6549%" height="15" fill="rgb(209,23,37)" fg:x="72996" fg:w="3202"/><text x="60.7733%" y="319.50">ti..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (3,202 samples, 2.65%)</title><rect x="60.5233%" y="293" width="2.6549%" height="15" fill="rgb(241,93,50)" fg:x="72996" fg:w="3202"/><text x="60.7733%" y="303.50">ti..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3,202 samples, 2.65%)</title><rect x="60.5233%" y="277" width="2.6549%" height="15" fill="rgb(253,46,43)" fg:x="72996" fg:w="3202"/><text x="60.7733%" y="287.50">ti..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3,202 samples, 2.65%)</title><rect x="60.5233%" y="261" width="2.6549%" height="15" fill="rgb(226,206,43)" fg:x="72996" fg:w="3202"/><text x="60.7733%" y="271.50">ti..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (3,202 samples, 2.65%)</title><rect x="60.5233%" y="245" width="2.6549%" height="15" fill="rgb(217,54,7)" fg:x="72996" fg:w="3202"/><text x="60.7733%" y="255.50">ti..</text></g><g><title>libsystem_malloc.dylib`free_tiny (29 samples, 0.02%)</title><rect x="63.2205%" y="325" width="0.0240%" height="15" fill="rgb(223,5,52)" fg:x="76249" fg:w="29"/><text x="63.4705%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="63.2305%" y="309" width="0.0141%" height="15" fill="rgb(206,52,46)" fg:x="76261" fg:w="17"/><text x="63.4805%" y="319.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (63 samples, 0.05%)</title><rect x="63.2520%" y="325" width="0.0522%" height="15" fill="rgb(253,136,11)" fg:x="76287" fg:w="63"/><text x="63.5020%" y="335.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (53 samples, 0.04%)</title><rect x="63.2603%" y="309" width="0.0439%" height="15" fill="rgb(208,106,33)" fg:x="76297" fg:w="53"/><text x="63.5103%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.01%)</title><rect x="63.3681%" y="277" width="0.0133%" height="15" fill="rgb(206,54,4)" fg:x="76427" fg:w="16"/><text x="63.6181%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.01%)</title><rect x="63.3681%" y="261" width="0.0133%" height="15" fill="rgb(213,3,15)" fg:x="76427" fg:w="16"/><text x="63.6181%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (62 samples, 0.05%)</title><rect x="63.3324%" y="293" width="0.0514%" height="15" fill="rgb(252,211,39)" fg:x="76384" fg:w="62"/><text x="63.5824%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (92 samples, 0.08%)</title><rect x="63.3839%" y="293" width="0.0763%" height="15" fill="rgb(223,6,36)" fg:x="76446" fg:w="92"/><text x="63.6339%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (51 samples, 0.04%)</title><rect x="63.4178%" y="277" width="0.0423%" height="15" fill="rgb(252,169,45)" fg:x="76487" fg:w="51"/><text x="63.6678%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.01%)</title><rect x="63.4477%" y="261" width="0.0124%" height="15" fill="rgb(212,48,26)" fg:x="76523" fg:w="15"/><text x="63.6977%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.01%)</title><rect x="63.4693%" y="293" width="0.0108%" height="15" fill="rgb(251,102,48)" fg:x="76549" fg:w="13"/><text x="63.7193%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.04%)</title><rect x="64.8564%" y="261" width="0.0398%" height="15" fill="rgb(243,208,16)" fg:x="78222" fg:w="48"/><text x="65.1064%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (37 samples, 0.03%)</title><rect x="64.8655%" y="245" width="0.0307%" height="15" fill="rgb(219,96,24)" fg:x="78233" fg:w="37"/><text x="65.1155%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.01%)</title><rect x="64.8829%" y="229" width="0.0133%" height="15" fill="rgb(219,33,29)" fg:x="78254" fg:w="16"/><text x="65.1329%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.02%)</title><rect x="64.9708%" y="229" width="0.0199%" height="15" fill="rgb(223,176,5)" fg:x="78360" fg:w="24"/><text x="65.2208%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (234 samples, 0.19%)</title><rect x="64.8431%" y="277" width="0.1940%" height="15" fill="rgb(228,140,14)" fg:x="78206" fg:w="234"/><text x="65.0931%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (170 samples, 0.14%)</title><rect x="64.8962%" y="261" width="0.1410%" height="15" fill="rgb(217,179,31)" fg:x="78270" fg:w="170"/><text x="65.1462%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (166 samples, 0.14%)</title><rect x="64.8995%" y="245" width="0.1376%" height="15" fill="rgb(230,9,30)" fg:x="78274" fg:w="166"/><text x="65.1495%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (55 samples, 0.05%)</title><rect x="64.9915%" y="229" width="0.0456%" height="15" fill="rgb(230,136,20)" fg:x="78385" fg:w="55"/><text x="65.2415%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (54 samples, 0.04%)</title><rect x="65.0463%" y="277" width="0.0448%" height="15" fill="rgb(215,210,22)" fg:x="78451" fg:w="54"/><text x="65.2963%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (24 samples, 0.02%)</title><rect x="65.0711%" y="261" width="0.0199%" height="15" fill="rgb(218,43,5)" fg:x="78481" fg:w="24"/><text x="65.3211%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (22 samples, 0.02%)</title><rect x="65.0728%" y="245" width="0.0182%" height="15" fill="rgb(216,11,5)" fg:x="78483" fg:w="22"/><text x="65.3228%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="65.1507%" y="245" width="0.0149%" height="15" fill="rgb(209,82,29)" fg:x="78577" fg:w="18"/><text x="65.4007%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (98 samples, 0.08%)</title><rect x="65.0910%" y="277" width="0.0813%" height="15" fill="rgb(244,115,12)" fg:x="78505" fg:w="98"/><text x="65.3410%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (67 samples, 0.06%)</title><rect x="65.1167%" y="261" width="0.0556%" height="15" fill="rgb(222,82,18)" fg:x="78536" fg:w="67"/><text x="65.3667%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.03%)</title><rect x="65.1897%" y="277" width="0.0274%" height="15" fill="rgb(249,227,8)" fg:x="78624" fg:w="33"/><text x="65.4397%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.03%)</title><rect x="65.5280%" y="261" width="0.0265%" height="15" fill="rgb(253,141,45)" fg:x="79032" fg:w="32"/><text x="65.7780%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.03%)</title><rect x="65.5288%" y="245" width="0.0257%" height="15" fill="rgb(234,184,4)" fg:x="79033" fg:w="31"/><text x="65.7788%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.03%)</title><rect x="65.5288%" y="229" width="0.0257%" height="15" fill="rgb(218,194,23)" fg:x="79033" fg:w="31"/><text x="65.7788%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.01%)</title><rect x="65.5437%" y="213" width="0.0108%" height="15" fill="rgb(235,66,41)" fg:x="79051" fg:w="13"/><text x="65.7937%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.01%)</title><rect x="65.5545%" y="261" width="0.0124%" height="15" fill="rgb(245,217,1)" fg:x="79064" fg:w="15"/><text x="65.8045%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.02%)</title><rect x="65.5670%" y="261" width="0.0158%" height="15" fill="rgb(229,91,1)" fg:x="79079" fg:w="19"/><text x="65.8170%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.01%)</title><rect x="65.5719%" y="245" width="0.0108%" height="15" fill="rgb(207,101,30)" fg:x="79085" fg:w="13"/><text x="65.8219%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.02%)</title><rect x="65.5935%" y="261" width="0.0207%" height="15" fill="rgb(223,82,49)" fg:x="79111" fg:w="25"/><text x="65.8435%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="65.6159%" y="229" width="0.0116%" height="15" fill="rgb(218,167,17)" fg:x="79138" fg:w="14"/><text x="65.8659%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.01%)</title><rect x="65.6142%" y="261" width="0.0141%" height="15" fill="rgb(208,103,14)" fg:x="79136" fg:w="17"/><text x="65.8642%" y="271.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (15 samples, 0.01%)</title><rect x="65.6159%" y="245" width="0.0124%" height="15" fill="rgb(238,20,8)" fg:x="79138" fg:w="15"/><text x="65.8659%" y="255.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (2,804 samples, 2.32%)</title><rect x="63.3043%" y="325" width="2.3249%" height="15" fill="rgb(218,80,54)" fg:x="76350" fg:w="2804"/><text x="63.5543%" y="335.50">t..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,792 samples, 2.31%)</title><rect x="63.3142%" y="309" width="2.3149%" height="15" fill="rgb(240,144,17)" fg:x="76362" fg:w="2792"/><text x="63.5642%" y="319.50">t..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,564 samples, 2.13%)</title><rect x="63.5033%" y="293" width="2.1259%" height="15" fill="rgb(245,27,50)" fg:x="76590" fg:w="2564"/><text x="63.7533%" y="303.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (494 samples, 0.41%)</title><rect x="65.2196%" y="277" width="0.4096%" height="15" fill="rgb(251,51,7)" fg:x="78660" fg:w="494"/><text x="65.4696%" y="287.50"></text></g><g><title>tio4905`rand::rng::Rng::gen_range (80 samples, 0.07%)</title><rect x="65.6300%" y="325" width="0.0663%" height="15" fill="rgb(245,217,29)" fg:x="79155" fg:w="80"/><text x="65.8800%" y="335.50"></text></g><g><title>tio4905`rand_chacha::guts::refill_wide::impl_avx2 (17 samples, 0.01%)</title><rect x="65.6822%" y="309" width="0.0141%" height="15" fill="rgb(221,176,29)" fg:x="79218" fg:w="17"/><text x="65.9322%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.03%)</title><rect x="65.9351%" y="309" width="0.0315%" height="15" fill="rgb(212,180,24)" fg:x="79523" fg:w="38"/><text x="66.1851%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.02%)</title><rect x="65.9426%" y="293" width="0.0240%" height="15" fill="rgb(254,24,2)" fg:x="79532" fg:w="29"/><text x="66.1926%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.02%)</title><rect x="65.9434%" y="277" width="0.0232%" height="15" fill="rgb(230,100,2)" fg:x="79533" fg:w="28"/><text x="66.1934%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.02%)</title><rect x="65.9766%" y="309" width="0.0174%" height="15" fill="rgb(219,142,25)" fg:x="79573" fg:w="21"/><text x="66.2266%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="65.9799%" y="293" width="0.0141%" height="15" fill="rgb(240,73,43)" fg:x="79577" fg:w="17"/><text x="66.2299%" y="303.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (470 samples, 0.39%)</title><rect x="65.6971%" y="325" width="0.3897%" height="15" fill="rgb(214,114,15)" fg:x="79236" fg:w="470"/><text x="65.9471%" y="335.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (99 samples, 0.08%)</title><rect x="66.0047%" y="309" width="0.0821%" height="15" fill="rgb(207,130,4)" fg:x="79607" fg:w="99"/><text x="66.2547%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="66.1590%" y="293" width="0.0116%" height="15" fill="rgb(221,25,40)" fg:x="79793" fg:w="14"/><text x="66.4090%" y="303.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (128 samples, 0.11%)</title><rect x="66.0868%" y="325" width="0.1061%" height="15" fill="rgb(241,184,7)" fg:x="79706" fg:w="128"/><text x="66.3368%" y="335.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (109 samples, 0.09%)</title><rect x="66.1026%" y="309" width="0.0904%" height="15" fill="rgb(235,159,4)" fg:x="79725" fg:w="109"/><text x="66.3526%" y="319.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (21 samples, 0.02%)</title><rect x="66.1755%" y="293" width="0.0174%" height="15" fill="rgb(214,87,48)" fg:x="79813" fg:w="21"/><text x="66.4255%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="66.2178%" y="261" width="0.0141%" height="15" fill="rgb(246,198,24)" fg:x="79864" fg:w="17"/><text x="66.4678%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (32 samples, 0.03%)</title><rect x="66.2618%" y="245" width="0.0265%" height="15" fill="rgb(209,66,40)" fg:x="79917" fg:w="32"/><text x="66.5118%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (89 samples, 0.07%)</title><rect x="66.2361%" y="261" width="0.0738%" height="15" fill="rgb(233,147,39)" fg:x="79886" fg:w="89"/><text x="66.4861%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.02%)</title><rect x="66.2933%" y="245" width="0.0166%" height="15" fill="rgb(231,145,52)" fg:x="79955" fg:w="20"/><text x="66.5433%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.02%)</title><rect x="66.2941%" y="229" width="0.0158%" height="15" fill="rgb(206,20,26)" fg:x="79956" fg:w="19"/><text x="66.5441%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="66.3895%" y="229" width="0.0207%" height="15" fill="rgb(238,220,4)" fg:x="80071" fg:w="25"/><text x="66.6395%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (146 samples, 0.12%)</title><rect x="66.3099%" y="261" width="0.1211%" height="15" fill="rgb(252,195,42)" fg:x="79975" fg:w="146"/><text x="66.5599%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (101 samples, 0.08%)</title><rect x="66.3472%" y="245" width="0.0837%" height="15" fill="rgb(209,10,6)" fg:x="80020" fg:w="101"/><text x="66.5972%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (25 samples, 0.02%)</title><rect x="66.4102%" y="229" width="0.0207%" height="15" fill="rgb(229,3,52)" fg:x="80096" fg:w="25"/><text x="66.6602%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (16 samples, 0.01%)</title><rect x="66.4367%" y="261" width="0.0133%" height="15" fill="rgb(253,49,37)" fg:x="80128" fg:w="16"/><text x="66.6867%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (20 samples, 0.02%)</title><rect x="66.4500%" y="261" width="0.0166%" height="15" fill="rgb(240,103,49)" fg:x="80144" fg:w="20"/><text x="66.7000%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (50 samples, 0.04%)</title><rect x="67.8222%" y="213" width="0.0415%" height="15" fill="rgb(250,182,30)" fg:x="81799" fg:w="50"/><text x="68.0722%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (24 samples, 0.02%)</title><rect x="67.8438%" y="197" width="0.0199%" height="15" fill="rgb(248,8,30)" fg:x="81825" fg:w="24"/><text x="68.0938%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (67 samples, 0.06%)</title><rect x="67.8098%" y="229" width="0.0556%" height="15" fill="rgb(237,120,30)" fg:x="81784" fg:w="67"/><text x="68.0598%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (33 samples, 0.03%)</title><rect x="67.9673%" y="197" width="0.0274%" height="15" fill="rgb(221,146,34)" fg:x="81974" fg:w="33"/><text x="68.2173%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (245 samples, 0.20%)</title><rect x="67.8653%" y="229" width="0.2031%" height="15" fill="rgb(242,55,13)" fg:x="81851" fg:w="245"/><text x="68.1153%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (234 samples, 0.19%)</title><rect x="67.8744%" y="213" width="0.1940%" height="15" fill="rgb(242,112,31)" fg:x="81862" fg:w="234"/><text x="68.1244%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (88 samples, 0.07%)</title><rect x="67.9955%" y="197" width="0.0730%" height="15" fill="rgb(249,192,27)" fg:x="82008" fg:w="88"/><text x="68.2455%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.02%)</title><rect x="68.0452%" y="181" width="0.0232%" height="15" fill="rgb(208,204,44)" fg:x="82068" fg:w="28"/><text x="68.2952%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (355 samples, 0.29%)</title><rect x="67.7749%" y="245" width="0.2943%" height="15" fill="rgb(208,93,54)" fg:x="81742" fg:w="355"/><text x="68.0249%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.01%)</title><rect x="68.0701%" y="245" width="0.0116%" height="15" fill="rgb(242,1,31)" fg:x="82098" fg:w="14"/><text x="68.3201%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.01%)</title><rect x="68.1016%" y="229" width="0.0149%" height="15" fill="rgb(241,83,25)" fg:x="82136" fg:w="18"/><text x="68.3516%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (35 samples, 0.03%)</title><rect x="68.1248%" y="229" width="0.0290%" height="15" fill="rgb(205,169,50)" fg:x="82164" fg:w="35"/><text x="68.3748%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (32 samples, 0.03%)</title><rect x="68.1273%" y="213" width="0.0265%" height="15" fill="rgb(239,186,37)" fg:x="82167" fg:w="32"/><text x="68.3773%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (89 samples, 0.07%)</title><rect x="68.0817%" y="245" width="0.0738%" height="15" fill="rgb(205,221,10)" fg:x="82112" fg:w="89"/><text x="68.3317%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (29 samples, 0.02%)</title><rect x="68.2285%" y="213" width="0.0240%" height="15" fill="rgb(218,196,15)" fg:x="82289" fg:w="29"/><text x="68.4785%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (135 samples, 0.11%)</title><rect x="68.1555%" y="245" width="0.1119%" height="15" fill="rgb(218,196,35)" fg:x="82201" fg:w="135"/><text x="68.4055%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (91 samples, 0.08%)</title><rect x="68.1920%" y="229" width="0.0755%" height="15" fill="rgb(233,63,24)" fg:x="82245" fg:w="91"/><text x="68.4420%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.01%)</title><rect x="68.2525%" y="213" width="0.0149%" height="15" fill="rgb(225,8,4)" fg:x="82318" fg:w="18"/><text x="68.5025%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.03%)</title><rect x="68.2865%" y="245" width="0.0332%" height="15" fill="rgb(234,105,35)" fg:x="82359" fg:w="40"/><text x="68.5365%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.03%)</title><rect x="68.5518%" y="229" width="0.0257%" height="15" fill="rgb(236,21,32)" fg:x="82679" fg:w="31"/><text x="68.8018%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.02%)</title><rect x="68.5576%" y="213" width="0.0199%" height="15" fill="rgb(228,109,6)" fg:x="82686" fg:w="24"/><text x="68.8076%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.02%)</title><rect x="68.5593%" y="197" width="0.0182%" height="15" fill="rgb(229,215,31)" fg:x="82688" fg:w="22"/><text x="68.8093%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.01%)</title><rect x="68.5867%" y="213" width="0.0124%" height="15" fill="rgb(221,52,54)" fg:x="82721" fg:w="15"/><text x="68.8367%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.02%)</title><rect x="68.5784%" y="229" width="0.0240%" height="15" fill="rgb(252,129,43)" fg:x="82711" fg:w="29"/><text x="68.8284%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.02%)</title><rect x="68.6024%" y="229" width="0.0249%" height="15" fill="rgb(248,183,27)" fg:x="82740" fg:w="30"/><text x="68.8524%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.02%)</title><rect x="68.6082%" y="213" width="0.0191%" height="15" fill="rgb(250,0,22)" fg:x="82747" fg:w="23"/><text x="68.8582%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.02%)</title><rect x="68.6356%" y="229" width="0.0166%" height="15" fill="rgb(213,166,10)" fg:x="82780" fg:w="20"/><text x="68.8856%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (30 samples, 0.02%)</title><rect x="68.6522%" y="229" width="0.0249%" height="15" fill="rgb(207,163,36)" fg:x="82800" fg:w="30"/><text x="68.9022%" y="239.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="68.6563%" y="213" width="0.0207%" height="15" fill="rgb(208,122,22)" fg:x="82805" fg:w="25"/><text x="68.9063%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.02%)</title><rect x="68.6563%" y="197" width="0.0207%" height="15" fill="rgb(207,104,49)" fg:x="82805" fg:w="25"/><text x="68.9063%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.02%)</title><rect x="68.6596%" y="181" width="0.0174%" height="15" fill="rgb(248,211,50)" fg:x="82809" fg:w="21"/><text x="68.9096%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.02%)</title><rect x="68.6613%" y="165" width="0.0158%" height="15" fill="rgb(217,13,45)" fg:x="82811" fg:w="19"/><text x="68.9113%" y="175.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,997 samples, 2.48%)</title><rect x="66.1930%" y="309" width="2.4849%" height="15" fill="rgb(211,216,49)" fg:x="79834" fg:w="2997"/><text x="66.4430%" y="319.50">ti..</text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (2,997 samples, 2.48%)</title><rect x="66.1930%" y="293" width="2.4849%" height="15" fill="rgb(221,58,53)" fg:x="79834" fg:w="2997"/><text x="66.4430%" y="303.50">ti..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (2,975 samples, 2.47%)</title><rect x="66.2112%" y="277" width="2.4667%" height="15" fill="rgb(220,112,41)" fg:x="79856" fg:w="2975"/><text x="66.4612%" y="287.50">ti..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (2,637 samples, 2.19%)</title><rect x="66.4914%" y="261" width="2.1864%" height="15" fill="rgb(236,38,28)" fg:x="80194" fg:w="2637"/><text x="66.7414%" y="271.50">t..</text></g><g><title>tio4905`alloc::slice::merge_sort (429 samples, 0.36%)</title><rect x="68.3222%" y="245" width="0.3557%" height="15" fill="rgb(227,195,22)" fg:x="82402" fg:w="429"/><text x="68.5722%" y="255.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (3,000 samples, 2.49%)</title><rect x="66.1930%" y="325" width="2.4874%" height="15" fill="rgb(214,55,33)" fg:x="79834" fg:w="3000"/><text x="66.4430%" y="335.50">ti..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (17 samples, 0.01%)</title><rect x="68.6804%" y="325" width="0.0141%" height="15" fill="rgb(248,80,13)" fg:x="82834" fg:w="17"/><text x="68.9304%" y="335.50"></text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (6,658 samples, 5.52%)</title><rect x="63.1782%" y="389" width="5.5204%" height="15" fill="rgb(238,52,6)" fg:x="76198" fg:w="6658"/><text x="63.4282%" y="399.50">tio4905..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6,658 samples, 5.52%)</title><rect x="63.1782%" y="373" width="5.5204%" height="15" fill="rgb(224,198,47)" fg:x="76198" fg:w="6658"/><text x="63.4282%" y="383.50">tio4905..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6,658 samples, 5.52%)</title><rect x="63.1782%" y="357" width="5.5204%" height="15" fill="rgb(233,171,20)" fg:x="76198" fg:w="6658"/><text x="63.4282%" y="367.50">tio4905..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (6,648 samples, 5.51%)</title><rect x="63.1865%" y="341" width="5.5121%" height="15" fill="rgb(241,30,25)" fg:x="76208" fg:w="6648"/><text x="63.4365%" y="351.50">tio4905..</text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.02%)</title><rect x="68.7309%" y="277" width="0.0182%" height="15" fill="rgb(207,171,38)" fg:x="82895" fg:w="22"/><text x="68.9809%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (65 samples, 0.05%)</title><rect x="68.7492%" y="277" width="0.0539%" height="15" fill="rgb(234,70,1)" fg:x="82917" fg:w="65"/><text x="68.9992%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.03%)</title><rect x="68.7691%" y="261" width="0.0340%" height="15" fill="rgb(232,178,18)" fg:x="82941" fg:w="41"/><text x="69.0191%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.01%)</title><rect x="68.7906%" y="245" width="0.0124%" height="15" fill="rgb(241,78,40)" fg:x="82967" fg:w="15"/><text x="69.0406%" y="255.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (69 samples, 0.06%)</title><rect x="68.8172%" y="277" width="0.0572%" height="15" fill="rgb(222,35,25)" fg:x="82999" fg:w="69"/><text x="69.0672%" y="287.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (58 samples, 0.05%)</title><rect x="68.8263%" y="261" width="0.0481%" height="15" fill="rgb(207,92,16)" fg:x="83010" fg:w="58"/><text x="69.0763%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (31 samples, 0.03%)</title><rect x="68.9556%" y="229" width="0.0257%" height="15" fill="rgb(216,59,51)" fg:x="83166" fg:w="31"/><text x="69.2056%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (41 samples, 0.03%)</title><rect x="68.9888%" y="229" width="0.0340%" height="15" fill="rgb(213,80,28)" fg:x="83206" fg:w="41"/><text x="69.2388%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (35 samples, 0.03%)</title><rect x="68.9938%" y="213" width="0.0290%" height="15" fill="rgb(220,93,7)" fg:x="83212" fg:w="35"/><text x="69.2438%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (116 samples, 0.10%)</title><rect x="68.9283%" y="245" width="0.0962%" height="15" fill="rgb(225,24,44)" fg:x="83133" fg:w="116"/><text x="69.1783%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (50 samples, 0.04%)</title><rect x="69.1737%" y="213" width="0.0415%" height="15" fill="rgb(243,74,40)" fg:x="83429" fg:w="50"/><text x="69.4237%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (274 samples, 0.23%)</title><rect x="69.0244%" y="245" width="0.2272%" height="15" fill="rgb(228,39,7)" fg:x="83249" fg:w="274"/><text x="69.2744%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (173 samples, 0.14%)</title><rect x="69.1082%" y="229" width="0.1434%" height="15" fill="rgb(227,79,8)" fg:x="83350" fg:w="173"/><text x="69.3582%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (44 samples, 0.04%)</title><rect x="69.2151%" y="213" width="0.0365%" height="15" fill="rgb(236,58,11)" fg:x="83479" fg:w="44"/><text x="69.4651%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.01%)</title><rect x="69.2516%" y="245" width="0.0116%" height="15" fill="rgb(249,63,35)" fg:x="83523" fg:w="14"/><text x="69.5016%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (17 samples, 0.01%)</title><rect x="69.2632%" y="245" width="0.0141%" height="15" fill="rgb(252,114,16)" fg:x="83537" fg:w="17"/><text x="69.5132%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (47 samples, 0.04%)</title><rect x="69.2773%" y="245" width="0.0390%" height="15" fill="rgb(254,151,24)" fg:x="83554" fg:w="47"/><text x="69.5273%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (85 samples, 0.07%)</title><rect x="73.3293%" y="213" width="0.0705%" height="15" fill="rgb(253,54,39)" fg:x="88441" fg:w="85"/><text x="73.5793%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (58 samples, 0.05%)</title><rect x="73.3517%" y="197" width="0.0481%" height="15" fill="rgb(243,25,45)" fg:x="88468" fg:w="58"/><text x="73.6017%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.02%)</title><rect x="73.3782%" y="181" width="0.0216%" height="15" fill="rgb(234,134,9)" fg:x="88500" fg:w="26"/><text x="73.6282%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (54 samples, 0.04%)</title><rect x="73.6278%" y="181" width="0.0448%" height="15" fill="rgb(227,166,31)" fg:x="88801" fg:w="54"/><text x="73.8778%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (492 samples, 0.41%)</title><rect x="73.3998%" y="213" width="0.4079%" height="15" fill="rgb(245,143,41)" fg:x="88526" fg:w="492"/><text x="73.6498%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (473 samples, 0.39%)</title><rect x="73.4155%" y="197" width="0.3922%" height="15" fill="rgb(238,181,32)" fg:x="88545" fg:w="473"/><text x="73.6655%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (162 samples, 0.13%)</title><rect x="73.6734%" y="181" width="0.1343%" height="15" fill="rgb(224,113,18)" fg:x="88856" fg:w="162"/><text x="73.9234%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.02%)</title><rect x="73.7878%" y="165" width="0.0199%" height="15" fill="rgb(240,229,28)" fg:x="88994" fg:w="24"/><text x="74.0378%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (637 samples, 0.53%)</title><rect x="73.2820%" y="229" width="0.5282%" height="15" fill="rgb(250,185,3)" fg:x="88384" fg:w="637"/><text x="73.5320%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (18 samples, 0.01%)</title><rect x="73.8119%" y="229" width="0.0149%" height="15" fill="rgb(212,59,25)" fg:x="89023" fg:w="18"/><text x="74.0619%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (48 samples, 0.04%)</title><rect x="73.8716%" y="213" width="0.0398%" height="15" fill="rgb(221,87,20)" fg:x="89095" fg:w="48"/><text x="74.1216%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (42 samples, 0.03%)</title><rect x="73.8765%" y="197" width="0.0348%" height="15" fill="rgb(213,74,28)" fg:x="89101" fg:w="42"/><text x="74.1265%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (107 samples, 0.09%)</title><rect x="73.8268%" y="229" width="0.0887%" height="15" fill="rgb(224,132,34)" fg:x="89041" fg:w="107"/><text x="74.0768%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (13 samples, 0.01%)</title><rect x="73.9752%" y="213" width="0.0108%" height="15" fill="rgb(222,101,24)" fg:x="89220" fg:w="13"/><text x="74.2252%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (39 samples, 0.03%)</title><rect x="74.0813%" y="197" width="0.0323%" height="15" fill="rgb(254,142,4)" fg:x="89348" fg:w="39"/><text x="74.3313%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (267 samples, 0.22%)</title><rect x="73.9155%" y="229" width="0.2214%" height="15" fill="rgb(230,229,49)" fg:x="89148" fg:w="267"/><text x="74.1655%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (179 samples, 0.15%)</title><rect x="73.9885%" y="213" width="0.1484%" height="15" fill="rgb(238,70,47)" fg:x="89236" fg:w="179"/><text x="74.2385%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (28 samples, 0.02%)</title><rect x="74.1137%" y="197" width="0.0232%" height="15" fill="rgb(231,160,17)" fg:x="89387" fg:w="28"/><text x="74.3637%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (15 samples, 0.01%)</title><rect x="74.1385%" y="229" width="0.0124%" height="15" fill="rgb(218,68,53)" fg:x="89417" fg:w="15"/><text x="74.3885%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (22 samples, 0.02%)</title><rect x="74.1750%" y="229" width="0.0182%" height="15" fill="rgb(236,111,10)" fg:x="89461" fg:w="22"/><text x="74.4250%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (141 samples, 0.12%)</title><rect x="74.1933%" y="229" width="0.1169%" height="15" fill="rgb(224,34,41)" fg:x="89483" fg:w="141"/><text x="74.4433%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (84 samples, 0.07%)</title><rect x="75.9361%" y="197" width="0.0696%" height="15" fill="rgb(241,118,19)" fg:x="91585" fg:w="84"/><text x="76.1861%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (80 samples, 0.07%)</title><rect x="75.9394%" y="181" width="0.0663%" height="15" fill="rgb(238,129,25)" fg:x="91589" fg:w="80"/><text x="76.1894%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.02%)</title><rect x="75.9875%" y="165" width="0.0182%" height="15" fill="rgb(238,22,31)" fg:x="91647" fg:w="22"/><text x="76.2375%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (93 samples, 0.08%)</title><rect x="75.9295%" y="213" width="0.0771%" height="15" fill="rgb(222,174,48)" fg:x="91577" fg:w="93"/><text x="76.1795%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (26 samples, 0.02%)</title><rect x="76.0281%" y="197" width="0.0216%" height="15" fill="rgb(206,152,40)" fg:x="91696" fg:w="26"/><text x="76.2781%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.01%)</title><rect x="76.0547%" y="197" width="0.0149%" height="15" fill="rgb(218,99,54)" fg:x="91728" fg:w="18"/><text x="76.3047%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.01%)</title><rect x="76.0580%" y="181" width="0.0116%" height="15" fill="rgb(220,174,26)" fg:x="91732" fg:w="14"/><text x="76.3080%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (74 samples, 0.06%)</title><rect x="76.0091%" y="213" width="0.0614%" height="15" fill="rgb(245,116,9)" fg:x="91673" fg:w="74"/><text x="76.2591%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.02%)</title><rect x="76.1218%" y="181" width="0.0199%" height="15" fill="rgb(209,72,35)" fg:x="91809" fg:w="24"/><text x="76.3718%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (95 samples, 0.08%)</title><rect x="76.0704%" y="213" width="0.0788%" height="15" fill="rgb(226,126,21)" fg:x="91747" fg:w="95"/><text x="76.3204%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (60 samples, 0.05%)</title><rect x="76.0994%" y="197" width="0.0497%" height="15" fill="rgb(227,192,1)" fg:x="91782" fg:w="60"/><text x="76.3494%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (35 samples, 0.03%)</title><rect x="76.1525%" y="213" width="0.0290%" height="15" fill="rgb(237,180,29)" fg:x="91846" fg:w="35"/><text x="76.4025%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (153 samples, 0.13%)</title><rect x="76.1832%" y="213" width="0.1269%" height="15" fill="rgb(230,197,35)" fg:x="91883" fg:w="153"/><text x="76.4332%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (67 samples, 0.06%)</title><rect x="76.3324%" y="181" width="0.0556%" height="15" fill="rgb(246,193,31)" fg:x="92063" fg:w="67"/><text x="76.5824%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (55 samples, 0.05%)</title><rect x="76.3424%" y="165" width="0.0456%" height="15" fill="rgb(241,36,4)" fg:x="92075" fg:w="55"/><text x="76.5924%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (52 samples, 0.04%)</title><rect x="76.3449%" y="149" width="0.0431%" height="15" fill="rgb(241,130,17)" fg:x="92078" fg:w="52"/><text x="76.5949%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.02%)</title><rect x="76.3648%" y="133" width="0.0232%" height="15" fill="rgb(206,137,32)" fg:x="92102" fg:w="28"/><text x="76.6148%" y="143.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (103 samples, 0.09%)</title><rect x="76.3100%" y="213" width="0.0854%" height="15" fill="rgb(237,228,51)" fg:x="92036" fg:w="103"/><text x="76.5600%" y="223.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (83 samples, 0.07%)</title><rect x="76.3266%" y="197" width="0.0688%" height="15" fill="rgb(243,6,42)" fg:x="92056" fg:w="83"/><text x="76.5766%" y="207.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (9,073 samples, 7.52%)</title><rect x="68.8744%" y="277" width="7.5227%" height="15" fill="rgb(251,74,28)" fg:x="83068" fg:w="9073"/><text x="69.1244%" y="287.50">tio4905`&lt;t..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (9,039 samples, 7.49%)</title><rect x="68.9026%" y="261" width="7.4945%" height="15" fill="rgb(218,20,49)" fg:x="83102" fg:w="9039"/><text x="69.1526%" y="271.50">tio4905`ti..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (8,511 samples, 7.06%)</title><rect x="69.3403%" y="245" width="7.0567%" height="15" fill="rgb(238,28,14)" fg:x="83630" fg:w="8511"/><text x="69.5903%" y="255.50">tio4905`t..</text></g><g><title>tio4905`alloc::slice::merge_sort (2,492 samples, 2.07%)</title><rect x="74.3309%" y="229" width="2.0662%" height="15" fill="rgb(229,40,46)" fg:x="89649" fg:w="2492"/><text x="74.5809%" y="239.50">t..</text></g><g><title>tio4905`rand::rng::Rng::gen_range (57 samples, 0.05%)</title><rect x="76.3979%" y="277" width="0.0473%" height="15" fill="rgb(244,195,20)" fg:x="92142" fg:w="57"/><text x="76.6479%" y="287.50"></text></g><g><title>tio4905`rand_chacha::guts::refill_wide::impl_avx2 (15 samples, 0.01%)</title><rect x="76.4327%" y="261" width="0.0124%" height="15" fill="rgb(253,56,35)" fg:x="92184" fg:w="15"/><text x="76.6827%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (96 samples, 0.08%)</title><rect x="77.2221%" y="261" width="0.0796%" height="15" fill="rgb(210,149,44)" fg:x="93136" fg:w="96"/><text x="77.4721%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 0.06%)</title><rect x="77.2395%" y="245" width="0.0622%" height="15" fill="rgb(240,135,12)" fg:x="93157" fg:w="75"/><text x="77.4895%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (74 samples, 0.06%)</title><rect x="77.2403%" y="229" width="0.0614%" height="15" fill="rgb(251,24,50)" fg:x="93158" fg:w="74"/><text x="77.4903%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.03%)</title><rect x="77.2735%" y="213" width="0.0282%" height="15" fill="rgb(243,200,47)" fg:x="93198" fg:w="34"/><text x="77.5235%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (64 samples, 0.05%)</title><rect x="77.3141%" y="261" width="0.0531%" height="15" fill="rgb(224,166,26)" fg:x="93247" fg:w="64"/><text x="77.5641%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (39 samples, 0.03%)</title><rect x="77.3348%" y="245" width="0.0323%" height="15" fill="rgb(233,0,47)" fg:x="93272" fg:w="39"/><text x="77.5848%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.02%)</title><rect x="77.3788%" y="261" width="0.0249%" height="15" fill="rgb(253,80,5)" fg:x="93325" fg:w="30"/><text x="77.6288%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="77.7229%" y="245" width="0.0116%" height="15" fill="rgb(214,133,25)" fg:x="93740" fg:w="14"/><text x="77.9729%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (14 samples, 0.01%)</title><rect x="77.7436%" y="245" width="0.0116%" height="15" fill="rgb(209,27,14)" fg:x="93765" fg:w="14"/><text x="77.9936%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.03%)</title><rect x="77.7660%" y="245" width="0.0282%" height="15" fill="rgb(219,102,51)" fg:x="93792" fg:w="34"/><text x="78.0160%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="77.7950%" y="213" width="0.0133%" height="15" fill="rgb(237,18,16)" fg:x="93827" fg:w="16"/><text x="78.0450%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="77.7975%" y="197" width="0.0108%" height="15" fill="rgb(241,85,17)" fg:x="93830" fg:w="13"/><text x="78.0475%" y="207.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,643 samples, 1.36%)</title><rect x="76.4468%" y="277" width="1.3623%" height="15" fill="rgb(236,90,42)" fg:x="92201" fg:w="1643"/><text x="76.6968%" y="287.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (482 samples, 0.40%)</title><rect x="77.4095%" y="261" width="0.3996%" height="15" fill="rgb(249,57,21)" fg:x="93362" fg:w="482"/><text x="77.6595%" y="271.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (18 samples, 0.01%)</title><rect x="77.7942%" y="245" width="0.0149%" height="15" fill="rgb(243,12,36)" fg:x="93826" fg:w="18"/><text x="78.0442%" y="255.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (17 samples, 0.01%)</title><rect x="77.7950%" y="229" width="0.0141%" height="15" fill="rgb(253,128,47)" fg:x="93827" fg:w="17"/><text x="78.0450%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.03%)</title><rect x="78.0039%" y="245" width="0.0265%" height="15" fill="rgb(207,33,20)" fg:x="94079" fg:w="32"/><text x="78.2539%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.02%)</title><rect x="78.0114%" y="229" width="0.0191%" height="15" fill="rgb(233,215,35)" fg:x="94088" fg:w="23"/><text x="78.2614%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.02%)</title><rect x="78.0114%" y="213" width="0.0191%" height="15" fill="rgb(249,188,52)" fg:x="94088" fg:w="23"/><text x="78.2614%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.02%)</title><rect x="78.0346%" y="245" width="0.0174%" height="15" fill="rgb(225,12,32)" fg:x="94116" fg:w="21"/><text x="78.2846%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (15 samples, 0.01%)</title><rect x="78.0396%" y="229" width="0.0124%" height="15" fill="rgb(247,98,14)" fg:x="94122" fg:w="15"/><text x="78.2896%" y="239.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (437 samples, 0.36%)</title><rect x="77.8091%" y="277" width="0.3623%" height="15" fill="rgb(247,219,48)" fg:x="93844" fg:w="437"/><text x="78.0591%" y="287.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (417 samples, 0.35%)</title><rect x="77.8257%" y="261" width="0.3457%" height="15" fill="rgb(253,60,48)" fg:x="93864" fg:w="417"/><text x="78.0757%" y="271.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (135 samples, 0.11%)</title><rect x="78.0595%" y="245" width="0.1119%" height="15" fill="rgb(245,15,52)" fg:x="94146" fg:w="135"/><text x="78.3095%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (22 samples, 0.02%)</title><rect x="78.1723%" y="229" width="0.0182%" height="15" fill="rgb(220,133,28)" fg:x="94282" fg:w="22"/><text x="78.4223%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="78.2610%" y="213" width="0.0174%" height="15" fill="rgb(217,180,4)" fg:x="94389" fg:w="21"/><text x="78.5110%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (24 samples, 0.02%)</title><rect x="78.2784%" y="213" width="0.0199%" height="15" fill="rgb(251,24,1)" fg:x="94410" fg:w="24"/><text x="78.5284%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (90 samples, 0.07%)</title><rect x="78.3713%" y="197" width="0.0746%" height="15" fill="rgb(212,185,49)" fg:x="94522" fg:w="90"/><text x="78.6213%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (22 samples, 0.02%)</title><rect x="78.4459%" y="197" width="0.0182%" height="15" fill="rgb(215,175,22)" fg:x="94612" fg:w="22"/><text x="78.6959%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (96 samples, 0.08%)</title><rect x="78.4641%" y="197" width="0.0796%" height="15" fill="rgb(250,205,14)" fg:x="94634" fg:w="96"/><text x="78.7141%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (88 samples, 0.07%)</title><rect x="78.4707%" y="181" width="0.0730%" height="15" fill="rgb(225,211,22)" fg:x="94642" fg:w="88"/><text x="78.7207%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (298 samples, 0.25%)</title><rect x="78.2983%" y="213" width="0.2471%" height="15" fill="rgb(251,179,42)" fg:x="94434" fg:w="298"/><text x="78.5483%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (47 samples, 0.04%)</title><rect x="78.6532%" y="197" width="0.0390%" height="15" fill="rgb(208,216,51)" fg:x="94862" fg:w="47"/><text x="78.9032%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (117 samples, 0.10%)</title><rect x="78.8563%" y="181" width="0.0970%" height="15" fill="rgb(235,36,11)" fg:x="95107" fg:w="117"/><text x="79.1063%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (401 samples, 0.33%)</title><rect x="78.7012%" y="197" width="0.3325%" height="15" fill="rgb(213,189,28)" fg:x="94920" fg:w="401"/><text x="78.9512%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (97 samples, 0.08%)</title><rect x="78.9533%" y="181" width="0.0804%" height="15" fill="rgb(227,203,42)" fg:x="95224" fg:w="97"/><text x="79.2033%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (590 samples, 0.49%)</title><rect x="78.5454%" y="213" width="0.4892%" height="15" fill="rgb(244,72,36)" fg:x="94732" fg:w="590"/><text x="78.7954%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.02%)</title><rect x="79.0346%" y="213" width="0.0216%" height="15" fill="rgb(213,53,17)" fg:x="95322" fg:w="26"/><text x="79.2846%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (30 samples, 0.02%)</title><rect x="79.0561%" y="213" width="0.0249%" height="15" fill="rgb(207,167,3)" fg:x="95348" fg:w="30"/><text x="79.3061%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (87 samples, 0.07%)</title><rect x="79.0810%" y="213" width="0.0721%" height="15" fill="rgb(216,98,30)" fg:x="95378" fg:w="87"/><text x="79.3310%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (14 samples, 0.01%)</title><rect x="79.1531%" y="213" width="0.0116%" height="15" fill="rgb(236,123,15)" fg:x="95465" fg:w="14"/><text x="79.4031%" y="223.50"></text></g><g><title>tio4905`__rdl_alloc (18 samples, 0.01%)</title><rect x="79.1896%" y="213" width="0.0149%" height="15" fill="rgb(248,81,50)" fg:x="95509" fg:w="18"/><text x="79.4396%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (198 samples, 0.16%)</title><rect x="84.7838%" y="181" width="0.1642%" height="15" fill="rgb(214,120,4)" fg:x="102256" fg:w="198"/><text x="85.0338%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (154 samples, 0.13%)</title><rect x="84.8202%" y="165" width="0.1277%" height="15" fill="rgb(208,179,34)" fg:x="102300" fg:w="154"/><text x="85.0702%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (83 samples, 0.07%)</title><rect x="84.8791%" y="149" width="0.0688%" height="15" fill="rgb(227,140,7)" fg:x="102371" fg:w="83"/><text x="85.1291%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (120 samples, 0.10%)</title><rect x="85.3393%" y="149" width="0.0995%" height="15" fill="rgb(214,22,6)" fg:x="102926" fg:w="120"/><text x="85.5893%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (972 samples, 0.81%)</title><rect x="84.9479%" y="181" width="0.8059%" height="15" fill="rgb(207,137,27)" fg:x="102454" fg:w="972"/><text x="85.1979%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (932 samples, 0.77%)</title><rect x="84.9811%" y="165" width="0.7728%" height="15" fill="rgb(210,8,46)" fg:x="102494" fg:w="932"/><text x="85.2311%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (379 samples, 0.31%)</title><rect x="85.4396%" y="149" width="0.3142%" height="15" fill="rgb(240,16,54)" fg:x="103047" fg:w="379"/><text x="85.6896%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (72 samples, 0.06%)</title><rect x="85.6941%" y="133" width="0.0597%" height="15" fill="rgb(211,209,29)" fg:x="103354" fg:w="72"/><text x="85.9441%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,319 samples, 1.09%)</title><rect x="84.6635%" y="197" width="1.0936%" height="15" fill="rgb(226,228,24)" fg:x="102111" fg:w="1319"/><text x="84.9135%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (40 samples, 0.03%)</title><rect x="85.7671%" y="197" width="0.0332%" height="15" fill="rgb(222,84,9)" fg:x="103442" fg:w="40"/><text x="86.0171%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (20 samples, 0.02%)</title><rect x="85.8683%" y="181" width="0.0166%" height="15" fill="rgb(234,203,30)" fg:x="103564" fg:w="20"/><text x="86.1183%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (25 samples, 0.02%)</title><rect x="85.8849%" y="181" width="0.0207%" height="15" fill="rgb(238,109,14)" fg:x="103584" fg:w="25"/><text x="86.1349%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (78 samples, 0.06%)</title><rect x="85.9056%" y="181" width="0.0647%" height="15" fill="rgb(233,206,34)" fg:x="103609" fg:w="78"/><text x="86.1556%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (69 samples, 0.06%)</title><rect x="85.9130%" y="165" width="0.0572%" height="15" fill="rgb(220,167,47)" fg:x="103618" fg:w="69"/><text x="86.1630%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (207 samples, 0.17%)</title><rect x="85.8003%" y="197" width="0.1716%" height="15" fill="rgb(238,105,10)" fg:x="103482" fg:w="207"/><text x="86.0503%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (41 samples, 0.03%)</title><rect x="86.0805%" y="181" width="0.0340%" height="15" fill="rgb(213,227,17)" fg:x="103820" fg:w="41"/><text x="86.3305%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (88 samples, 0.07%)</title><rect x="86.2953%" y="165" width="0.0730%" height="15" fill="rgb(217,132,38)" fg:x="104079" fg:w="88"/><text x="86.5453%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (561 samples, 0.47%)</title><rect x="85.9719%" y="197" width="0.4651%" height="15" fill="rgb(242,146,4)" fg:x="103689" fg:w="561"/><text x="86.2219%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (380 samples, 0.32%)</title><rect x="86.1220%" y="181" width="0.3151%" height="15" fill="rgb(212,61,9)" fg:x="103870" fg:w="380"/><text x="86.3720%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (83 samples, 0.07%)</title><rect x="86.3682%" y="165" width="0.0688%" height="15" fill="rgb(247,126,22)" fg:x="104167" fg:w="83"/><text x="86.6182%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (19 samples, 0.02%)</title><rect x="86.4412%" y="197" width="0.0158%" height="15" fill="rgb(220,196,2)" fg:x="104255" fg:w="19"/><text x="86.6912%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (24 samples, 0.02%)</title><rect x="86.4570%" y="197" width="0.0199%" height="15" fill="rgb(208,46,4)" fg:x="104274" fg:w="24"/><text x="86.7070%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (30 samples, 0.02%)</title><rect x="86.5050%" y="197" width="0.0249%" height="15" fill="rgb(252,104,46)" fg:x="104332" fg:w="30"/><text x="86.7550%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (220 samples, 0.18%)</title><rect x="86.5299%" y="197" width="0.1824%" height="15" fill="rgb(237,152,48)" fg:x="104362" fg:w="220"/><text x="86.7799%" y="207.50"></text></g><g><title>tio4905`DYLD-STUB$$memcpy (21 samples, 0.02%)</title><rect x="86.7132%" y="197" width="0.0174%" height="15" fill="rgb(221,59,37)" fg:x="104583" fg:w="21"/><text x="86.9632%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (34 samples, 0.03%)</title><rect x="88.6658%" y="149" width="0.0282%" height="15" fill="rgb(209,202,51)" fg:x="106938" fg:w="34"/><text x="88.9158%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.02%)</title><rect x="88.6757%" y="133" width="0.0182%" height="15" fill="rgb(228,81,30)" fg:x="106950" fg:w="22"/><text x="88.9257%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (47 samples, 0.04%)</title><rect x="88.6558%" y="165" width="0.0390%" height="15" fill="rgb(227,42,39)" fg:x="106926" fg:w="47"/><text x="88.9058%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.02%)</title><rect x="88.7595%" y="133" width="0.0199%" height="15" fill="rgb(221,26,2)" fg:x="107051" fg:w="24"/><text x="89.0095%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (242 samples, 0.20%)</title><rect x="88.6376%" y="181" width="0.2007%" height="15" fill="rgb(254,61,31)" fg:x="106904" fg:w="242"/><text x="88.8876%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (173 samples, 0.14%)</title><rect x="88.6948%" y="165" width="0.1434%" height="15" fill="rgb(222,173,38)" fg:x="106973" fg:w="173"/><text x="88.9448%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (167 samples, 0.14%)</title><rect x="88.6998%" y="149" width="0.1385%" height="15" fill="rgb(218,50,12)" fg:x="106979" fg:w="167"/><text x="88.9498%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (71 samples, 0.06%)</title><rect x="88.7794%" y="133" width="0.0589%" height="15" fill="rgb(223,88,40)" fg:x="107075" fg:w="71"/><text x="89.0294%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (34 samples, 0.03%)</title><rect x="88.8100%" y="117" width="0.0282%" height="15" fill="rgb(237,54,19)" fg:x="107112" fg:w="34"/><text x="89.0600%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (75 samples, 0.06%)</title><rect x="88.8838%" y="165" width="0.0622%" height="15" fill="rgb(251,129,25)" fg:x="107201" fg:w="75"/><text x="89.1338%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (14 samples, 0.01%)</title><rect x="88.9460%" y="165" width="0.0116%" height="15" fill="rgb(238,97,19)" fg:x="107276" fg:w="14"/><text x="89.1960%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (167 samples, 0.14%)</title><rect x="88.8424%" y="181" width="0.1385%" height="15" fill="rgb(240,169,18)" fg:x="107151" fg:w="167"/><text x="89.0924%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (28 samples, 0.02%)</title><rect x="88.9576%" y="165" width="0.0232%" height="15" fill="rgb(230,187,49)" fg:x="107290" fg:w="28"/><text x="89.2076%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (26 samples, 0.02%)</title><rect x="88.9593%" y="149" width="0.0216%" height="15" fill="rgb(209,44,26)" fg:x="107292" fg:w="26"/><text x="89.2093%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (13 samples, 0.01%)</title><rect x="89.0123%" y="165" width="0.0108%" height="15" fill="rgb(244,0,6)" fg:x="107356" fg:w="13"/><text x="89.2623%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (43 samples, 0.04%)</title><rect x="89.0588%" y="149" width="0.0357%" height="15" fill="rgb(248,18,21)" fg:x="107412" fg:w="43"/><text x="89.3088%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (163 samples, 0.14%)</title><rect x="88.9808%" y="181" width="0.1351%" height="15" fill="rgb(245,180,19)" fg:x="107318" fg:w="163"/><text x="89.2308%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (111 samples, 0.09%)</title><rect x="89.0239%" y="165" width="0.0920%" height="15" fill="rgb(252,118,36)" fg:x="107370" fg:w="111"/><text x="89.2739%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (26 samples, 0.02%)</title><rect x="89.0944%" y="149" width="0.0216%" height="15" fill="rgb(210,224,19)" fg:x="107455" fg:w="26"/><text x="89.3444%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (17 samples, 0.01%)</title><rect x="89.1160%" y="181" width="0.0141%" height="15" fill="rgb(218,30,24)" fg:x="107481" fg:w="17"/><text x="89.3660%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (74 samples, 0.06%)</title><rect x="89.1301%" y="181" width="0.0614%" height="15" fill="rgb(219,75,50)" fg:x="107498" fg:w="74"/><text x="89.3801%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (197 samples, 0.16%)</title><rect x="89.1989%" y="181" width="0.1633%" height="15" fill="rgb(234,72,50)" fg:x="107581" fg:w="197"/><text x="89.4489%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (137 samples, 0.11%)</title><rect x="89.4020%" y="149" width="0.1136%" height="15" fill="rgb(219,100,48)" fg:x="107826" fg:w="137"/><text x="89.6520%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (121 samples, 0.10%)</title><rect x="89.4153%" y="133" width="0.1003%" height="15" fill="rgb(253,5,41)" fg:x="107842" fg:w="121"/><text x="89.6653%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (119 samples, 0.10%)</title><rect x="89.4170%" y="117" width="0.0987%" height="15" fill="rgb(247,181,11)" fg:x="107844" fg:w="119"/><text x="89.6670%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (65 samples, 0.05%)</title><rect x="89.4617%" y="101" width="0.0539%" height="15" fill="rgb(222,223,25)" fg:x="107898" fg:w="65"/><text x="89.7117%" y="111.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (191 samples, 0.16%)</title><rect x="89.3622%" y="181" width="0.1584%" height="15" fill="rgb(214,198,28)" fg:x="107778" fg:w="191"/><text x="89.6122%" y="191.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (157 samples, 0.13%)</title><rect x="89.3904%" y="165" width="0.1302%" height="15" fill="rgb(230,46,43)" fg:x="107812" fg:w="157"/><text x="89.6404%" y="175.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (13,633 samples, 11.30%)</title><rect x="78.2204%" y="229" width="11.3036%" height="15" fill="rgb(233,65,53)" fg:x="94340" fg:w="13633"/><text x="78.4704%" y="239.50">tio4905`tio4905::..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (12,425 samples, 10.30%)</title><rect x="79.2219%" y="213" width="10.3020%" height="15" fill="rgb(221,121,27)" fg:x="95548" fg:w="12425"/><text x="79.4719%" y="223.50">tio4905`tio4905..</text></g><g><title>tio4905`alloc::slice::merge_sort (3,348 samples, 2.78%)</title><rect x="86.7480%" y="197" width="2.7759%" height="15" fill="rgb(247,70,47)" fg:x="104625" fg:w="3348"/><text x="86.9980%" y="207.50">ti..</text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,692 samples, 11.35%)</title><rect x="78.1723%" y="261" width="11.3525%" height="15" fill="rgb(228,85,35)" fg:x="94282" fg:w="13692"/><text x="78.4223%" y="271.50">tio4905`&lt;alloc::v..</text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (13,692 samples, 11.35%)</title><rect x="78.1723%" y="245" width="11.3525%" height="15" fill="rgb(209,50,18)" fg:x="94282" fg:w="13692"/><text x="78.4223%" y="255.50">tio4905`&lt;tio4905:..</text></g><g><title>tio4905`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (13 samples, 0.01%)</title><rect x="89.5247%" y="85" width="0.0108%" height="15" fill="rgb(250,19,35)" fg:x="107974" fg:w="13"/><text x="89.7747%" y="95.50"></text></g><g><title>tio4905`tio4905::common::instance::parser::parse (14 samples, 0.01%)</title><rect x="89.5247%" y="261" width="0.0116%" height="15" fill="rgb(253,107,29)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="271.50"></text></g><g><title>tio4905`serde_json::de::from_reader (14 samples, 0.01%)</title><rect x="89.5247%" y="245" width="0.0116%" height="15" fill="rgb(252,179,29)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="255.50"></text></g><g><title>tio4905`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (14 samples, 0.01%)</title><rect x="89.5247%" y="229" width="0.0116%" height="15" fill="rgb(238,194,6)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="239.50"></text></g><g><title>tio4905`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.01%)</title><rect x="89.5247%" y="213" width="0.0116%" height="15" fill="rgb(238,164,29)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="223.50"></text></g><g><title>tio4905`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.01%)</title><rect x="89.5247%" y="197" width="0.0116%" height="15" fill="rgb(224,25,9)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="207.50"></text></g><g><title>tio4905`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14 samples, 0.01%)</title><rect x="89.5247%" y="181" width="0.0116%" height="15" fill="rgb(244,153,23)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="191.50"></text></g><g><title>tio4905`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.01%)</title><rect x="89.5247%" y="165" width="0.0116%" height="15" fill="rgb(212,203,14)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="175.50"></text></g><g><title>tio4905`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.01%)</title><rect x="89.5247%" y="149" width="0.0116%" height="15" fill="rgb(220,164,20)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="159.50"></text></g><g><title>tio4905`&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (14 samples, 0.01%)</title><rect x="89.5247%" y="133" width="0.0116%" height="15" fill="rgb(222,203,48)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="143.50"></text></g><g><title>tio4905`&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (14 samples, 0.01%)</title><rect x="89.5247%" y="117" width="0.0116%" height="15" fill="rgb(215,159,22)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="127.50"></text></g><g><title>tio4905`&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (14 samples, 0.01%)</title><rect x="89.5247%" y="101" width="0.0116%" height="15" fill="rgb(216,183,47)" fg:x="107974" fg:w="14"/><text x="89.7747%" y="111.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (13,712 samples, 11.37%)</title><rect x="78.1714%" y="277" width="11.3691%" height="15" fill="rgb(229,195,25)" fg:x="94281" fg:w="13712"/><text x="78.4214%" y="287.50">tio4905`tio4905::..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (18 samples, 0.01%)</title><rect x="89.5405%" y="277" width="0.0149%" height="15" fill="rgb(224,132,51)" fg:x="107993" fg:w="18"/><text x="89.7905%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (14 samples, 0.01%)</title><rect x="89.5438%" y="261" width="0.0116%" height="15" fill="rgb(240,63,7)" fg:x="107997" fg:w="14"/><text x="89.7938%" y="271.50"></text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (31,819 samples, 26.38%)</title><rect x="63.1782%" y="437" width="26.3822%" height="15" fill="rgb(249,182,41)" fg:x="76198" fg:w="31819"/><text x="63.4282%" y="447.50">tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (31,819 samples, 26.38%)</title><rect x="63.1782%" y="421" width="26.3822%" height="15" fill="rgb(243,47,26)" fg:x="76198" fg:w="31819"/><text x="63.4282%" y="431.50">tio4905`rayon::iter::plumbing::bridge_prod..</text></g><g><title>tio4905`rayon_core::registry::in_worker (31,819 samples, 26.38%)</title><rect x="63.1782%" y="405" width="26.3822%" height="15" fill="rgb(233,48,2)" fg:x="76198" fg:w="31819"/><text x="63.4282%" y="415.50">tio4905`rayon_core::registry::in_worker</text></g><g><title>tio4905`rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (25,161 samples, 20.86%)</title><rect x="68.6986%" y="389" width="20.8618%" height="15" fill="rgb(244,165,34)" fg:x="82856" fg:w="25161"/><text x="68.9486%" y="399.50">tio4905`rayon_core::job::StackJob..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (25,161 samples, 20.86%)</title><rect x="68.6986%" y="373" width="20.8618%" height="15" fill="rgb(207,89,7)" fg:x="82856" fg:w="25161"/><text x="68.9486%" y="383.50">tio4905`rayon::iter::plumbing::br..</text></g><g><title>tio4905`rayon_core::registry::in_worker (25,161 samples, 20.86%)</title><rect x="68.6986%" y="357" width="20.8618%" height="15" fill="rgb(244,117,36)" fg:x="82856" fg:w="25161"/><text x="68.9486%" y="367.50">tio4905`rayon_core::registry::in_..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (25,161 samples, 20.86%)</title><rect x="68.6986%" y="341" width="20.8618%" height="15" fill="rgb(226,144,34)" fg:x="82856" fg:w="25161"/><text x="68.9486%" y="351.50">tio4905`rayon::iter::plumbing::br..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (25,161 samples, 20.86%)</title><rect x="68.6986%" y="325" width="20.8618%" height="15" fill="rgb(213,23,19)" fg:x="82856" fg:w="25161"/><text x="68.9486%" y="335.50">tio4905`&lt;rayon::iter::for_each::F..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (25,161 samples, 20.86%)</title><rect x="68.6986%" y="309" width="20.8618%" height="15" fill="rgb(217,75,12)" fg:x="82856" fg:w="25161"/><text x="68.9486%" y="319.50">tio4905`core::ops::function::impl..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (25,151 samples, 20.85%)</title><rect x="68.7069%" y="293" width="20.8535%" height="15" fill="rgb(224,159,17)" fg:x="82866" fg:w="25151"/><text x="68.9569%" y="303.50">tio4905`tio4905::genetic_algorith..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.01%)</title><rect x="89.5944%" y="341" width="0.0108%" height="15" fill="rgb(217,118,1)" fg:x="108058" fg:w="13"/><text x="89.8444%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (30 samples, 0.02%)</title><rect x="89.6226%" y="325" width="0.0249%" height="15" fill="rgb(232,180,48)" fg:x="108092" fg:w="30"/><text x="89.8726%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (58 samples, 0.05%)</title><rect x="89.6101%" y="341" width="0.0481%" height="15" fill="rgb(230,27,33)" fg:x="108077" fg:w="58"/><text x="89.8601%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.02%)</title><rect x="89.7121%" y="309" width="0.0191%" height="15" fill="rgb(205,31,21)" fg:x="108200" fg:w="23"/><text x="89.9621%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (96 samples, 0.08%)</title><rect x="89.6582%" y="341" width="0.0796%" height="15" fill="rgb(253,59,4)" fg:x="108135" fg:w="96"/><text x="89.9082%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (65 samples, 0.05%)</title><rect x="89.6839%" y="325" width="0.0539%" height="15" fill="rgb(224,201,9)" fg:x="108166" fg:w="65"/><text x="89.9339%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.02%)</title><rect x="89.7486%" y="341" width="0.0182%" height="15" fill="rgb(229,206,30)" fg:x="108244" fg:w="22"/><text x="89.9986%" y="351.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::crossover::SJ2OX as tio4905::genetic_algorithm::operators::crossover::Crossover&gt;::apply (84 samples, 0.07%)</title><rect x="89.7760%" y="341" width="0.0696%" height="15" fill="rgb(212,67,47)" fg:x="108277" fg:w="84"/><text x="90.0260%" y="351.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::operators::crossover::match_blocks (60 samples, 0.05%)</title><rect x="89.7959%" y="325" width="0.0497%" height="15" fill="rgb(211,96,50)" fg:x="108301" fg:w="60"/><text x="90.0459%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (52 samples, 0.04%)</title><rect x="89.9426%" y="293" width="0.0431%" height="15" fill="rgb(252,114,18)" fg:x="108478" fg:w="52"/><text x="90.1926%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (61 samples, 0.05%)</title><rect x="89.9932%" y="293" width="0.0506%" height="15" fill="rgb(223,58,37)" fg:x="108539" fg:w="61"/><text x="90.2432%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (55 samples, 0.05%)</title><rect x="89.9982%" y="277" width="0.0456%" height="15" fill="rgb(237,70,4)" fg:x="108545" fg:w="55"/><text x="90.2482%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (164 samples, 0.14%)</title><rect x="89.9095%" y="309" width="0.1360%" height="15" fill="rgb(244,85,46)" fg:x="108438" fg:w="164"/><text x="90.1595%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (16 samples, 0.01%)</title><rect x="90.1134%" y="293" width="0.0133%" height="15" fill="rgb(223,39,52)" fg:x="108684" fg:w="16"/><text x="90.3634%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (60 samples, 0.05%)</title><rect x="90.2063%" y="277" width="0.0497%" height="15" fill="rgb(218,200,14)" fg:x="108796" fg:w="60"/><text x="90.4563%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (327 samples, 0.27%)</title><rect x="90.0454%" y="309" width="0.2711%" height="15" fill="rgb(208,171,16)" fg:x="108602" fg:w="327"/><text x="90.2954%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (223 samples, 0.18%)</title><rect x="90.1317%" y="293" width="0.1849%" height="15" fill="rgb(234,200,18)" fg:x="108706" fg:w="223"/><text x="90.3817%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (73 samples, 0.06%)</title><rect x="90.2560%" y="277" width="0.0605%" height="15" fill="rgb(228,45,11)" fg:x="108856" fg:w="73"/><text x="90.5060%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.01%)</title><rect x="90.3166%" y="309" width="0.0116%" height="15" fill="rgb(237,182,11)" fg:x="108929" fg:w="14"/><text x="90.5666%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (38 samples, 0.03%)</title><rect x="90.3381%" y="309" width="0.0315%" height="15" fill="rgb(241,175,49)" fg:x="108955" fg:w="38"/><text x="90.5881%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (84 samples, 0.07%)</title><rect x="92.5519%" y="261" width="0.0696%" height="15" fill="rgb(247,38,35)" fg:x="111625" fg:w="84"/><text x="92.8019%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (49 samples, 0.04%)</title><rect x="92.5809%" y="245" width="0.0406%" height="15" fill="rgb(228,39,49)" fg:x="111660" fg:w="49"/><text x="92.8309%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (125 samples, 0.10%)</title><rect x="92.5204%" y="277" width="0.1036%" height="15" fill="rgb(226,101,26)" fg:x="111587" fg:w="125"/><text x="92.7704%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (74 samples, 0.06%)</title><rect x="92.8031%" y="245" width="0.0614%" height="15" fill="rgb(206,141,19)" fg:x="111928" fg:w="74"/><text x="93.0531%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (488 samples, 0.40%)</title><rect x="92.6240%" y="277" width="0.4046%" height="15" fill="rgb(211,200,13)" fg:x="111712" fg:w="488"/><text x="92.8740%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (474 samples, 0.39%)</title><rect x="92.6356%" y="261" width="0.3930%" height="15" fill="rgb(241,121,6)" fg:x="111726" fg:w="474"/><text x="92.8856%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (196 samples, 0.16%)</title><rect x="92.8661%" y="245" width="0.1625%" height="15" fill="rgb(234,221,29)" fg:x="112004" fg:w="196"/><text x="93.1161%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (60 samples, 0.05%)</title><rect x="92.9789%" y="229" width="0.0497%" height="15" fill="rgb(229,136,5)" fg:x="112140" fg:w="60"/><text x="93.2289%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (684 samples, 0.57%)</title><rect x="92.4648%" y="293" width="0.5671%" height="15" fill="rgb(238,36,11)" fg:x="111520" fg:w="684"/><text x="92.7148%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (20 samples, 0.02%)</title><rect x="93.0328%" y="293" width="0.0166%" height="15" fill="rgb(251,55,41)" fg:x="112205" fg:w="20"/><text x="93.2828%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (23 samples, 0.02%)</title><rect x="93.0743%" y="277" width="0.0191%" height="15" fill="rgb(242,34,40)" fg:x="112255" fg:w="23"/><text x="93.3243%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (47 samples, 0.04%)</title><rect x="93.1024%" y="277" width="0.0390%" height="15" fill="rgb(215,42,17)" fg:x="112289" fg:w="47"/><text x="93.3524%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (45 samples, 0.04%)</title><rect x="93.1041%" y="261" width="0.0373%" height="15" fill="rgb(207,44,46)" fg:x="112291" fg:w="45"/><text x="93.3541%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (113 samples, 0.09%)</title><rect x="93.0494%" y="293" width="0.0937%" height="15" fill="rgb(211,206,28)" fg:x="112225" fg:w="113"/><text x="93.2994%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (15 samples, 0.01%)</title><rect x="93.1920%" y="277" width="0.0124%" height="15" fill="rgb(237,167,16)" fg:x="112397" fg:w="15"/><text x="93.4420%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (41 samples, 0.03%)</title><rect x="93.2716%" y="261" width="0.0340%" height="15" fill="rgb(233,66,6)" fg:x="112493" fg:w="41"/><text x="93.5216%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (229 samples, 0.19%)</title><rect x="93.1431%" y="293" width="0.1899%" height="15" fill="rgb(246,123,29)" fg:x="112338" fg:w="229"/><text x="93.3931%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (153 samples, 0.13%)</title><rect x="93.2061%" y="277" width="0.1269%" height="15" fill="rgb(209,62,40)" fg:x="112414" fg:w="153"/><text x="93.4561%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (33 samples, 0.03%)</title><rect x="93.3056%" y="261" width="0.0274%" height="15" fill="rgb(218,4,25)" fg:x="112534" fg:w="33"/><text x="93.5556%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (19 samples, 0.02%)</title><rect x="93.3429%" y="293" width="0.0158%" height="15" fill="rgb(253,91,49)" fg:x="112579" fg:w="19"/><text x="93.5929%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (79 samples, 0.07%)</title><rect x="93.3736%" y="293" width="0.0655%" height="15" fill="rgb(228,155,29)" fg:x="112616" fg:w="79"/><text x="93.6236%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (75 samples, 0.06%)</title><rect x="94.1389%" y="277" width="0.0622%" height="15" fill="rgb(243,57,37)" fg:x="113539" fg:w="75"/><text x="94.3889%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (63 samples, 0.05%)</title><rect x="94.1488%" y="261" width="0.0522%" height="15" fill="rgb(244,167,17)" fg:x="113551" fg:w="63"/><text x="94.3988%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.05%)</title><rect x="94.1538%" y="245" width="0.0473%" height="15" fill="rgb(207,181,38)" fg:x="113557" fg:w="57"/><text x="94.4038%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.01%)</title><rect x="94.2193%" y="261" width="0.0108%" height="15" fill="rgb(211,8,23)" fg:x="113636" fg:w="13"/><text x="94.4693%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.01%)</title><rect x="94.2334%" y="261" width="0.0149%" height="15" fill="rgb(235,11,44)" fg:x="113653" fg:w="18"/><text x="94.4834%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.01%)</title><rect x="94.2350%" y="245" width="0.0133%" height="15" fill="rgb(248,18,52)" fg:x="113655" fg:w="16"/><text x="94.4850%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (56 samples, 0.05%)</title><rect x="94.2027%" y="277" width="0.0464%" height="15" fill="rgb(208,4,7)" fg:x="113616" fg:w="56"/><text x="94.4527%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.02%)</title><rect x="94.2947%" y="245" width="0.0207%" height="15" fill="rgb(240,17,39)" fg:x="113727" fg:w="25"/><text x="94.5447%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (85 samples, 0.07%)</title><rect x="94.2491%" y="277" width="0.0705%" height="15" fill="rgb(207,170,3)" fg:x="113672" fg:w="85"/><text x="94.4991%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.04%)</title><rect x="94.2757%" y="261" width="0.0439%" height="15" fill="rgb(236,100,52)" fg:x="113704" fg:w="53"/><text x="94.5257%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.02%)</title><rect x="94.3229%" y="277" width="0.0182%" height="15" fill="rgb(246,78,51)" fg:x="113761" fg:w="22"/><text x="94.5729%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (65 samples, 0.05%)</title><rect x="94.3437%" y="277" width="0.0539%" height="15" fill="rgb(211,17,15)" fg:x="113786" fg:w="65"/><text x="94.5937%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (41 samples, 0.03%)</title><rect x="94.4166%" y="213" width="0.0340%" height="15" fill="rgb(209,59,46)" fg:x="113874" fg:w="41"/><text x="94.6666%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.02%)</title><rect x="94.4324%" y="197" width="0.0182%" height="15" fill="rgb(210,92,25)" fg:x="113893" fg:w="22"/><text x="94.6824%" y="207.50"></text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (5,518 samples, 4.58%)</title><rect x="89.8763%" y="325" width="4.5752%" height="15" fill="rgb(238,174,52)" fg:x="108398" fg:w="5518"/><text x="90.1263%" y="335.50">tio49..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (4,883 samples, 4.05%)</title><rect x="90.4028%" y="309" width="4.0487%" height="15" fill="rgb(230,73,7)" fg:x="109033" fg:w="4883"/><text x="90.6528%" y="319.50">tio4..</text></g><g><title>tio4905`alloc::slice::merge_sort (1,208 samples, 1.00%)</title><rect x="93.4499%" y="293" width="1.0016%" height="15" fill="rgb(243,124,40)" fg:x="112708" fg:w="1208"/><text x="93.6999%" y="303.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (65 samples, 0.05%)</title><rect x="94.3976%" y="277" width="0.0539%" height="15" fill="rgb(244,170,11)" fg:x="113851" fg:w="65"/><text x="94.6476%" y="287.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (53 samples, 0.04%)</title><rect x="94.4075%" y="261" width="0.0439%" height="15" fill="rgb(207,114,54)" fg:x="113863" fg:w="53"/><text x="94.6575%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (48 samples, 0.04%)</title><rect x="94.4116%" y="245" width="0.0398%" height="15" fill="rgb(205,42,20)" fg:x="113868" fg:w="48"/><text x="94.6616%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (44 samples, 0.04%)</title><rect x="94.4150%" y="229" width="0.0365%" height="15" fill="rgb(230,30,28)" fg:x="113872" fg:w="44"/><text x="94.6650%" y="239.50"></text></g><g><title>tio4905`&lt;tio4905::genetic_algorithm::operators::mutation::Greedy as tio4905::genetic_algorithm::operators::mutation::Mutation&gt;::apply (5,557 samples, 4.61%)</title><rect x="89.8456%" y="341" width="4.6075%" height="15" fill="rgb(205,73,54)" fg:x="108361" fg:w="5557"/><text x="90.0956%" y="351.50">tio49..</text></g><g><title>tio4905`rand::rng::Rng::gen_range (122 samples, 0.10%)</title><rect x="94.4589%" y="341" width="0.1012%" height="15" fill="rgb(254,227,23)" fg:x="113925" fg:w="122"/><text x="94.7089%" y="351.50"></text></g><g><title>tio4905`rand_chacha::guts::refill_wide::impl_avx2 (24 samples, 0.02%)</title><rect x="94.5402%" y="325" width="0.0199%" height="15" fill="rgb(228,202,34)" fg:x="114023" fg:w="24"/><text x="94.7902%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (55 samples, 0.05%)</title><rect x="95.2665%" y="293" width="0.0456%" height="15" fill="rgb(222,225,37)" fg:x="114899" fg:w="55"/><text x="95.5165%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (27 samples, 0.02%)</title><rect x="95.2897%" y="277" width="0.0224%" height="15" fill="rgb(221,14,54)" fg:x="114927" fg:w="27"/><text x="95.5397%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (64 samples, 0.05%)</title><rect x="95.2599%" y="309" width="0.0531%" height="15" fill="rgb(254,102,2)" fg:x="114891" fg:w="64"/><text x="95.5099%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (200 samples, 0.17%)</title><rect x="95.2416%" y="325" width="0.1658%" height="15" fill="rgb(232,104,17)" fg:x="114869" fg:w="200"/><text x="95.4916%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (114 samples, 0.09%)</title><rect x="95.3129%" y="309" width="0.0945%" height="15" fill="rgb(250,220,14)" fg:x="114955" fg:w="114"/><text x="95.5629%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (109 samples, 0.09%)</title><rect x="95.3171%" y="293" width="0.0904%" height="15" fill="rgb(241,158,9)" fg:x="114960" fg:w="109"/><text x="95.5671%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (50 samples, 0.04%)</title><rect x="95.3660%" y="277" width="0.0415%" height="15" fill="rgb(246,9,43)" fg:x="115019" fg:w="50"/><text x="95.6160%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.01%)</title><rect x="95.3950%" y="261" width="0.0124%" height="15" fill="rgb(206,73,33)" fg:x="115054" fg:w="15"/><text x="95.6450%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.02%)</title><rect x="95.4257%" y="309" width="0.0158%" height="15" fill="rgb(222,79,8)" fg:x="115091" fg:w="19"/><text x="95.6757%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.01%)</title><rect x="95.4265%" y="293" width="0.0149%" height="15" fill="rgb(234,8,54)" fg:x="115092" fg:w="18"/><text x="95.6765%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.03%)</title><rect x="95.4116%" y="325" width="0.0307%" height="15" fill="rgb(209,134,38)" fg:x="115074" fg:w="37"/><text x="95.6616%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (52 samples, 0.04%)</title><rect x="95.4423%" y="325" width="0.0431%" height="15" fill="rgb(230,127,29)" fg:x="115111" fg:w="52"/><text x="95.6923%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.03%)</title><rect x="95.4555%" y="309" width="0.0298%" height="15" fill="rgb(242,44,41)" fg:x="115127" fg:w="36"/><text x="95.7055%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.02%)</title><rect x="95.5078%" y="325" width="0.0166%" height="15" fill="rgb(222,56,43)" fg:x="115190" fg:w="20"/><text x="95.7578%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="95.7275%" y="309" width="0.0174%" height="15" fill="rgb(238,39,47)" fg:x="115455" fg:w="21"/><text x="95.9775%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 0.02%)</title><rect x="95.7283%" y="293" width="0.0166%" height="15" fill="rgb(226,79,43)" fg:x="115456" fg:w="20"/><text x="95.9783%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.01%)</title><rect x="95.7300%" y="277" width="0.0149%" height="15" fill="rgb(242,105,53)" fg:x="115458" fg:w="18"/><text x="95.9800%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.02%)</title><rect x="95.7457%" y="309" width="0.0182%" height="15" fill="rgb(251,132,46)" fg:x="115477" fg:w="22"/><text x="95.9957%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.02%)</title><rect x="95.7640%" y="309" width="0.0224%" height="15" fill="rgb(231,77,14)" fg:x="115499" fg:w="27"/><text x="96.0140%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.01%)</title><rect x="95.7723%" y="293" width="0.0141%" height="15" fill="rgb(240,135,9)" fg:x="115509" fg:w="17"/><text x="96.0223%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.01%)</title><rect x="95.7938%" y="309" width="0.0149%" height="15" fill="rgb(248,109,14)" fg:x="115535" fg:w="18"/><text x="96.0438%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.01%)</title><rect x="95.8129%" y="277" width="0.0124%" height="15" fill="rgb(227,146,52)" fg:x="115558" fg:w="15"/><text x="96.0629%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="95.8145%" y="261" width="0.0108%" height="15" fill="rgb(232,54,3)" fg:x="115560" fg:w="13"/><text x="96.0645%" y="271.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (1,523 samples, 1.26%)</title><rect x="94.5642%" y="341" width="1.2628%" height="15" fill="rgb(229,201,43)" fg:x="114052" fg:w="1523"/><text x="94.8142%" y="351.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (363 samples, 0.30%)</title><rect x="95.5260%" y="325" width="0.3010%" height="15" fill="rgb(252,161,33)" fg:x="115212" fg:w="363"/><text x="95.7760%" y="335.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.02%)</title><rect x="95.8087%" y="309" width="0.0182%" height="15" fill="rgb(226,146,40)" fg:x="115553" fg:w="22"/><text x="96.0587%" y="319.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (18 samples, 0.01%)</title><rect x="95.8121%" y="293" width="0.0149%" height="15" fill="rgb(219,47,25)" fg:x="115557" fg:w="18"/><text x="96.0621%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.02%)</title><rect x="95.8336%" y="325" width="0.0199%" height="15" fill="rgb(250,135,13)" fg:x="115583" fg:w="24"/><text x="96.0836%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.01%)</title><rect x="95.8402%" y="309" width="0.0133%" height="15" fill="rgb(219,229,18)" fg:x="115591" fg:w="16"/><text x="96.0902%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.01%)</title><rect x="96.0210%" y="293" width="0.0133%" height="15" fill="rgb(217,152,27)" fg:x="115809" fg:w="16"/><text x="96.2710%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (48 samples, 0.04%)</title><rect x="96.0168%" y="309" width="0.0398%" height="15" fill="rgb(225,71,47)" fg:x="115804" fg:w="48"/><text x="96.2668%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.02%)</title><rect x="96.0343%" y="293" width="0.0224%" height="15" fill="rgb(220,139,14)" fg:x="115825" fg:w="27"/><text x="96.2843%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.02%)</title><rect x="96.0343%" y="277" width="0.0224%" height="15" fill="rgb(247,54,32)" fg:x="115825" fg:w="27"/><text x="96.2843%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.01%)</title><rect x="96.0459%" y="261" width="0.0108%" height="15" fill="rgb(252,131,39)" fg:x="115839" fg:w="13"/><text x="96.2959%" y="271.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::chromosome::Chromosome::makespan (404 samples, 0.33%)</title><rect x="95.8270%" y="341" width="0.3350%" height="15" fill="rgb(210,108,39)" fg:x="115575" fg:w="404"/><text x="96.0770%" y="351.50"></text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (364 samples, 0.30%)</title><rect x="95.8601%" y="325" width="0.3018%" height="15" fill="rgb(205,23,29)" fg:x="115615" fg:w="364"/><text x="96.1101%" y="335.50"></text></g><g><title>tio4905`alloc::slice::merge_sort (92 samples, 0.08%)</title><rect x="96.0857%" y="309" width="0.0763%" height="15" fill="rgb(246,139,46)" fg:x="115887" fg:w="92"/><text x="96.3357%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="96.2026%" y="277" width="0.0149%" height="15" fill="rgb(250,81,26)" fg:x="116028" fg:w="18"/><text x="96.4526%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (50 samples, 0.04%)</title><rect x="96.2598%" y="261" width="0.0415%" height="15" fill="rgb(214,104,7)" fg:x="116097" fg:w="50"/><text x="96.5098%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (44 samples, 0.04%)</title><rect x="96.3087%" y="261" width="0.0365%" height="15" fill="rgb(233,189,8)" fg:x="116156" fg:w="44"/><text x="96.5587%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (42 samples, 0.03%)</title><rect x="96.3104%" y="245" width="0.0348%" height="15" fill="rgb(228,141,17)" fg:x="116158" fg:w="42"/><text x="96.5604%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (150 samples, 0.12%)</title><rect x="96.2216%" y="277" width="0.1244%" height="15" fill="rgb(247,157,1)" fg:x="116051" fg:w="150"/><text x="96.4716%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (29 samples, 0.02%)</title><rect x="96.4198%" y="261" width="0.0240%" height="15" fill="rgb(249,225,5)" fg:x="116290" fg:w="29"/><text x="96.6698%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (74 samples, 0.06%)</title><rect x="96.5243%" y="245" width="0.0614%" height="15" fill="rgb(242,55,13)" fg:x="116416" fg:w="74"/><text x="96.7743%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (219 samples, 0.18%)</title><rect x="96.4472%" y="261" width="0.1816%" height="15" fill="rgb(230,49,50)" fg:x="116323" fg:w="219"/><text x="96.6972%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (52 samples, 0.04%)</title><rect x="96.5856%" y="245" width="0.0431%" height="15" fill="rgb(241,111,38)" fg:x="116490" fg:w="52"/><text x="96.8356%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (343 samples, 0.28%)</title><rect x="96.3460%" y="277" width="0.2844%" height="15" fill="rgb(252,155,4)" fg:x="116201" fg:w="343"/><text x="96.5960%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.01%)</title><rect x="96.6304%" y="277" width="0.0149%" height="15" fill="rgb(212,69,32)" fg:x="116544" fg:w="18"/><text x="96.8804%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (18 samples, 0.01%)</title><rect x="96.6453%" y="277" width="0.0149%" height="15" fill="rgb(243,107,47)" fg:x="116562" fg:w="18"/><text x="96.8953%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (61 samples, 0.05%)</title><rect x="96.6603%" y="277" width="0.0506%" height="15" fill="rgb(247,130,12)" fg:x="116580" fg:w="61"/><text x="96.9103%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.01%)</title><rect x="96.7108%" y="277" width="0.0108%" height="15" fill="rgb(233,74,16)" fg:x="116641" fg:w="13"/><text x="96.9608%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (108 samples, 0.09%)</title><rect x="98.3401%" y="229" width="0.0895%" height="15" fill="rgb(208,58,18)" fg:x="118606" fg:w="108"/><text x="98.5901%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (60 samples, 0.05%)</title><rect x="98.3799%" y="213" width="0.0497%" height="15" fill="rgb(242,225,1)" fg:x="118654" fg:w="60"/><text x="98.6299%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (141 samples, 0.12%)</title><rect x="98.3152%" y="245" width="0.1169%" height="15" fill="rgb(249,39,40)" fg:x="118576" fg:w="141"/><text x="98.5652%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (50 samples, 0.04%)</title><rect x="98.6129%" y="213" width="0.0415%" height="15" fill="rgb(207,72,44)" fg:x="118935" fg:w="50"/><text x="98.8629%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (443 samples, 0.37%)</title><rect x="98.4321%" y="245" width="0.3673%" height="15" fill="rgb(215,193,12)" fg:x="118717" fg:w="443"/><text x="98.6821%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (429 samples, 0.36%)</title><rect x="98.4437%" y="229" width="0.3557%" height="15" fill="rgb(248,41,39)" fg:x="118731" fg:w="429"/><text x="98.6937%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (173 samples, 0.14%)</title><rect x="98.6560%" y="213" width="0.1434%" height="15" fill="rgb(253,85,4)" fg:x="118987" fg:w="173"/><text x="98.9060%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (60 samples, 0.05%)</title><rect x="98.7497%" y="197" width="0.0497%" height="15" fill="rgb(243,70,31)" fg:x="119100" fg:w="60"/><text x="98.9997%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (662 samples, 0.55%)</title><rect x="98.2514%" y="261" width="0.5489%" height="15" fill="rgb(253,195,26)" fg:x="118499" fg:w="662"/><text x="98.5014%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (22 samples, 0.02%)</title><rect x="98.8052%" y="261" width="0.0182%" height="15" fill="rgb(243,42,11)" fg:x="119167" fg:w="22"/><text x="99.0552%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (26 samples, 0.02%)</title><rect x="98.8458%" y="245" width="0.0216%" height="15" fill="rgb(239,66,17)" fg:x="119216" fg:w="26"/><text x="99.0958%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (40 samples, 0.03%)</title><rect x="98.8740%" y="245" width="0.0332%" height="15" fill="rgb(217,132,21)" fg:x="119250" fg:w="40"/><text x="99.1240%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (37 samples, 0.03%)</title><rect x="98.8765%" y="229" width="0.0307%" height="15" fill="rgb(252,202,21)" fg:x="119253" fg:w="37"/><text x="99.1265%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (102 samples, 0.08%)</title><rect x="98.8235%" y="261" width="0.0846%" height="15" fill="rgb(233,98,36)" fg:x="119189" fg:w="102"/><text x="99.0735%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (19 samples, 0.02%)</title><rect x="98.9495%" y="245" width="0.0158%" height="15" fill="rgb(216,153,54)" fg:x="119341" fg:w="19"/><text x="99.1995%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (34 samples, 0.03%)</title><rect x="99.0357%" y="229" width="0.0282%" height="15" fill="rgb(250,99,7)" fg:x="119445" fg:w="34"/><text x="99.2857%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (219 samples, 0.18%)</title><rect x="98.9080%" y="261" width="0.1816%" height="15" fill="rgb(207,56,50)" fg:x="119291" fg:w="219"/><text x="99.1580%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (147 samples, 0.12%)</title><rect x="98.9677%" y="245" width="0.1219%" height="15" fill="rgb(244,61,34)" fg:x="119363" fg:w="147"/><text x="99.2177%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (31 samples, 0.03%)</title><rect x="99.0639%" y="229" width="0.0257%" height="15" fill="rgb(241,50,38)" fg:x="119479" fg:w="31"/><text x="99.3139%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (25 samples, 0.02%)</title><rect x="99.0971%" y="261" width="0.0207%" height="15" fill="rgb(212,166,30)" fg:x="119519" fg:w="25"/><text x="99.3471%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (54 samples, 0.04%)</title><rect x="99.1435%" y="261" width="0.0448%" height="15" fill="rgb(249,127,32)" fg:x="119575" fg:w="54"/><text x="99.3935%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.02%)</title><rect x="99.6999%" y="213" width="0.0240%" height="15" fill="rgb(209,103,0)" fg:x="120246" fg:w="29"/><text x="99.9499%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.01%)</title><rect x="99.7098%" y="197" width="0.0141%" height="15" fill="rgb(238,209,51)" fg:x="120258" fg:w="17"/><text x="99.9598%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.03%)</title><rect x="99.6949%" y="229" width="0.0298%" height="15" fill="rgb(237,56,23)" fg:x="120240" fg:w="36"/><text x="99.9449%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (71 samples, 0.06%)</title><rect x="99.6882%" y="245" width="0.0589%" height="15" fill="rgb(215,153,46)" fg:x="120232" fg:w="71"/><text x="99.9382%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (27 samples, 0.02%)</title><rect x="99.7247%" y="229" width="0.0224%" height="15" fill="rgb(224,49,31)" fg:x="120276" fg:w="27"/><text x="99.9747%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.02%)</title><rect x="99.7256%" y="213" width="0.0216%" height="15" fill="rgb(250,18,42)" fg:x="120277" fg:w="26"/><text x="99.9756%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (20 samples, 0.02%)</title><rect x="99.7654%" y="229" width="0.0166%" height="15" fill="rgb(215,176,39)" fg:x="120325" fg:w="20"/><text x="100.0154%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (48 samples, 0.04%)</title><rect x="99.7479%" y="245" width="0.0398%" height="15" fill="rgb(223,77,29)" fg:x="120304" fg:w="48"/><text x="99.9979%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.03%)</title><rect x="99.7877%" y="245" width="0.0274%" height="15" fill="rgb(234,94,52)" fg:x="120352" fg:w="33"/><text x="100.0377%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.02%)</title><rect x="99.7960%" y="229" width="0.0191%" height="15" fill="rgb(220,154,50)" fg:x="120362" fg:w="23"/><text x="100.0460%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (43 samples, 0.04%)</title><rect x="99.8192%" y="245" width="0.0357%" height="15" fill="rgb(212,11,10)" fg:x="120390" fg:w="43"/><text x="100.0692%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (48 samples, 0.04%)</title><rect x="99.8566%" y="245" width="0.0398%" height="15" fill="rgb(205,166,19)" fg:x="120435" fg:w="48"/><text x="100.1066%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.03%)</title><rect x="99.9030%" y="213" width="0.0323%" height="15" fill="rgb(244,198,16)" fg:x="120491" fg:w="39"/><text x="100.1530%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.03%)</title><rect x="99.9071%" y="197" width="0.0282%" height="15" fill="rgb(219,69,12)" fg:x="120496" fg:w="34"/><text x="100.1571%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (32 samples, 0.03%)</title><rect x="99.9088%" y="181" width="0.0265%" height="15" fill="rgb(245,30,7)" fg:x="120498" fg:w="32"/><text x="100.1588%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.01%)</title><rect x="99.9212%" y="165" width="0.0141%" height="15" fill="rgb(218,221,48)" fg:x="120513" fg:w="17"/><text x="100.1712%" y="175.50"></text></g><g><title>tio4905`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (50 samples, 0.04%)</title><rect x="99.8964%" y="245" width="0.0415%" height="15" fill="rgb(216,66,15)" fg:x="120483" fg:w="50"/><text x="100.1464%" y="255.50"></text></g><g><title>tio4905`alloc::raw_vec::finish_grow (44 samples, 0.04%)</title><rect x="99.9013%" y="229" width="0.0365%" height="15" fill="rgb(226,122,50)" fg:x="120489" fg:w="44"/><text x="100.1513%" y="239.50"></text></g><g><title>tio4905`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,555 samples, 3.78%)</title><rect x="96.1619%" y="325" width="3.7767%" height="15" fill="rgb(239,156,16)" fg:x="115979" fg:w="4555"/><text x="96.4119%" y="335.50">tio4..</text></g><g><title>tio4905`&lt;tio4905::common::construction::mddr::MDDR as core::iter::traits::iterator::Iterator&gt;::next (4,555 samples, 3.78%)</title><rect x="96.1619%" y="309" width="3.7767%" height="15" fill="rgb(224,27,38)" fg:x="115979" fg:w="4555"/><text x="96.4119%" y="319.50">tio4..</text></g><g><title>tio4905`tio4905::common::best_insertion::find_best_insertion (4,525 samples, 3.75%)</title><rect x="96.1868%" y="293" width="3.7518%" height="15" fill="rgb(224,39,27)" fg:x="116009" fg:w="4525"/><text x="96.4368%" y="303.50">tio4..</text></g><g><title>tio4905`tio4905::common::makespan::Makespan::makespan (3,846 samples, 3.19%)</title><rect x="96.7498%" y="277" width="3.1888%" height="15" fill="rgb(215,92,29)" fg:x="116688" fg:w="3846"/><text x="96.9998%" y="287.50">tio..</text></g><g><title>tio4905`alloc::slice::merge_sort (897 samples, 0.74%)</title><rect x="99.1949%" y="261" width="0.7437%" height="15" fill="rgb(207,159,16)" fg:x="119637" fg:w="897"/><text x="99.4449%" y="271.50"></text></g><g><title>tio4905`tio4905::genetic_algorithm::entities::options::Options::build (4,567 samples, 3.79%)</title><rect x="96.1619%" y="341" width="3.7866%" height="15" fill="rgb(238,163,47)" fg:x="115979" fg:w="4567"/><text x="96.4119%" y="351.50">tio4..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::run_steady_state::_{{closure}} (45 samples, 0.04%)</title><rect x="99.9486%" y="341" width="0.0373%" height="15" fill="rgb(219,91,49)" fg:x="120546" fg:w="45"/><text x="100.1986%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (29 samples, 0.02%)</title><rect x="99.9619%" y="325" width="0.0240%" height="15" fill="rgb(227,167,31)" fg:x="120562" fg:w="29"/><text x="100.2119%" y="335.50"></text></g><g><title>all (120,608 samples, 100%)</title><rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(234,80,54)" fg:x="0" fg:w="120608"/><text x="0.2500%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (120,606 samples, 100.00%)</title><rect x="0.0017%" y="597" width="99.9983%" height="15" fill="rgb(212,114,2)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="607.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (120,606 samples, 100.00%)</title><rect x="0.0017%" y="581" width="99.9983%" height="15" fill="rgb(234,50,24)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="591.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>tio4905`std::sys::unix::thread::Thread::new::thread_start (120,606 samples, 100.00%)</title><rect x="0.0017%" y="565" width="99.9983%" height="15" fill="rgb(221,68,8)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="575.50">tio4905`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>tio4905`core::ops::function::FnOnce::call_once{{vtable.shim}} (120,606 samples, 100.00%)</title><rect x="0.0017%" y="549" width="99.9983%" height="15" fill="rgb(254,180,31)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="559.50">tio4905`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>tio4905`std::sys_common::backtrace::__rust_begin_short_backtrace (120,606 samples, 100.00%)</title><rect x="0.0017%" y="533" width="99.9983%" height="15" fill="rgb(247,130,50)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="543.50">tio4905`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tio4905`rayon_core::registry::ThreadBuilder::run (120,606 samples, 100.00%)</title><rect x="0.0017%" y="517" width="99.9983%" height="15" fill="rgb(211,109,4)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="527.50">tio4905`rayon_core::registry::ThreadBuilder::run</text></g><g><title>tio4905`rayon_core::registry::WorkerThread::wait_until_cold (120,606 samples, 100.00%)</title><rect x="0.0017%" y="501" width="99.9983%" height="15" fill="rgb(238,50,21)" fg:x="2" fg:w="120606"/><text x="0.2517%" y="511.50">tio4905`rayon_core::registry::WorkerThread::wait_until_cold</text></g><g><title>tio4905`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (120,605 samples, 100.00%)</title><rect x="0.0025%" y="485" width="99.9975%" height="15" fill="rgb(225,57,45)" fg:x="3" fg:w="120605"/><text x="0.2525%" y="495.50">tio4905`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (93,924 samples, 77.88%)</title><rect x="22.1246%" y="469" width="77.8754%" height="15" fill="rgb(209,196,50)" fg:x="26684" fg:w="93924"/><text x="22.3746%" y="479.50">tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper</text></g><g><title>tio4905`rayon_core::registry::in_worker (93,924 samples, 77.88%)</title><rect x="22.1246%" y="453" width="77.8754%" height="15" fill="rgb(242,140,13)" fg:x="26684" fg:w="93924"/><text x="22.3746%" y="463.50">tio4905`rayon_core::registry::in_worker</text></g><g><title>tio4905`rayon_core::registry::WorkerThread::wait_until_cold (12,591 samples, 10.44%)</title><rect x="89.5604%" y="437" width="10.4396%" height="15" fill="rgb(217,111,7)" fg:x="108017" fg:w="12591"/><text x="89.8104%" y="447.50">tio4905`rayon_c..</text></g><g><title>tio4905`&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (12,591 samples, 10.44%)</title><rect x="89.5604%" y="421" width="10.4396%" height="15" fill="rgb(253,193,51)" fg:x="108017" fg:w="12591"/><text x="89.8104%" y="431.50">tio4905`&lt;rayon_..</text></g><g><title>tio4905`rayon::iter::plumbing::bridge_producer_consumer::helper (12,591 samples, 10.44%)</title><rect x="89.5604%" y="405" width="10.4396%" height="15" fill="rgb(252,70,29)" fg:x="108017" fg:w="12591"/><text x="89.8104%" y="415.50">tio4905`rayon::..</text></g><g><title>tio4905`&lt;rayon::iter::for_each::ForEachConsumer&lt;F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12,591 samples, 10.44%)</title><rect x="89.5604%" y="389" width="10.4396%" height="15" fill="rgb(232,127,12)" fg:x="108017" fg:w="12591"/><text x="89.8104%" y="399.50">tio4905`&lt;rayon:..</text></g><g><title>tio4905`core::ops::function::impls::_&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12,591 samples, 10.44%)</title><rect x="89.5604%" y="373" width="10.4396%" height="15" fill="rgb(211,180,21)" fg:x="108017" fg:w="12591"/><text x="89.8104%" y="383.50">tio4905`core::o..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::run (12,577 samples, 10.43%)</title><rect x="89.5720%" y="357" width="10.4280%" height="15" fill="rgb(229,72,13)" fg:x="108031" fg:w="12577"/><text x="89.8220%" y="367.50">tio4905`tio4905..</text></g><g><title>tio4905`tio4905::genetic_algorithm::ga::GA::tournament (17 samples, 0.01%)</title><rect x="99.9859%" y="341" width="0.0141%" height="15" fill="rgb(240,211,49)" fg:x="120591" fg:w="17"/><text x="100.2359%" y="351.50"></text></g></svg></svg>